{"version":3,"sources":["Components/CreateTeams.tsx","Components/Messenger.tsx","Components/NextRound.tsx","Components/NextTurn.tsx","Components/Board.tsx","Components/Game1.tsx","Components/WaitingAnim.tsx","Components/StartGame.tsx","Components/Room.tsx","Components/CreateJoinRoom.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CreateTeams","idRoom","socketRef","useState","displayAddPlayer","setDisplayAddPlayer","displayAddPlayerByTeamNumber","setDisplayAddPlayerByTeamNumber","setMyId","teamName","setTeamName","teams","setTeams","teamPlayers","setTeamPlayers","users","setUsers","useEffect","current","id","emit","on","usersData","teamsData","handleChangeSelect","e","idAlreadyExist","map","player","target","value","undefined","user","pseudo","playing","className","onSubmit","preventDefault","length","teamId","uuidv4","teamObj","name","points","players","playedCount","idTeam","onChange","placeholder","type","team","index","onClick","removeTeamObj","handleRemoveTeam","playerId","removePlayerObj","handleRemovePlayer","displayAddPlayers","teamPlayerObj","handleAddPlayerToTeam","multiple","available","Messenger","myPseudo","setMyPseudo","myId","message","setMessage","messages","setMessages","messageBody","localStorage","getItem","messageObject","body","style","filter","NextRound","yourPlayingRef","useRef","round","setRound","displayStartGame","setDisplayStartGame","start","rulesData","forEach","width","NextTurn","playerName","height","Board","imPlaying","bool","canvas","document","getElementById","ctx","getContext","inputColor","querySelector","clearRect","lineWidth","drawOnCanvas","dataDrawing","widthOfLine","strokeStyle","colorOfLine","image","Image","onload","drawImage","src","base64ImageData","parseInt","getComputedStyle","getPropertyValue","mouse","x","y","last_mouse","addEventListener","pageX","this","offsetLeft","pageY","offsetTop","lineJoin","lineCap","onPaint","removeEventListener","beginPath","moveTo","lineTo","closePath","stroke","toDataURL","drawingObj","requestAnimationFrame","changePenWidth","newLineWidth","parseFloat","currentTarget","getAttribute","classList","remove","querySelectorAll","penWidth","add","newLineColor","changePenColor","allPenWidth","changePenToEraser","Game1","thisRound","displayEndTurn","setDisplayEndTurn","displayNextRound","setDisplayNextRound","words","setWords","actualWord","setActualWord","actualPoints","setActualPoints","actualPointsDelay","setActualPointsDelay","actualTeam","setActualTeam","actualPlayer","setActualPlayer","time","setTime","forAnimationTime","setForAnimationTime","getRandomInteger","min","max","Math","floor","random","timeDraw","randomNumber","round1","round2","round3","word","setTimeout","displayBool","setInterval","goodRandomWord","wordCircle","pointsPosition","pointsPositionDraw","drop","console","log","justifyContent","transform","splice","addPointObj","idPlayer","nextRound","updatedWordsObj","passRandomWord","endTurn","offset","stopColor","cx","cy","r","strokeLinecap","animation","marginLeft","WaitingAnim","StartGame","startGamePreview","setStartGamePreview","setActualPlayerId","Room","roomData","error","displayAddWord","setDisplayAddWord","displaySetWordsSize","setDisplaySetWordsSize","displayCreateTeam","setDisplayCreateTeam","setWord","wordsLength","setWordsLength","setAllWords","nbrWords","setNbrWords","drawTime","setDrawTime","rules","setRules","inputRef","React","data","Object","keys","ref","defaultValue","select","execCommand","focus","copyLink","admin","numberOfWords","window","alert","wordData","CreateJoinRoom","displayJoin","setDisplayJoin","displayCreate","setDisplayCreate","displayRoom","setDisplayRoom","allRooms","setAllRooms","teamPlayedCount","setRoomData","roomName","setRoomName","roomIdCopy","setRoomIdCopy","setError","io","connect","rooms","roomId","room","joinObj","App","displayCreateJoinRoom","setDisplayCreateJoinRoom","newPseudo","setNewPseudo","ancientPseudo","setAnciantPseudo","setItem","autoPlay","infiniteLoop","dynamicHeight","showThumbs","fill","enableBackground","viewBox","xmlns","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cea4d011.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { AdminObj, TeamObj } from '../Types';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Style/createTeams.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n    playing: boolean\n}\n\nconst CreateTeams: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [displayAddPlayer, setDisplayAddPlayer] = useState<boolean>(false)\n    const [displayAddPlayerByTeamNumber, setDisplayAddPlayerByTeamNumber] = useState<number>(0)\n    // DISPLAY //\n    const [myId, setMyId] = useState<string | number>()\n\n    const [teamName, setTeamName] = useState<string>('')\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n    // TEAMS //\n\n    const [users, setUsers] = useState<AdminObj[]>()\n    // USERS //\n\n    useEffect(() => {\n        setMyId(socketRef.current.id)\n\n        socketRef.current.emit(\"ask users\", idRoom)\n        socketRef.current.emit(\"ask teams\", idRoom)\n        socketRef.current.emit(\"ask messages\", idRoom)\n        \n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {                      \n            setUsers(usersData);\n        })\n\n        socketRef.current.on(\"teams\", (teamsData: TeamObj[]) => {                                                                 \n            setTeams(teamsData)\n        })\n\n    }, [displayAddPlayer])\n\n    const handleCreateTeam = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        if (teamName.length !== 0) {\n            let teamId = uuidv4()\n\n            let teamObj = {}\n\n            if (teams?.length === 0) {\n                teamObj = {\n                    name: teamName,\n                    points: 0,\n                    players: [],\n                    playedCount: 0,\n                    idTeam: teamId,\n                    playing: true,\n                    idRoom\n                }\n            } else {\n                teamObj = {\n                    name: teamName,\n                    points: 0,\n                    players: [],\n                    playedCount: 0,\n                    idTeam: teamId,\n                    playing: false,\n                    idRoom\n                }\n            }\n            setTeamName('') \n            socketRef.current.emit(\"create team\", teamObj)\n        }\n    }\n\n    const displayAddPlayers = (index: number) => {\n        setDisplayAddPlayer(!displayAddPlayer)\n\n        setDisplayAddPlayerByTeamNumber(index)\n    }\n\n    const handleChangeSelect = (e: any) => {\n        let idAlreadyExist\n        teamPlayers.map((player) => {\n            if (player.id === e.target.value) {                \n                idAlreadyExist = true\n            }\n        })    \n        \n        if (idAlreadyExist !== true && users !== undefined) {\n            users.map((user) => {\n                if (user !== null && user !== undefined && user.id === e.target.value) {                    \n                    setTeamPlayers([...teamPlayers, {pseudo: user.pseudo, id: user.id, playing: false}])\n                } \n            })\n        }\n    }\n\n    const handleAddPlayerToTeam = (e: any, teamId: string | number) => {\n        e.preventDefault()\n\n        const teamPlayerObj = {\n            teamPlayers,\n            teamId,\n            idRoom\n        }\n\n        setTeamPlayers([])\n        setDisplayAddPlayer(!displayAddPlayer)\n        \n        socketRef.current.emit(\"place player in team\", teamPlayerObj)\n    }\n\n    const handleRemovePlayer = (playerId: string | number | undefined, teamId: string | number) => {        \n        \n        const removePlayerObj = {\n            playerId,\n            teamId,\n            playing : false,\n            idRoom\n        }\n        \n        socketRef.current.emit(\"remove player from team\", removePlayerObj)\n    }\n\n    const handleRemoveTeam = (teamId: string | number) => {\n        const removeTeamObj = {\n            teamId,\n            idRoom\n        }\n\n        socketRef.current.emit(\"remove team\", removeTeamObj)\n    }\n\n    // const handleRemovePlayerFromPreviewTeam = (playerId: string | number | undefined,) => {\n    //     setTeamPlayers(prevTeamPlayers => (\n    //         prevTeamPlayers.filter((player) => player.id !== playerId)\n    //     ))        \n    // }\n\n    return (\n        <div className=\"team col-md-7 slide\">\n            <div>\n                <h3 className=\"mt-2\">Équipes</h3>\n                <form onSubmit={handleCreateTeam}>\n                    <input value={teamName} onChange={(e) => setTeamName(e.target.value)} placeholder=\"Nom de l'équipe\" className=\"mx-2 mon-input\" type=\"text\"/>\n                    <button type=\"submit\" className=\"mx-2 mon-bouton\">Valider</button>\n                </form>\n            </div> \n                <ul className=\"row justify-content-center mt-4 px-3\">\n                    { teams !== undefined\n                        ? teams.map((team, index) => {                        \n                            return <li className=\"p-1 my-2 col-md-6 slide\" key={index}>\n                                    <div className=\"team-border\">\n                                        <i onClick={() => handleRemoveTeam(team.idTeam)} className=\"mon-bouton rounded-circle fas fa-times\"></i>\n                                        <h4>{team.name}</h4>\n                                        <div className=\"row p-1 justify-content-center\">     \n                                        <ul className=\"col-md-8\">\n                                                {team.players.map((player, index) => {\n                                                    return <li className=\"grow\" key={index}>{player.pseudo} <i onClick={() => handleRemovePlayer(player.id, team.idTeam)} className=\"fas fa-times-circle\"></i></li>\n                                                })}\n                                            </ul>                                       \n                                            <button className=\"col-md-4 my-2 room-bouton rounded\" onClick={() => displayAddPlayers(index)} type=\"button\">\n                                                Ajouter joueur <i className=\"fas fa-caret-down\"></i>\n                                            </button>                                            \n                                        </div>                                        \n                                        <div className=\"row justify-content-center\">\n                                            { displayAddPlayer && displayAddPlayerByTeamNumber === index\n                                                ? <form onSubmit={(e) => handleAddPlayerToTeam(e, team.idTeam)} className=\"col-md-10 p-1 team-form dropdown-unfold\">\n                                                    <select multiple={true} onChange={handleChangeSelect}>\n                                                        { users?.map((user, index) => {                                                            \n                                                            if (user.available === true) {\n                                                                return <option value={user.id} key={index}>{user.pseudo}</option>                                                                                                                                                                                                \n                                                            } \n                                                        })}\n                                                    </select>\n                                                    <ul>\n                                                        { teamPlayers.map((player, index) => {\n                                                            return <li className=\"slide preview-player\"\n                                                                       key={index}\n                                                                       id={`${player.id}`}>\n                                                                {player.pseudo} \n                                                                {/* <i onClick={() => handleRemovePlayerFromPreviewTeam(player.id)} \n                                                                   className=\"mx-1 fas fa-backspace\">\n                                                                </i>  */}\n                                                                <hr/>\n                                                            </li>\n                                                        })}\n                                                    </ul>\n                                                    <button className=\"orange-button\" type=\"submit\">\n                                                        <i className=\"fas fa-check\"></i>\n                                                    </button>\n                                                 </form>\n        \n                                                : ''\n                                            }\n                                        </div>                                        \n                                    </div>\n                                   </li>\n                        })\n\n                        : ''\n                    }\n                </ul>\n        </div>\n    )\n}\n\nexport default CreateTeams\n","import React, { useEffect, useState } from 'react'\nimport { BodyMessageObject } from '../Types'\nimport ReactScrollableFeed from 'react-scrollable-feed'\nimport './Style/messenger.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Messenger: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [myPseudo, setMyPseudo] = useState<string | null>('')\n    const [myId, setMyId] = useState<string | number>()\n    const [message, setMessage] = useState<string>('')\n    const [messages, setMessages] = useState<BodyMessageObject []>([])\n\n    useEffect(() => {\n        setMyId(socketRef.current.id)\n\n        socketRef.current.on(\"messages\", (messageBody: BodyMessageObject[]) => {                             \n            setMessages(messageBody)\n        })\n\n        setMyPseudo(localStorage.getItem('myPseudo'))\n    }, [messages])\n\n    const sendMessage = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        if (message !== '') {\n            const messageObject = {\n                body: { \n                    message,\n                    myPseudo,\n                    id: myId\n                }, \n                idRoom\n            }\n            setMessage('')            \n            socketRef.current.emit(\"send message\", messageObject)\n        }\n    }\n\n    return (\n        <div className=\"col-md-7 messenger slide\">\n            <h3 className=\"mt-2\">Messages</h3>\n            <ul id=\"messages\">\n            <ReactScrollableFeed>\n                { messages !== undefined\n                    ? <>\n                        {messages.map((messageBody, index) => {                                                   \n                            if (messageBody.id === myId) {\n                            return <div key={index} className=\"new-message row justify-content-end\">\n                                    <li className=\"your-message text-end my-2 mr-4 px-3\">\n                                        <p className=\"mt-2\">{messageBody.message}</p>                            \n                                    </li>\n                                </div> \n                            } else {\n                            return <div key={index} className=\"new-message row justify-content-start\">\n                                    <li className=\"others-message text-start my-2 mr-4 px-3\">\n                                        <p className=\"mt-2\"> <span>{messageBody.myPseudo}</span> - {messageBody.message}</p>                            \n                                    </li>\n                                </div> \n                            }\n                            \n                })}\n                    </>\n\n                    : ''\n                }\n            </ReactScrollableFeed>\n            \n            </ul>\n            <form onSubmit={sendMessage} className=\"message-form row justify-content-between\">\n                <input className=\"send-input\" placeholder=\"Écrit un truc...\" value={message} onChange={(e) => setMessage(e.target.value)} />\n                <button className=\"mon-bouton rounded-circle\" type=\"submit\" style={{ filter: 'hue-rotate(18deg)'}}><i className=\"fas fa-paper-plane\"></i></button>\n            </form>\n        </div>\n    )\n}\n\nexport default Messenger\n","import React, { useEffect, useRef, useState } from 'react'\nimport { RulesObj, TeamObj } from '../Types'\nimport StartGame from './StartGame'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst NextRound: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n\n    const [teams, setTeams] = useState<TeamObj []>()\n    const [round, setRound] = useState<number>(0)\n    const [displayStartGame, setDisplayStartGame] = useState(false)\n\n    useEffect(() => {\n        socketRef.current.on(\"start game prvw\", (start: boolean) => {\n            setDisplayStartGame(start)\n        })\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setRound(rulesData.round)\n        })\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {   \n            setTeams(teams)\n            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                    \n                                yourPlayingRef.current = true\n                            }  \n                        }                        \n                    })\n                }\n            })\n        });\n    }, [])\n\n    const startNextRound = () => {\n        socketRef.current.emit(\"start game preview\", idRoom)        \n\n        socketRef.current.emit(\"set playing team and player\", idRoom)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        <>\n            { displayStartGame\n                ? <StartGame socketRef={socketRef} idRoom={idRoom} />\n\n                : <>\n                    <h5>Phase {round} fini !</h5>\n\n                    <div className=\"row justify-content-between mx-auto\" style={{ width: '80%'}}>\n                        {teams?.map((team, index) => {\n\n\n                            return <>\n                                    <div className=\"team-results col-md-3 grow\">\n                                        <h4>{team.name}</h4> \n                                        <p> {team.points} {team.points <= 1 ? 'point' : 'points'}</p> \n                                    </div>\n                                </>\n                        })}\n                    </div>                    \n\n                    { yourPlayingRef.current === true\n                        ? <button onClick={() => startNextRound()} className=\"mon-bouton mx-auto\">\n                            Phase suivante !\n                        </button>\n\n                        :''\n                    }\n                    \n                  </>\n\n            }\n            \n        </>\n    )\n}\n\nexport default NextRound\n","import React, { useEffect, useRef, useState } from 'react'\nimport { RoomObj, TeamObj } from '../Types'\nimport StartGameTransition from './StartGame';\n\ntype Props = {\n    playerName: string | null | undefined\n    team: string | undefined\n    points: number\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst NextTurn: React.FC<Props> = ({ playerName, team, points, idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n\n    const [displayStartGame, setDisplayStartGame] = useState(false)\n    // const [updateTeamPlayedCount, setUpdateTeamPlayedCount] = useState<number>(0)\n\n    useEffect(() => {\n        socketRef.current.on(\"start game prvw\", (start: boolean) => {\n            setDisplayStartGame(start)\n        })\n\n        // socketRef.current.emit(\"ask room\", idRoom);\n\n        // socketRef.current.on(\"room\", (room: RoomObj) => {\n        //     setUpdateTeamPlayedCount(room.teamPlayedCount)\n        // });\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                    \n                                yourPlayingRef.current = true\n                            }  \n                        }\n                    })\n                }\n            })\n        });\n    }, [])\n\n    const startGamePreview = () => {\n        socketRef.current.emit(\"start game preview\", idRoom)\n\n        socketRef.current.emit(\"set playing team and player\", idRoom)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        <>\n            { displayStartGame\n                ? <StartGameTransition socketRef={socketRef} idRoom={idRoom} />\n\n                : <div className=\"transition-game d-flex flex-column justify-content-center align-itmes-center\" style={{height: '75vh'}}>      \n                    <div className=\"player-name\">\n                        {playerName}\n                    </div>       \n                    <p className=\"text-points\">\n                       <span> a remporté <span className=\"team-name\">{points}</span> {points <= 1 ? 'point' : 'points'} pour la team  </span> <span className=\"team-name ms-1\"> {team} </span>\n                    </p>                        \n                    { yourPlayingRef.current === true\n                        ? <button onClick={() => startGamePreview()} className=\"mon-bouton mx-auto\">\n                            Suivant\n                        </button>  \n\n                        :''\n                    }\n                    \n                  </div>      \n            }            \n        </>\n    )\n}\n\nexport default NextTurn","import React, { useEffect, useRef, useState } from 'react'\nimport { TeamObj } from '../Types';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n    imPlaying: boolean | undefined\n}\n\ntype mouseNumber = {\n    x: number\n    y: number\n}\n\ntype DrawData = {\n    idRoom: string | number\n    last_mouse: mouseNumber\n    mouse: mouseNumber\n    widthOfLine: number\n    colorOfLine: string\n    base64ImageData: string\n}\n\n\n\nconst Board: React.FC<Props>  = ({ idRoom, socketRef, imPlaying }) => {  \n    \n    useEffect(() => {\n        socketRef.current.on(\"board erased\", (bool: boolean) => {\n            let canvas = document.getElementById('board') as HTMLCanvasElement;  \n            \n            if (canvas !== null) {\n                let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;       \n            \n                let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n\n                if (inputColor !== null) {\n                    inputColor.value = '#000'\n                }\n                \n                ctx.clearRect(0, 0, 0, 0)\n                            \n                ctx.lineWidth = 4;\n\n                canvas.height = 400\n            }\n    \n            \n        })\n        \n        if (imPlaying === true) {\n            drawOnCanvas();\n        } else {\n            socketRef.current.on(\"canvas data drawn img\", (dataDrawing: DrawData) => {                                                        \n                let canvas = document.getElementById('board') as HTMLCanvasElement; \n                \n                if (canvas !== null) {\n                    let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n                    ctx.lineWidth = dataDrawing.widthOfLine;\n                    ctx.strokeStyle = dataDrawing.colorOfLine;\n\n                    let image = new Image()\n                    image.onload = function() {\n                        ctx.drawImage(image, 0, 0)\n                    }\n                    image.src = dataDrawing.base64ImageData\n                }\n\n\n                // ctx.beginPath();\n                // ctx.moveTo(dataDrawing.last_mouse.x, dataDrawing.last_mouse.y);\n                // ctx.lineTo(dataDrawing.mouse.x, dataDrawing.mouse.y);\n                // ctx.closePath();\n                // ctx.stroke();\n            })\n        }\n        \n    }, [imPlaying])\n\n    const drawOnCanvas = () => {\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n        \n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;        \n    \n        // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n        // let sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(getComputedStyle(canvas).getPropertyValue('width'));\n        canvas.height = parseInt(getComputedStyle(canvas).getPropertyValue('height'));        \n    \n        let mouse = {x: 0, y: 0};\n        let last_mouse = {x: 0, y: 0};\n    \n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            \n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n    \n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n    \n    \n        /* Drawing on Paint App */\n        ctx.lineWidth = 2;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'black';\n    \n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n    \n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n\n        let onPaint = function() {      \n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            let base64ImageData = canvas.toDataURL('image/png')\n\n            let drawingObj = {\n                idRoom,\n                last_mouse,\n                mouse,\n                widthOfLine: ctx.lineWidth,\n                colorOfLine: ctx.strokeStyle,\n                base64ImageData\n            }\n\n            socketRef.current.emit(\"canvas data drawn\", drawingObj);\n        };\n\n        requestAnimationFrame(onPaint)\n\n    }     \n    \n    const changePenWidth = (e: any) => {  \n        let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n        \n        let newLineWidth = parseFloat(e.currentTarget.getAttribute('class')) \n        document.querySelector('.eraser')?.classList.remove('picked')       \n\n        let allPenWidth = document.querySelectorAll('.pen-width li');\n\n        allPenWidth.forEach((penWidth) => {\n            if (penWidth === e.currentTarget) {                \n                penWidth.classList.add('picked')   \n            } else {\n                penWidth.classList.remove('picked')       \n            }\n        })\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        ctx.lineWidth = newLineWidth;\n        ctx.strokeStyle = inputColor.value;\n    }\n\n    const changePenColor = (e: any) => {\n        let newLineColor = e.currentTarget.value\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        ctx.strokeStyle = newLineColor;\n    }\n\n    const changePenToEraser = (e: any) => {    \n\n        let allPenWidth = document.querySelectorAll('.pen-width li');\n\n        e.currentTarget.classList.add('picked') \n\n        allPenWidth.forEach((penWidth) => {\n                penWidth.classList.remove('picked')       \n        })\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        ctx.strokeStyle = 'white';\n    }\n\n    return (\n        <>\n        { imPlaying === true\n            ? <div className=\"col-7 row\">            \n                <section id=\"draw\">\n                    <div className=\"sketch\" id=\"sketch\">\n                        <canvas id=\"board\" width=\"600\" height=\"400\"></canvas>    \n                    </div>\n                </section>\n                <div className=\"col-md-1 d-flex flex-column align-items-start justify-content-between\">\n                    <div className=\"color-brush-box\">\n                        <i className=\"fas fa-palette\"></i>\n                        <input onChange={(e) => changePenColor(e)} className=\"color-brush mx-auto\" type=\"color\"/>\n                    </div>\n                    <div onClick={(e) => changePenToEraser(e)} className=\"eraser mx-auto\"><i className=\"fas fa-eraser\"></i></div>\n                    <ul className=\"pen-width d-flex flex-column justify-content-between mx-auto\">                \n                        <li className=\"2 picked\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                        <li className=\"4\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                        <li className=\"10\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                        <li className=\"15\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                        <li className=\"30\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                    </ul>\n                </div>                        \n            </div>\n\n            : <div className=\"col-md-12 row justify-content-center\">            \n                <section id=\"draw\">\n                    <div className=\"sketch\" id=\"sketch\">\n                        <canvas id=\"board\" width=\"600\" height=\"400\"></canvas>    \n                    </div>\n                </section>                   \n            </div>\n        }            \n        </>\n    )\n}\n\nexport default Board\n","import React, {useState, useEffect, useRef} from 'react'\nimport { ListFormat } from 'typescript'\nimport { AdminObj, RulesObj, TeamObj, WordsObj } from '../Types'\nimport NextRound from './NextRound'\nimport NextTurn from './NextTurn'\n\nimport './Style/timer.css';\nimport './Style/board.css';\nimport './Style/game.css';\nimport Board from './Board'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n    const thisRound: React.MutableRefObject<number> = useRef(0)\n\n    const [displayEndTurn, setDisplayEndTurn] = useState<boolean>(false);\n    const [displayNextRound, setDisplayNextRound] = useState<boolean>(false);\n\n    const [round, setRound] = useState<number>(0);\n\n    const [words, setWords] = useState<string []>([]);\n    const [actualWord, setActualWord] = useState<string>();\n    const [actualRound, setActualRound] = useState<number>();\n    const [actualPoints, setActualPoints] = useState<number>(0);\n    const [actualPointsDelay, setActualPointsDelay] = useState<number>(0);\n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n\n    const [time, setTime] = useState<number>(1)\n    const [forAnimationTime, setForAnimationTime] = useState<number>(100)\n\n    const getRandomInteger = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    useEffect(() => {\n        \n        // socketRef.current.emit(\"ask rules\", idRoom)\n        // socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n        //     setActualRound(rulesData.round)\n        // }) // Surement à modifier\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {   \n            \n            if (rulesData.round === 2) {\n                setTime(rulesData.timeDraw)\n                setForAnimationTime(rulesData.timeDraw)\n            } else {\n                setTime(rulesData.time)\n                setForAnimationTime(rulesData.time)\n            }\n\n            setRound(rulesData.round)\n\n            thisRound.current = rulesData.round; \n\n            // setTimeout(() => {\n            //     clearInterval(interval)\n            // }, rulesData.time*1500)            \n        })\n\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: WordsObj) => {\n\n            let randomNumber: number;\n\n            if (thisRound.current === 0) {\n                randomNumber = getRandomInteger(0, words.round1.length - 1)\n            } else if (thisRound.current === 1) {\n                randomNumber = getRandomInteger(0, words.round2.length - 1)\n            } else {\n                randomNumber = getRandomInteger(0, words.round3.length - 1)\n            }\n                        \n            if (thisRound.current === 0) {\n                words.round1.forEach((word, index) => {\n                    if (randomNumber === index) {\n                        setActualWord(word)\n                    }\n                })\n                setWords(words.round1);\n            } else if (thisRound.current === 1) {\n                words.round2.forEach((word, index) => {\n                    if (randomNumber === index) {\n                        setActualWord(word)\n                    }\n                })\n                setWords(words.round2);\n            } else {\n                words.round3.forEach((word, index) => {\n                    if (randomNumber === index) {\n                        setActualWord(word)\n                    }\n                })\n                setWords(words.round3);\n            }\n        });\n\n        socketRef.current.on(\"points\", (points: number) => {\n            setActualPoints(points);\n            setTimeout(() => {\n                setActualPointsDelay(points)\n            }, 1000)\n        });\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    setActualTeam(team.name)\n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                    \n                                yourPlayingRef.current = true\n                            }  \n                            setActualPlayer(player.pseudo)\n                        }\n                    })\n                }\n            })\n        });\n\n        socketRef.current.on(\"display next round\", (displayBool: boolean) => {\n            setDisplayNextRound(displayBool);\n        })    \n\n        setInterval(() => {\n            setTime(time => time - 1)   \n        }, 1000)\n        \n    }, [])\n\n    useEffect(() => {\n        if (yourPlayingRef.current === false) {\n            let points = document.querySelectorAll('[class*=\"part-circle\"]')\n\n            for (let index = 0; index < points.length; index++) {\n                points[index].classList.add('bubble-animNoDelay')\n            }\n\n            setTimeout(() => {\n                for (let index = 0; index < points.length; index++) {\n                    points[index].classList.remove('bubble-animNoDelay')\n                }\n            }, 2500)\n        }\n        \n    }, [actualPoints])\n\n    const goodRandomWord = () => {  \n        \n        let wordCircle = document.querySelector<HTMLElement>('.word')\n        let pointsPosition = document.querySelector<HTMLElement>('.position-points')\n        let pointsPositionDraw = document.querySelector<HTMLElement>('.position-points-draw')\n        let drop = document.querySelector<HTMLElement>('.liquid2')\n\n        let points = document.querySelectorAll('[class*=\"part-circle\"]')\n        console.log(points);\n\n        for (let index = 0; index < points.length; index++) {\n            points[index].classList.add('bubble-anim')\n        }\n\n        if (thisRound.current === 0 || thisRound.current === 1) {\n            wordCircle?.classList.add('goodWord-anim');\n        } else {\n            wordCircle?.classList.add('goodWord-anim-draw');\n        }\n        \n\n        \n        if (pointsPosition !== null) {\n            pointsPosition.classList.remove('justify-content-between')\n            pointsPosition.style.justifyContent = 'flex-end'\n        }      \n        \n        if (pointsPositionDraw !== null) {\n            pointsPositionDraw.classList.remove('justify-content-between')\n            pointsPositionDraw.style.justifyContent = 'flex-end'\n        }   \n\n        setTimeout(() => {\n            pointsPosition?.classList.add('justify-content-between')\n            pointsPositionDraw?.classList.add('justify-content-between')\n            wordCircle?.classList.remove('goodWord-anim');\n            wordCircle?.classList.remove('goodWord-anim-draw');\n            drop?.classList.add('drop-anim')\n            if (wordCircle !== null) {       \n                wordCircle.style.transform = 'scale(1)'\n            }\n        }, 1000)\n\n        setTimeout(() => {\n            for (let index = 0; index < points.length; index++) {\n                points[index].classList.remove('bubble-anim')\n            }\n        }, 2500)\n        \n        words.forEach((word, index) => {\n            if (actualWord === word) {\n                words.splice(index, 1)                  \n            }\n        })\n        \n        let randomNumber = getRandomInteger(0, words.length - 1)\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)                \n            }\n        })        \n\n        let addPointObj = {\n            idRoom,\n            idPlayer: socketRef.current.id\n        }        \n\n        socketRef.current.emit(\"add point\", addPointObj);\n        \n        if (words.length === 0) {\n            nextRound();\n        }\n\n        if (thisRound.current === 2) {\n            let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n            let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n            let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n\n            if (inputColor !== null) {\n                inputColor.value = '#000000'\n            }\n\n            ctx.clearRect(0, 0, 0, 0)\n\n            canvas.height = 400\n\n            socketRef.current.emit(\"erase board\", idRoom);\n\n            let allPenWidth = document.querySelectorAll('.pen-width li');\n\n            allPenWidth.forEach((penWidth, index) => {\n                if (index === 0) {                \n                    penWidth.classList.add('picked')   \n                } else {\n                    penWidth.classList.remove('picked')   \n                }\n            })\n\n            ctx.lineWidth = 4;\n            \n        }\n        \n    }\n\n    const nextRound = () => {\n        setDisplayNextRound(true)\n\n        if (yourPlayingRef.current === true) {\n            let updatedWordsObj= {\n                idRoom,\n                words\n            }\n            \n            socketRef.current.emit(\"update words\", updatedWordsObj);\n        }\n\n        socketRef.current.emit(\"next round\", idRoom);\n    }\n\n    const passRandomWord = () => {\n        let randomNumber = getRandomInteger(0, words.length - 1)\n        \n        do {\n            randomNumber = getRandomInteger(0, words.length - 1)\n        } while (words[randomNumber] === actualWord);\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n            }\n        })\n\n        if (thisRound.current === 2) {            \n            let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n            let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n            let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n\n            if (inputColor !== null) {\n                inputColor.value = '#000000'\n            }\n        \n            ctx.clearRect(0, 0, 0, 0)\n\n            canvas.height = 400\n\n            socketRef.current.emit(\"erase board\", idRoom);\n\n            let allPenWidth = document.querySelectorAll('.pen-width li');\n\n            allPenWidth.forEach((penWidth, index) => {\n                if (index === 0) {                \n                    penWidth.classList.add('picked')   \n                } else {\n                    penWidth.classList.remove('picked')   \n                }\n            })\n\n            console.log(ctx.lineWidth);            \n\n            ctx.lineWidth = 4;\n\n            console.log(ctx.lineWidth);\n        }\n    }\n\n    const endTurn = () => {\n        if (yourPlayingRef.current === true) {\n            let updatedWordsObj= {\n                idRoom,\n                words\n            }\n            \n            socketRef.current.emit(\"update words\", updatedWordsObj);\n        }\n        \n        setDisplayEndTurn(true)\n    }     \n\n    return (\n        <> \n            { displayNextRound\n                ? <NextRound socketRef={socketRef} idRoom={idRoom} />\n\n                : <div>\n                    { displayEndTurn\n                        ? <NextTurn socketRef={socketRef} idRoom={idRoom} playerName={actualPlayer} team={actualTeam} points={actualPoints} />\n\n                        : <div className=\"transition-game d-flex flex-column\" style={{height: '75vh'}}>  \n                            <div className=\"position-chrono\">\n                                <h5 style={{ height: '20vh'}}>Phase { round + 1 }</h5>\n                                <section id=\"chrono-box\">\n                                    <div className=\"chrono\">\n                                        <div className=\"skill\">\n                                            <div className=\"outer\">\n                                                <div className=\"inner\">\n                                                <div className=\"timer-number\">\n                                                    { time < 1\n                                                        ? endTurn()\n\n                                                        : ''\n                                                    }\n                                                    {time}                                                       \n                                                </div>\n                                                </div>\n                                            </div>          \n                                        </div> \n\n                                        <svg width=\"160px\" height=\"160px\">\n                                        <defs>\n                                            <linearGradient id=\"GradientColor\">\n                                                <stop offset=\"0%\" stopColor=\"#e91e63\" />\n                                                <stop offset=\"100%\" stopColor=\"#673ab7\" />\n                                            </linearGradient>\n                                        </defs>\n                                        <circle cx=\"80\" cy=\"80\" r=\"70\" strokeLinecap=\"round\" style={{ animation: `timer ${forAnimationTime}s linear infinite`}} />\n                                        </svg>\n                                    </div>                           \n                                </section>\n                                <div className=\"points\">                                      \n                                    {/* <div className=\"points-bucket\"></div>\n                                    <div className=\"liquid1\"></div>\n                                    <div className=\"liquid2\"></div> */}\n                                    <div className=\"points-box\">\n                                        <div className=\"part-circle1\"></div>\n                                        <div className=\"part-circle2\"></div>\n                                        <div className=\"part-circle3\"></div>\n                                        <div className=\"part-circle4\"></div>\n                                        <div className=\"part-circle5\"></div>\n                                        <div className=\"part-circle6\"></div>\n                                        <div className=\"part-circle7\"></div>\n                                        <div className=\"part-circle8\"></div>\n                                        <div className=\"part-circle9\"></div>\n                                        <div className=\"part-circle10\"></div>\n                                        <div className=\"part-circle11\"></div>\n                                        <div className=\"part-circle12\"></div>             \n                                        <span className=\"empty-circle\"></span>      \n\n                                        { yourPlayingRef.current === true\n                                            ? <span style={{ marginLeft: '40px' }}>{actualPointsDelay >= 1 ? `${actualPointsDelay} Points` : `${actualPointsDelay} Point`}</span>\n                                            \n                                            :<span style={{ marginLeft: '40px' }}>{actualPoints >= 1 ? `${actualPoints} Points` : `${actualPoints} Point`}</span>\n                                        }                                        \n                                    </div>\n                                </div>\n                            </div>     \n                           \n                            { thisRound.current === 0 || thisRound.current === 1\n                                ? <>\n                                    { yourPlayingRef.current === true\n                                        ? <div className=\"d-flex flex-column justify-content-between position-points\">\n                                            <div className=\"word\">\n                                                <div>{actualWord}</div>\n                                            </div>                                            \n                                            <div className=\"row col-4 align-items-center mx-auto\">                                                \n                                                <button onClick={() => passRandomWord()} className=\"passWord\">\n                                                    <i className=\"fas fa-times\"></i>\n                                                </button>\n                                                <button onClick={() => goodRandomWord()} className=\"goodWord\">\n                                                    <i className=\"fas fa-check\"></i>\n                                                </button>\n                                            </div>                                            \n                                        </div> \n                        \n                                        : <div className=\"\">\n                                            <div className=\"player-name\">\n                                                {actualPlayer}\n                                            </div>       \n                                            <p className=\"text-points\">\n                                                <span>de la team {actualTeam} et entrain de jouer</span>\n                                            </p> \n                                        </div>  \n                                    }   \n                                  </>\n\n                                : <>\n                                    { yourPlayingRef.current === true\n                                        ? <div className=\"row justify-content-between\">                                    \n                                            <Board socketRef={socketRef} idRoom={idRoom} imPlaying={true} />\n                                            <div className=\"col-5 d-flex flex-column justify-content-between position-points-draw\">\n                                                <div className=\"word\">\n                                                    <div>{actualWord}</div>\n                                                </div>                                            \n                                                <div className=\"row align-items-center\">                                       \n                                                    <button onClick={() => passRandomWord()} className=\"passWord\">\n                                                        <i className=\"fas fa-times\"></i>\n                                                    </button>\n                                                    <button onClick={() => goodRandomWord()} className=\"goodWord\">\n                                                        <i className=\"fas fa-check\"></i>\n                                                    </button>\n                                                </div>                                            \n                                            </div> \n                                            \n                                        </div> \n                        \n                                        : <div className=\"text-light\">\n                                            <Board socketRef={socketRef} idRoom={idRoom} imPlaying={false} />\n                                        </div>  \n                                    }\n                                  </>\n                            }                  \n                \n                                                                         \n                        </div>\n                    }\n                 </div>                         \n            }\n            \n        </>\n        \n    )\n}\n\nexport default Game1\n","import React from 'react'\nimport './Style/waitingAnim.css';\n\nconst WaitingAnim = () => {\n    return (\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default WaitingAnim\n","import React, { useEffect, useRef, useState } from 'react'\nimport { AdminObj, RulesObj, TeamObj } from '../Types';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\nimport WaitingAnim from './WaitingAnim';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n}\n\nconst StartGame: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [startGamePreview, setStartGamePreview] = useState<boolean>(false)\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n    // DISPLAY\n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n    const [actualPlayerId, setActualPlayerId] = useState<string | number | undefined>()\n\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    const [round, setRound] = useState<number>(0)\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            yourPlayingRef.current = false\n            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    setActualTeam(team.name)\n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                                                    \n                                yourPlayingRef.current = true\n                            }  \n                            setActualPlayer(player.pseudo)\n                            setActualPlayerId(player.id)\n                        }\n                    })\n                }\n            })\n        });\n\n        socketRef.current.on(\"start game now\", (start: boolean) => {\n            setStartGamePreview(start)\n        })\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setRound(rulesData.round)\n        })\n    }, [])\n\n    const startGame = () => {\n        socketRef.current.emit(\"start game\", idRoom)\n        setStartGamePreview(true)\n    }\n\n    return (\n        <>                    \n            { startGamePreview\n                ? <Game1 socketRef={socketRef} idRoom={idRoom} />\n\n                : <div className=\"transition-game\">\n                    { yourPlayingRef.current === true\n                        ? <>\n                            <h5>C'est à toi de jouer !</h5>\n                            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{height: '63vh'}}>                            \n                                <button onClick={() => startGame()} className=\"start-bouton\">Let's Go</button>\n                            </div> \n                        </>\n\n                        : <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{height: '75vh'}}>\n                            <h5>Prochain joueur</h5>\n                            <div className=\"player-name\">{actualPlayer}</div>\n                            <WaitingAnim />\n                          </div>                        \n                    }     \n                </div>      \n            }            \n        </>\n    )\n}\n\nexport default StartGame\n","import React, { useEffect, useState } from 'react'\nimport { AdminObj, DataRoomObjWithKey, RoomObj, RulesObj } from '../Types'\nimport CreateTeams from './CreateTeams';\nimport Messenger from './Messenger'\nimport StartGameTransition from './StartGame';\nimport './Style/room.css';\n\ntype Props = {\n    roomData: RoomObj\n    error: string\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Room: React.FC<Props> = ({ roomData, error, socketRef }) => {\n\n    const [displayAddWord, setDisplayAddWord] = useState<boolean>(false)\n    const [displaySetWordsSize, setDisplaySetWordsSize] = useState<boolean>(false)\n    const [displayCreateTeam, setDisplayCreateTeam] = useState<boolean>(false)\n\n    const [displayStartGame, setDisplayStartGame] = useState<boolean>(false)\n    // DISPLAY //\n\n\n    const [word, setWord] = useState<string>('')\n    const [words, setWords] = useState<string []>([])\n    const [wordsLength, setWordsLength] = useState<number>(0)\n    const [allWords, setAllWords] = useState<string []>([])\n    // WORDS //\n\n    const [nbrWords, setNbrWords] = useState<number>(5)\n    const [time, setTime] = useState<number>(45)\n    const [drawTime, setDrawTime] = useState<number>(90)\n    const [rules, setRules] = useState<RulesObj>()\n    const [round, setRound] = useState<number>()\n    // RULES //\n\n    const [users, setUsers] = useState<AdminObj[]>()\n    // USERS //\n\n    const inputRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask share rooms\", true)\n        socketRef.current.emit(\"ask rules\", roomData.id)\n\n        socketRef.current.on(\"start game prvw\", (start: boolean) => {\n            setDisplayStartGame(start)\n        })\n\n        socketRef.current.on(\"share rooms\", (data: DataRoomObjWithKey) => {                        \n            if (roomData.id !== '') {\n                Object.keys(data).map((id) => {                    \n                    if (roomData.id === id) {\n                        setUsers(data[id].users)            \n                    }\n                    return true\n                })\n            }\n        })\n\n        socketRef.current.on(\"words\", (words: string []) => {\n            setAllWords(words)\n            \n            setWordsLength(words.length);\n        })\n\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setRules(rulesData);\n            // Display \"Rules have been updated\"\n        })\n\n    }, [roomData])\n\n\n    const copyLink = (e: any) => {\n        inputRef.current.select();\n\n        document.execCommand('copy');\n\n        e.target.focus();\n    }\n    \n    const handleAddWord = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        if (word.length !== 0) {\n            if (rules?.numberOfWords === null && words.length > 2 ) {\n                words.splice(words.length ,1)\n                setWord('')\n                window.alert('Tu ne peux plus ajouter de mots pour le moment ! Il fau attendre que l\\' admin de la room mette en place les régles')                \n            } else {\n                console.log(words.length, '>', rules?.numberOfWords);\n                \n                if (rules && rules?.numberOfWords !== null && words.length > rules?.numberOfWords - 1) {\n                    console.log('test');\n                    \n                    setWord('')\n                    window.alert('Tu ne peux plus ajouter de mots')\n                } else {                    \n                    setWords([...words, word])\n    \n                    const wordData = {\n                        word: word,\n                        idRoom: roomData.id\n                    }\n    \n                    socketRef.current.emit(\"add word\", wordData)\n                    setWord('')\n                }\n            }\n        }\n    }\n\n    const handleRulesSet = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()        \n\n        const rulesData = {\n            numberOfWords: nbrWords,\n            time: time,\n            timeDraw: drawTime,\n            round: 2,\n            idRoom: roomData.id,\n        }\n\n        socketRef.current.emit(\"set rules\", rulesData)\n\n        setDisplaySetWordsSize(!displaySetWordsSize)\n    }\n\n    const startGamePreview = () => {\n        socketRef.current.emit(\"start game preview\", roomData.id)\n\n        // socketRef.current.emit(\"set playing team and player\", roomData.id)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        <>\n            { displayStartGame\n                ? <StartGameTransition socketRef={socketRef} idRoom={roomData.id}/>\n\n                :  <div className=\"room container grow\">\n                    {error}\n                    <div className=\"d-flex flex-column justify-content-between align-items-between\">\n                        <div>\n                            <h2 className=\"mb-3\">{roomData === undefined ? '' : roomData.name}</h2>\n                            <div className=\"row\">\n                                <label>ID Room</label>\n                                <div>\n                                    <input className=\"mx-auto copy-input\" ref={inputRef} type=\"text\" defaultValue={roomData === undefined ? '' : roomData.id}/>\n                                    <button className=\"mon-bouton mx-2 mb-3 rounded\" onClick={(e) => copyLink(e)} style={{ filter: 'hue-rotate(18deg)'}}><i className=\"fas fa-clone\"></i></button>\n                                </div>                                \n                                <div className=\"row justify-content-between\">\n                                    <div className=\"w-auto\">\n                                        <button className=\"room-bouton\" onClick={() => setDisplaySetWordsSize(!displaySetWordsSize)} type=\"button\">\n                                            Régles <i className=\"fas fa-caret-down\"></i>\n                                        </button>\n                                        <div className=\"position-dropdown\">\n                                            { roomData.admin.id === socketRef.current.id\n                                                ? <> \n                                                    { displaySetWordsSize \n                                                        ? <form onSubmit={handleRulesSet} className=\"dropdowned-item d-flex flex-column dropdown-unfold\">\n                                                            <label className=\"text-start\">Nombre de mots/joueurs</label>\n                                                            <input value={nbrWords} \n                                                                className=\"w-25\"\n                                                                onChange={(e) => setNbrWords(parseFloat(e.target.value))} \n                                                                type=\"number\"\n                                                                min=\"3\"\n                                                                max=\"1000\"       \n                                                            />\n                                                            <label className=\"text-start mt-2\">Temps Round 1 et 2</label>\n                                                            <input value={time} \n                                                                className=\"w-25\"\n                                                                onChange={(e) => setTime(parseFloat(e.target.value))} \n                                                                type=\"number\"\n                                                                min=\"5\"\n                                                                max=\"1000\"       \n                                                            />\n                                                            <label className=\"text-start mt-2\">Temps Round 3</label>\n                                                            <input value={drawTime} \n                                                                className=\"w-25\"\n                                                                onChange={(e) => setDrawTime(parseFloat(e.target.value))} \n                                                                type=\"number\"\n                                                                min=\"30\"\n                                                                max=\"1000\"       \n                                                            />   \n                                                            <div className=\"text-end\">\n                                                                <button className=\"orange-button\" type=\"submit\"><i className=\"fas fa-check\"></i></button>\n                                                            </div>\n                                                          </form>\n                                                        \n                                                        : ''\n                                                    }\n                                                </>\n                                            \n                                                : <>\n                                                    { displaySetWordsSize \n                                                        ? <div className=\"dropdowned-item d-flex flex-column dropdown-unfold\">\n                                                            <span>Nombre de mots/joueurs</span>\n                                                            <p>{ rules?.numberOfWords === null ? \"5\" : rules?.numberOfWords }</p>\n                                                            <span>Temps round 1 et 2</span>\n                                                            <p>{ rules?.numberOfWords === null ? \"45\" : rules?.time }</p>\n                                                            <span>Temps round 3</span>\n                                                            <p>{ rules?.numberOfWords === null ? \"90\" : rules?.timeDraw }</p>                                               \n                                                        </div>\n    \n                                                        : ''\n                                                    }\n                                                </>\n                                            }                                    \n                                        </div>\n                                    </div>\n                                    <div className=\"w-auto\">\n                                        <button className=\"room-bouton\" onClick={() => setDisplayAddWord(!displayAddWord)} type=\"button\">\n                                            Ajouter un mot <i className=\"fas fa-caret-down\"></i>\n                                        </button>\n                                        <div className=\"position-dropdown\">\n                                            { displayAddWord \n                                                ? <form onSubmit={handleAddWord} className=\"dropdowned-item row dropdown-unfold justify-content-between\">\n                                                    <input value={word} onChange={(e) => setWord(e.target.value)} className=\"w-75 mr-3\" type=\"text\"/>\n                                                    <button className=\"orange-button\" type=\"submit\"><i className=\"fas fa-check\"></i></button>\n                                                </form>\n        \n                                                : ''\n                                            }\n                                        </div>\n                                    </div>\n                                    { roomData.admin.id === socketRef.current.id \n                                        ? <div>\n                                            <button className=\"room-bouton me-1\" onClick={() => setDisplayCreateTeam(!displayCreateTeam)}>{displayCreateTeam ? 'Voir Messages' : 'Créer Équipes'}</button>\n                                            <button className=\"room-bouton ms-1\" onClick={() => startGamePreview()}>Test Round</button>\n                                        </div>\n\n                                        : ''\n                                    }\n                                    { displayCreateTeam\n                                    ? <div className=\"team-position\">\n                                        <CreateTeams idRoom={roomData.id} socketRef={socketRef} />\n                                    </div> \n                                \n                                    : ''                    \n                                }  \n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"row mt-3 justify-content-between\">\n                                <div className=\"col-md-4 users\">\n                                    <div className=\"row justify-content-between\">\n                                        <p className=\"word-count-all\">{wordsLength}/{rules && users && users?.length > 3 ? rules?.numberOfWords * users?.length : \"20\"}</p>\n                                        <h3 className=\"mt-2\">Joueurs</h3>\n                                        <p className=\"word-count-perso\">{words.length}/{rules && rules.numberOfWords !== null ? rules.numberOfWords : \"3\"}</p>\n                                    </div>\n                                    <ul>\n                                        { users !== undefined\n                                            ? users.map((user, index) => {\n                                                if (roomData.admin.id === user.id) {\n                                                    return <li key={index} className=\"grow\">\n                                                                <p>{user.pseudo} <i className=\"fas fa-star\"></i></p>\n                                                        </li>\n                                                } else {                                        \n                                                    return <li key={index} className=\"grow\">\n                                                                <p>{user.pseudo}</p>\n                                                        </li>\n                                                }\n                                            })\n        \n                                            : ''\n                                        }\n                                    </ul>\n                                </div>\n                                <Messenger idRoom={roomData.id} socketRef={socketRef} />                              \n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            }\n        </>\n    )\n}\n\nexport default Room\n","import React, { useState, useEffect, useRef } from 'react'\nimport io from 'socket.io-client'\nimport { v4 as uuidv4 } from 'uuid';\nimport Room from './Room';\nimport { DataRoomObjWithKey, RoomObj } from '../Types'\n\nconst CreateJoinRoom= () => {\n\n    const emptyRoom = { name: '',\n                        id: '',\n                        admin: { id: '', pseudo: '', admin: false, available: true, playing: false },\n                        teamPlayedCount: 0\n                    }\n\n    const [displayJoin, setDisplayJoin] = useState(false)\n    const [displayCreate, setDisplayCreate] = useState(false)\n    const [displayRoom, setDisplayRoom] = useState(false)\n    const [allRooms, setAllRooms] = useState<DataRoomObjWithKey>({})\n\n    // DISPLAY //\n    const [myPseudo, setMyPseudo] = useState<string | null>()\n    const [myId, setMyId] = useState<string | number>()\n    const [roomData, setRoomData] = useState<RoomObj>(emptyRoom)\n    const [roomName, setRoomName] = useState('')\n    const [roomIdCopy, setRoomIdCopy] = useState('')\n    const [error, setError] = useState<string>('')\n\n    const socketRef: React.MutableRefObject<any> = useRef()\n\n    useEffect(() => {\n        socketRef.current = io.connect('/')\n\n        socketRef.current.on(\"your id\", (id: string | number) => {\n            setMyId(id)\n        })    \n        \n        socketRef.current.on(\"available rooms\", (rooms: DataRoomObjWithKey) => {\n            setAllRooms(rooms)            \n        })   \n\n        socketRef.current.on(\"throw link error\", (error: string) => { \n            console.log('error');\n                       \n            setError(error)\n        })\n\n        setMyPseudo(localStorage.getItem('myPseudo'))\n    }, [])\n\n    const dynamicDisplayJoin = () => {\n        setDisplayJoin(!displayJoin)\n        setDisplayCreate(false)\n    }\n\n    const dynamicDisplayCreate = () => {\n        setDisplayCreate(!displayCreate)\n        setDisplayJoin(false)\n    }\n\n    const handleSubmitCreate = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        if (roomName !== '') {\n            let roomId = uuidv4()\n\n            const room: RoomObj = {\n                name: roomName,\n                id: roomId,\n                admin: { id: myId, pseudo: myPseudo, admin: true, available: true, playing: false },\n                teamPlayedCount: 0\n            }\n\n            setRoomData(room)\n            \n            socketRef.current.emit(\"create room\", room)\n            socketRef.current.emit(\"share room\", room)\n            \n            setDisplayRoom(true)\n        }\n    }\n\n\n    const handleSubmitJoin = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        if (roomIdCopy !== '') {\n\n            const joinObj = {\n                roomIdCopy, id: myId, pseudo: myPseudo, admin: false\n            }\n\n            socketRef.current.emit(\"join room\", joinObj)\n\n            socketRef.current.on(\"share room\", (room: RoomObj) => {                \n                setRoomData(room)\n            })\n            \n            setDisplayRoom(true)\n        }    \n    }\n\n    return (\n        <>\n            { displayRoom \n                ? <Room roomData={roomData} error={error} socketRef={socketRef}/> \n            \n                : <div className=\"d-flex flex-column mx-auto w-75 text-center grow\">\n                    <h2>Hello {myPseudo}</h2>\n                    <div className=\"d-flex justify-content-center mt-2\">\n                        <button onClick={() => dynamicDisplayCreate()} className=\"mon-bouton mx-2\">Créer une room</button>\n                        <button onClick={() => dynamicDisplayJoin()} className=\"mon-bouton mx-2\">Rejoindre une room</button>\n                    </div>\n                    <div className=\"d-flex justify-content-center mt-4\">\n                        { displayCreate\n                            ? <form onSubmit={handleSubmitCreate} className=\"row grow\">\n                                <input onChange={(e) => setRoomName(e.target.value)} className=\"mon-input\" placeholder=\"Nom de la room\" type=\"text\"/>\n                                <button className=\"mon-bouton mx-3\" type=\"submit\">Go !</button>\n                            </form> \n                        \n                            : ''\n                        }\n                        { displayJoin\n                            ? <form onSubmit={handleSubmitJoin} className=\"row grow\">\n                                <input onChange={(e) => setRoomIdCopy(e.target.value)} className=\"mon-input\" placeholder=\"Lien de la room\" type=\"text\"/>\n                                <button className=\"mon-bouton mx-3\" type=\"submit\">Go !</button>\n                            </form> \n                        \n                            : ''\n                        }                                                \n                    </div>\n                    <ul>\n                        {                        \n                            Object.keys(allRooms).map((id, index) => {\n                                return <li className=\"text-light\" key={id + index}>{id}</li> \n                            })                   \n                        }\n                    </ul>\n                  </div>\n            }  \n        </>\n\n        \n    )\n}\n\nexport default CreateJoinRoom\n","import React, { useEffect, useState } from 'react';\nimport CreateJoinRoom from './Components/CreateJoinRoom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { Beforeunload } from 'react-beforeunload';\n\nimport './App.css';\nimport Board from './Components/Board';\n\nconst App = () => {\n\n  const [displayCreateJoinRoom, setDisplayCreateJoinRoom] = useState(false)\n\n  const [newPseudo, setNewPseudo] = useState('')\n  const [ancientPseudo, setAnciantPseudo] = useState<string | null>()\n\n  useEffect(() => {\n    setAnciantPseudo(localStorage.getItem('myPseudo'))\n  }, [])\n\n  const handleOnSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    if (newPseudo !== '') {\n      localStorage.setItem('myPseudo', newPseudo)\n    }\n\n    setDisplayCreateJoinRoom(true)\n  }\n\n  // window.onbeforeunload = (event: any) => {\n  //   const e = event || window.event;\n  //   // Cancel the event\n  //   e.preventDefault();\n  //   if (e) {\n  //     e.returnValue = ''; // Legacy method for cross browser support\n  //   }\n  //   return ''; // Legacy method for cross browser support\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"mt-3\">Jeu avec du temps <i className=\"fas fa-stopwatch\"></i></h1>\n      <main>        \n        <div className=\"\">\n          { displayCreateJoinRoom \n              ? <CreateJoinRoom />\n\n              : <>\n                  <form onSubmit={handleOnSubmit} className=\"mt-3\">\n                    <input className=\"mon-input\" placeholder={ancientPseudo === null ? 'PseudoStylayDu91Rpz' : ancientPseudo} type=\"text\" onChange={(e) => setNewPseudo(e.target.value)}/>\n                    <br/>\n                    <button className=\"mon-bouton mt-3\" type=\"submit\">GO <i className=\"fas fa-arrow-alt-circle-right\"></i></button>\n                  </form>\n                  <div className=\"row justify-content-center mt-5 mx-1\">\n                    <div className=\"gradient-border col-md-12\" id=\"box\">\n                    <Carousel \n                      autoPlay={true} \n                      infiniteLoop={true} \n                      dynamicHeight={true}\n                      showThumbs={false}\n                    >\n                      <div className=\"item\" >\n                          <h2 className=\"mb-3\">Phase 1</h2>\n                          <div className=\"mx-auto round-logo round1\">\n                            <svg fill=\"#a0431e\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m481.251 280.748c-5.859-5.857-15.357-5.854-21.213.006-5.856 5.859-5.854 15.357.006 21.213 14.158 14.15 21.956 32.981 21.956 53.023 0 20.044-7.807 38.881-21.982 53.04-5.861 5.854-5.866 15.352-.012 21.213 2.93 2.933 6.771 4.399 10.612 4.399 3.836 0 7.673-1.463 10.601-4.388 19.849-19.825 30.781-46.2 30.781-74.264 0-28.058-10.92-54.425-30.749-74.242z\"/><path d=\"m417.606 323.171c-5.858 5.857-5.858 15.355 0 21.213 2.833 2.833 4.394 6.6 4.394 10.606s-1.561 7.773-4.394 10.606c-5.858 5.857-5.858 15.355 0 21.213 2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.465 10.606-4.394c17.546-17.545 17.546-46.094 0-63.639-5.856-5.857-15.354-5.857-21.212.001z\"/><path d=\"m370 210.458v-15.458c0-102.01-82.99-185-185-185s-185 82.99-185 185v23.977c0 56.079 26.024 109.157 70 143.534v124.489c0 8.284 6.716 15 15 15h180c8.284 0 15-6.716 15-15v-47h45c24.813 0 45-20.187 45-45v-20c0-5.172-2.664-9.979-7.05-12.72l-19.648-12.28 19.648-12.28c4.386-2.741 7.05-7.548 7.05-12.72v-28.288l28.638-7.16c4.732-1.183 8.594-4.593 10.354-9.143 1.759-4.55 1.195-9.671-1.511-13.729zm-18.638 59.99c-6.677 1.669-11.362 7.669-11.362 14.552v31.687l-32.95 20.594c-4.386 2.741-7.05 7.548-7.05 12.72s2.664 9.979 7.05 12.72l32.95 20.592v11.687c0 8.271-6.729 15-15 15h-60c-8.284 0-15 6.716-15 15v47h-150v-117c0-4.844-2.34-9.391-6.281-12.206-39.899-28.499-63.719-74.786-63.719-123.817v-23.977c0-85.468 69.532-155 155-155s155 69.532 155 155v20c0 2.961.877 5.856 2.52 8.32l28.192 42.29z\"/><path d=\"m175.403 279.73c-6.864-4.641-16.188-2.84-20.829 4.022-2.866 4.238-6.323 6.645-10.275 7.151-4.974.634-10.837-1.757-16.51-6.742-16.69-14.667-24.775-44.84-17.655-65.888 2.421-7.154 6.302-12.16 10.928-14.095 3.677-1.535 7.874-1.181 12.474 1.057 7.452 3.62 16.427.519 20.05-6.931 3.622-7.45.52-16.427-6.931-20.05-12.331-5.996-25.53-6.619-37.164-1.754-12.689 5.305-22.553 16.726-27.774 32.159-10.959 32.397.58 75.46 26.269 98.036 10.628 9.339 22.773 14.308 34.721 14.308 1.811 0 3.616-.114 5.411-.345 12.509-1.604 23.628-8.743 31.31-20.101 4.638-6.86 2.838-16.185-4.025-20.827z\"/></g></svg>\n                          </div>\n                          <p>Chacun sont tour il va falloir faire deviner le plus de mots à vos coéquipiers !</p>\n                          <p>Vous pouvez, pour cela, utiliser autant de mots que vous le souhaitez</p>\n                      </div>\n                      <div className=\"item\">\n                        <h2 className=\"mb-2\">Phase 2</h2>\n                        <div className=\"mx-auto round-logo round2\">\n                          <svg fill=\"#a0431e\" id=\"Capa_1\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m417.606 323.171c-5.858 5.857-5.858 15.355 0 21.213 2.833 2.833 4.394 6.6 4.394 10.606s-1.561 7.773-4.394 10.606c-5.858 5.857-5.858 15.355 0 21.213 2.929 2.929 6.768 4.394 10.606 4.394s7.678-1.465 10.606-4.394c17.546-17.545 17.546-46.094 0-63.639-5.856-5.857-15.354-5.857-21.212.001z\"/><path d=\"m370 210.458v-15.458c0-102.01-82.99-185-185-185s-185 82.99-185 185v23.977c0 56.079 26.024 109.157 70 143.534v124.489c0 8.284 6.716 15 15 15h180c8.284 0 15-6.716 15-15v-47h45c24.813 0 45-20.187 45-45v-20c0-5.172-2.664-9.979-7.05-12.72l-19.648-12.28 19.648-12.28c4.386-2.741 7.05-7.548 7.05-12.72v-28.288l28.638-7.16c4.732-1.183 8.594-4.593 10.354-9.143 1.759-4.55 1.195-9.671-1.511-13.729zm-18.638 59.99c-6.677 1.669-11.362 7.669-11.362 14.552v31.687l-32.95 20.594c-4.386 2.741-7.05 7.548-7.05 12.72s2.664 9.979 7.05 12.72l32.95 20.592v11.687c0 8.271-6.729 15-15 15h-60c-8.284 0-15 6.716-15 15v47h-150v-117c0-4.844-2.34-9.391-6.281-12.206-39.899-28.499-63.719-74.786-63.719-123.817v-23.977c0-85.468 69.532-155 155-155s155 69.532 155 155v20c0 2.961.877 5.856 2.52 8.32l28.192 42.29z\"/><path d=\"m175.403 279.73c-6.864-4.641-16.188-2.84-20.829 4.022-2.866 4.238-6.323 6.645-10.275 7.151-4.974.634-10.837-1.757-16.51-6.742-16.69-14.667-24.775-44.84-17.655-65.888 2.421-7.154 6.302-12.16 10.928-14.095 3.677-1.535 7.874-1.181 12.474 1.057 7.452 3.62 16.427.519 20.05-6.931 3.622-7.45.52-16.427-6.931-20.05-12.331-5.996-25.53-6.619-37.164-1.754-12.689 5.305-22.553 16.726-27.774 32.159-10.959 32.397.58 75.46 26.269 98.036 10.628 9.339 22.773 14.308 34.721 14.308 1.811 0 3.616-.114 5.411-.345 12.509-1.604 23.628-8.743 31.31-20.101 4.638-6.86 2.838-16.185-4.025-20.827z\"/></g></svg>\n                        </div>\n                        <p>Comme le tour précédent il va falloir faire deviner le plus de mots à vos coéquipiers !</p>\n                        <p>En revanche, vous ne pourrez utiliser qu'un seul mot</p>\n                      </div>\n                      <div className=\"item\">\n                        <h2 className=\"mb-2\">Phase 3</h2>\n                        <div className=\"mx-auto round-logo round3\">\n                          <svg fill=\"#a0431e\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m497.230469 398.746094h-140.308594c-31.21875 0-56.613281 25.394531-56.613281 56.613281 0 14.929687-12.148438 27.078125-27.078125 27.078125h-216.613281c-14.933594 0-27.078126-12.148438-27.078126-27.078125v-19.714844c0-14.921875 12.140626-27.066406 27.0625-27.074219l39.035157-.019531c.011719 0 .027343-.003906.039062-.003906.445313 0 .890625-.027344 1.339844-.066406.183594-.015625.363281-.046875.546875-.070313.191406-.027344.386719-.042968.578125-.074218l104.238281-17.980469c.054688-.011719.105469-.023438.15625-.035157.164063-.03125.324219-.066406.484375-.101562.261719-.058594.519531-.117188.773438-.191406.179687-.046875.359375-.101563.539062-.15625.238281-.078125.476563-.160156.714844-.25.171875-.066406.347656-.125.519531-.195313.367188-.15625.726563-.320312 1.082032-.503906.140624-.074219.28125-.160156.421874-.238281.25-.140625.496094-.28125.738282-.4375.148437-.09375.296875-.195313.445312-.296875.234375-.164063.46875-.335938.695313-.515625.121093-.09375.246093-.1875.367187-.289063.34375-.285156.679688-.582031.996094-.902343l263.265625-263.261719s-.003906.003906 0 0c21.113281-21.113281 21.113281-55.46875 0-76.585938l-30.5625-30.558593c-21.113281-21.117188-55.472656-21.113282-76.585937 0l-263.261719 263.261718c-.320313.316406-.617188.65625-.90625 1-.097657.117188-.191407.238282-.285157.359375-.179687.230469-.351562.464844-.515624.703125-.101563.144532-.203126.292969-.296876.441406-.152343.238282-.292968.480469-.429687.726563-.089844.160156-.183594.320313-.269531.480469-.171875.339844-.328125.679687-.476563 1.03125-.074219.175781-.136719.359375-.207031.539062-.082031.226563-.164062.457032-.238281.6875-.058594.1875-.113281.375-.164063.5625-.066406.242188-.125.488282-.179687.738282-.039063.171874-.078125.34375-.109375.515624-.011719.050782-.023438.097657-.03125.144532l-15.871094 91.992187-26.601562.011719c-31.203126.015625-56.585938 25.414062-56.585938 56.613281v19.714844c0 31.21875 25.398438 56.617187 56.617188 56.617187h216.613281c31.21875 0 56.617187-25.398437 56.617187-56.617187 0-14.929687 12.144532-27.078125 27.074219-27.078125h140.308594c8.15625 0 14.769531-6.609375 14.769531-14.765625 0-8.160156-6.613281-14.769531-14.769531-14.769531zm-373.910157-78.609375 45.953126 45.953125-55.53125 9.578125zm220.300782-239.722657 22.242187 22.242188-209.125 209.125-22.242187-22.242188zm-143.753906 274.496094-22.242188-22.242187 209.128906-209.125 22.242188 22.242187zm187.449218-318.191406c9.597656-9.59375 25.210938-9.59375 34.8125 0l30.558594 30.5625c9.597656 9.597656 9.597656 25.214844 0 34.8125l-22.808594 22.808594c0-.003906.003906 0 .003906 0s0 0-.003906 0l-65.371094-65.375zm0 0\"/></svg>\n                        </div>\n                        <p>Pour le dernier tour il va falloir faire deviner en dessinant</p>\n                        <p>Interdiction de parler !</p>\n                      </div>\n                  </Carousel>\n                    </div>\n                  </div>\n                </>\n            }\n          </div>\n        </main>\n      </div>\n  );\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}