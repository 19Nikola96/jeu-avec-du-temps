{"ast":null,"code":"import _slicedToArray from\"/Users/nikolamorice-gallier/Desktop/Projets/online-timesup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import StartGameTransition from'./StartGame';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NextTurn=function NextTurn(_ref){var playerName=_ref.playerName,team=_ref.team,points=_ref.points,idRoom=_ref.idRoom,socketRef=_ref.socketRef;var yourPlayingRef=useRef(false);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),displayStartGame=_useState2[0],setDisplayStartGame=_useState2[1];// const [updateTeamPlayedCount, setUpdateTeamPlayedCount] = useState<number>(0)\nuseEffect(function(){socketRef.current.on(\"start game prvw\",function(start){setDisplayStartGame(start);});// socketRef.current.emit(\"ask room\", idRoom);\n// socketRef.current.on(\"room\", (room: RoomObj) => {\n//     setUpdateTeamPlayedCount(room.teamPlayedCount)\n// });\nsocketRef.current.emit(\"ask teams\",idRoom);socketRef.current.emit(\"ask teams\",idRoom);socketRef.current.on(\"teams\",function(teams){teams.forEach(function(team){if(team.playing===true){team.players.forEach(function(player){if(player.playing===true){if(player.id===socketRef.current.id){yourPlayingRef.current=true;}}});}});});},[]);var startGamePreview=function startGamePreview(){socketRef.current.emit(\"start game preview\",idRoom);socketRef.current.emit(\"set playing team and player\",idRoom);setDisplayStartGame(true);};return/*#__PURE__*/_jsx(_Fragment,{children:displayStartGame?/*#__PURE__*/_jsx(StartGameTransition,{socketRef:socketRef,idRoom:idRoom}):/*#__PURE__*/_jsxs(\"div\",{className:\"transition-game d-flex flex-column justify-content-center align-itmes-center\",style:{height:'75vh'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"player-name\",children:playerName}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-points\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\" a remport\\xE9 \",/*#__PURE__*/_jsx(\"span\",{className:\"team-name\",children:points}),\" \",points<=1?'point':'points',\" pour la team  \"]}),\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"team-name ms-1\",children:[\" \",team,\" \"]})]}),yourPlayingRef.current===true?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return startGamePreview();},className:\"mon-bouton mx-auto\",children:\"Suivant\"}):'']})});};export default NextTurn;","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Projets/online-timesup/client/src/Components/NextTurn.tsx"],"names":["React","useEffect","useRef","useState","StartGameTransition","NextTurn","playerName","team","points","idRoom","socketRef","yourPlayingRef","displayStartGame","setDisplayStartGame","current","on","start","emit","teams","forEach","playing","players","player","id","startGamePreview","height"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CAEA,MAAOC,CAAAA,mBAAP,KAAgC,aAAhC,C,6IAUA,GAAMC,CAAAA,QAAyB,CAAG,QAA5BA,CAAAA,QAA4B,MAAqD,IAAlDC,CAAAA,UAAkD,MAAlDA,UAAkD,CAAtCC,IAAsC,MAAtCA,IAAsC,CAAhCC,MAAgC,MAAhCA,MAAgC,CAAxBC,MAAwB,MAAxBA,MAAwB,CAAhBC,SAAgB,MAAhBA,SAAgB,CAEnF,GAAMC,CAAAA,cAA2D,CAAGT,MAAM,CAAC,KAAD,CAA1E,CAFmF,cAInCC,QAAQ,CAAC,KAAD,CAJ2B,wCAI5ES,gBAJ4E,eAI1DC,mBAJ0D,eAKnF;AAEAZ,SAAS,CAAC,UAAM,CACZS,SAAS,CAACI,OAAV,CAAkBC,EAAlB,CAAqB,iBAArB,CAAwC,SAACC,KAAD,CAAoB,CACxDH,mBAAmB,CAACG,KAAD,CAAnB,CACH,CAFD,EAIA;AAEA;AACA;AACA;AAEAN,SAAS,CAACI,OAAV,CAAkBG,IAAlB,CAAuB,WAAvB,CAAoCR,MAApC,EAEAC,SAAS,CAACI,OAAV,CAAkBG,IAAlB,CAAuB,WAAvB,CAAoCR,MAApC,EACAC,SAAS,CAACI,OAAV,CAAkBC,EAAlB,CAAqB,OAArB,CAA8B,SAACG,KAAD,CAAuB,CACjDA,KAAK,CAACC,OAAN,CAAc,SAACZ,IAAD,CAAU,CACpB,GAAIA,IAAI,CAACa,OAAL,GAAiB,IAArB,CAA2B,CACvBb,IAAI,CAACc,OAAL,CAAaF,OAAb,CAAqB,SAACG,MAAD,CAAY,CAC7B,GAAIA,MAAM,CAACF,OAAP,GAAmB,IAAvB,CAA6B,CACzB,GAAIE,MAAM,CAACC,EAAP,GAAcb,SAAS,CAACI,OAAV,CAAkBS,EAApC,CAAwC,CACpCZ,cAAc,CAACG,OAAf,CAAyB,IAAzB,CACH,CACJ,CACJ,CAND,EAOH,CACJ,CAVD,EAWH,CAZD,EAaH,CA3BQ,CA2BN,EA3BM,CAAT,CA6BA,GAAMU,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3Bd,SAAS,CAACI,OAAV,CAAkBG,IAAlB,CAAuB,oBAAvB,CAA6CR,MAA7C,EAEAC,SAAS,CAACI,OAAV,CAAkBG,IAAlB,CAAuB,6BAAvB,CAAsDR,MAAtD,EAEAI,mBAAmB,CAAC,IAAD,CAAnB,CACH,CAND,CAQA,mBACI,yBACMD,gBAAgB,cACZ,KAAC,mBAAD,EAAqB,SAAS,CAAEF,SAAhC,CAA2C,MAAM,CAAED,MAAnD,EADY,cAGZ,aAAK,SAAS,CAAC,8EAAf,CAA8F,KAAK,CAAE,CAACgB,MAAM,CAAE,MAAT,CAArG,wBACE,YAAK,SAAS,CAAC,aAAf,UACKnB,UADL,EADF,cAIE,WAAG,SAAS,CAAC,aAAb,wBACG,uDAAkB,aAAM,SAAS,CAAC,WAAhB,UAA6BE,MAA7B,EAAlB,KAA+DA,MAAM,EAAI,CAAV,CAAc,OAAd,CAAwB,QAAvF,qBADH,kBAC0H,cAAM,SAAS,CAAC,gBAAhB,eAAmCD,IAAnC,OAD1H,GAJF,CAOII,cAAc,CAACG,OAAf,GAA2B,IAA3B,cACI,eAAQ,OAAO,CAAE,yBAAMU,CAAAA,gBAAgB,EAAtB,EAAjB,CAA2C,SAAS,CAAC,oBAArD,qBADJ,CAKG,EAZP,GAJV,EADJ,CAwBH,CApED,CAsEA,cAAenB,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { RoomObj, TeamObj } from '../Types'\nimport StartGameTransition from './StartGame';\n\ntype Props = {\n    playerName: string | null | undefined\n    team: string | undefined\n    points: number\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst NextTurn: React.FC<Props> = ({ playerName, team, points, idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n\n    const [displayStartGame, setDisplayStartGame] = useState(false)\n    // const [updateTeamPlayedCount, setUpdateTeamPlayedCount] = useState<number>(0)\n\n    useEffect(() => {\n        socketRef.current.on(\"start game prvw\", (start: boolean) => {\n            setDisplayStartGame(start)\n        })\n\n        // socketRef.current.emit(\"ask room\", idRoom);\n\n        // socketRef.current.on(\"room\", (room: RoomObj) => {\n        //     setUpdateTeamPlayedCount(room.teamPlayedCount)\n        // });\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                    \n                                yourPlayingRef.current = true\n                            }  \n                        }\n                    })\n                }\n            })\n        });\n    }, [])\n\n    const startGamePreview = () => {\n        socketRef.current.emit(\"start game preview\", idRoom)\n\n        socketRef.current.emit(\"set playing team and player\", idRoom)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        <>\n            { displayStartGame\n                ? <StartGameTransition socketRef={socketRef} idRoom={idRoom} />\n\n                : <div className=\"transition-game d-flex flex-column justify-content-center align-itmes-center\" style={{height: '75vh'}}>      \n                    <div className=\"player-name\">\n                        {playerName}\n                    </div>       \n                    <p className=\"text-points\">\n                       <span> a remport√© <span className=\"team-name\">{points}</span> {points <= 1 ? 'point' : 'points'} pour la team  </span> <span className=\"team-name ms-1\"> {team} </span>\n                    </p>                        \n                    { yourPlayingRef.current === true\n                        ? <button onClick={() => startGamePreview()} className=\"mon-bouton mx-auto\">\n                            Suivant\n                        </button>  \n\n                        :''\n                    }\n                    \n                  </div>      \n            }            \n        </>\n    )\n}\n\nexport default NextTurn"]},"metadata":{},"sourceType":"module"}