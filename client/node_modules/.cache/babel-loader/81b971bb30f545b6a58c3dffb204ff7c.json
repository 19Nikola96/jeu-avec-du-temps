{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Messenger from './Messenger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = ({\n  roomData,\n  error,\n  socketRef\n}) => {\n  _s();\n\n  // const [dataRoom, setDataRoom] = useState<DataRoomObjWithKey>()\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    socketRef.current.emit(\"ask share rooms\", true);\n    socketRef.current.on(\"share rooms\", usersData => {\n      if (roomData.id !== '') {\n        Object.keys(usersData).map(id => {\n          if (roomData.id === id) {\n            setUsers(usersData[id].users);\n          }\n\n          return true;\n        });\n      }\n    });\n  }, [roomData]);\n  const inputRef = React.useRef();\n\n  const copyLink = e => {\n    inputRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Room: \", roomData === undefined ? '' : roomData.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), \"Id:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"mon-input\",\n      ref: inputRef,\n      type: \"text\",\n      defaultValue: roomData === undefined ? '' : roomData.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bouton mx-2\",\n      onClick: e => copyLink(e),\n      style: {\n        marginLeft: '1rem'\n      },\n      children: \"Copier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), \"users\", users !== undefined ? users.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.pseudo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this);\n    }) : '', /*#__PURE__*/_jsxDEV(Messenger, {\n      idRoom: roomData.id,\n      socketRef: socketRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Room, \"PxsemHFhelu4l8uSB6gZINKppZA=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Room.tsx"],"names":["React","useEffect","useState","Messenger","Room","roomData","error","socketRef","users","setUsers","current","emit","on","usersData","id","Object","keys","map","inputRef","useRef","copyLink","e","select","document","execCommand","target","focus","undefined","name","marginLeft","user","index","pseudo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,SAAP,MAAsB,aAAtB;;;AAQA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AAAA;;AAE9D;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,SAAS,CAACG,OAAV,CAAkBC,IAAlB,CAAuB,iBAAvB,EAA0C,IAA1C;AAEAJ,IAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqB,aAArB,EAAqCC,SAAD,IAAmC;AACnE,UAAIR,QAAQ,CAACS,EAAT,KAAgB,EAApB,EAAwB;AACpBC,QAAAA,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,GAAvB,CAA4BH,EAAD,IAAQ;AAC/B,cAAIT,QAAQ,CAACS,EAAT,KAAgBA,EAApB,EAAwB;AACpBL,YAAAA,QAAQ,CAACI,SAAS,CAACC,EAAD,CAAT,CAAcN,KAAf,CAAR;AACH;;AACD,iBAAO,IAAP;AACH,SALD;AAMH;AACJ,KATD;AAUH,GAbQ,EAaN,CAACH,QAAD,CAbM,CAAT;AAeA,QAAMa,QAAQ,GAAGlB,KAAK,CAACmB,MAAN,EAAjB;;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAY;AACzBH,IAAAA,QAAQ,CAACR,OAAT,CAAiBY,MAAjB;AAEAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AAEAH,IAAAA,CAAC,CAACI,MAAF,CAASC,KAAT;AACH,GAND;;AAQA,sBACI;AAAA,yBACWrB,QAAQ,KAAKsB,SAAb,GAAyB,EAAzB,GAA8BtB,QAAQ,CAACuB,IADlD,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,sBAII;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,GAAG,EAAEV,QAAlC;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,YAAY,EAAEb,QAAQ,KAAKsB,SAAb,GAAyB,EAAzB,GAA8BtB,QAAQ,CAACS;AAA7G;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAGO,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAAxD;AAA6D,MAAA,KAAK,EAAE;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKvB,KAPL,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,WAUME,KAAK,KAAKmB,SAAV,GACInB,KAAK,CAACS,GAAN,CAAU,CAACa,IAAD,EAAOC,KAAP,KAAiB;AACzB,0BAAO;AAAA,kBAAiBD,IAAI,CAACE;AAAtB,SAAQD,KAAR;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFC,CADJ,GAKI,EAfV,eAiBI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE1B,QAAQ,CAACS,EAA5B;AAAgC,MAAA,SAAS,EAAEP;AAA3C;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAnDD;;GAAMH,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport { AdminObj, DataRoomObjWithKey, RoomObj } from '../Types'\nimport Messenger from './Messenger'\n\ntype Props = {\n    roomData: RoomObj\n    error: string\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Room: React.FC<Props> = ({ roomData, error, socketRef }) => {\n\n    // const [dataRoom, setDataRoom] = useState<DataRoomObjWithKey>()\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask share rooms\", true)\n\n        socketRef.current.on(\"share rooms\", (usersData: DataRoomObjWithKey) => {            \n            if (roomData.id !== '') {\n                Object.keys(usersData).map((id) => {                    \n                    if (roomData.id === id) {\n                        setUsers(usersData[id].users)            \n                    }\n                    return true\n                })\n            }\n        })\n    }, [roomData])\n\n    const inputRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\n\n    const copyLink = (e: any) => {\n        inputRef.current.select();\n\n        document.execCommand('copy');\n\n        e.target.focus();\n    }\n\n    return (\n        <div>\n            Room: {roomData === undefined ? '' : roomData.name}\n            <br/>\n            Id:\n            <input className=\"mon-input\" ref={inputRef} type=\"text\" defaultValue={roomData === undefined ? '' : roomData.id}/>\n            <button className=\"bouton mx-2\" onClick={(e) => copyLink(e)} style={{ marginLeft: '1rem'}}>Copier</button>\n            <br/>\n            {error}\n            <br/>\n            users\n            { users !== undefined\n                ? users.map((user, index) => {\n                    return <p key={index} >{user.pseudo}</p>\n                })\n\n                : ''\n            }\n            <Messenger idRoom={roomData.id} socketRef={socketRef} />\n        </div>\n    )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}