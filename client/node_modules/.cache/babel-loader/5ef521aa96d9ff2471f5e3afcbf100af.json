{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const timeout = useRef();\n  useEffect(() => {\n    // drawOnCanvas();\n    drawOnCanvas2();\n  }, []);\n\n  const drawOnCanvas2 = () => {\n    let canvas = document.getElementById('board'); // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n\n    let ctx = canvas.getContext('2d');\n    let x;\n    let y;\n    let mouseDown = false;\n\n    window.onmousedown = e => {\n      ctx.lineDashOffset = 0;\n      ctx.moveTo(x, y);\n      mouseDown = true;\n    };\n\n    window.onmouseup = e => {\n      mouseDown = false;\n    };\n\n    window.onmousemove = e => {\n      x = e.clientX;\n      y = e.clientY;\n\n      if (mouseDown) {\n        ctx.lineTo(x, y);\n        ctx.stroke();\n      }\n    };\n  }; // const drawOnCanvas = () => {\n  //     let canvas = document.getElementById('board') as HTMLCanvasElement;        \n  //     let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  //     let sketch = document.querySelector('#sketch') as HTMLDivElement;\n  //     let sketch_style = getComputedStyle(sketch);\n  //     canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n  //     canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n  //     let mouse = {x: 0, y: 0};\n  //     let last_mouse = {x: 0, y: 0};\n  //     /* Mouse Capturing Work */\n  //     canvas.addEventListener('mousemove', function(e) {\n  //         console.log();\n  //         last_mouse.x = mouse.x;\n  //         last_mouse.y = mouse.y;\n  //         mouse.x = e.pageX - this.offsetLeft;\n  //         mouse.y = e.pageY - this.offsetTop;\n  //     }, false);\n  //     /* Drawing on Paint App */\n  //     ctx.lineWidth = 5;\n  //     ctx.lineJoin = 'round';\n  //     ctx.lineCap = 'round';\n  //     ctx.strokeStyle = 'blue';\n  //     canvas.addEventListener('mousedown', function(e) {\n  //         canvas.addEventListener('mousemove', onPaint, false);\n  //     }, false);\n  //     canvas.addEventListener('mouseup', function() {\n  //         canvas.removeEventListener('mousemove', onPaint, false);\n  //     }, false);\n  //     let root: any = this;\n  //     let base64ImageData;\n  //     let onPaint = function() {\n  //         ctx.beginPath();\n  //         ctx.moveTo(last_mouse.x, last_mouse.y);\n  //         ctx.lineTo(mouse.x, mouse.y);\n  //         ctx.closePath();\n  //         ctx.stroke();\n  //         if (root.timeout != undefined) {\n  //             clearTimeout(root.timeout)\n  //         }\n  //         root.timeout = setTimeout(() => {\n  //             base64ImageData = canvas.toDataURL('image/png')\n  //         }, 1000)\n  //     };\n  //     console.log(base64ImageData);\n  // }      \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sketch\",\n      id: \"sketch\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"board\",\n        width: \"1080\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"RKFfEbX6LLd/ZQk05mulYofza1k=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx"],"names":["React","useEffect","useRef","Board","timeout","drawOnCanvas2","canvas","document","getElementById","ctx","getContext","x","y","mouseDown","window","onmousedown","e","lineDashOffset","moveTo","onmouseup","onmousemove","clientX","clientY","lineTo","stroke"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAMC,OAAsC,GAAGF,MAAM,EAArD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ;AAEAI,IAAAA,aAAa;AAEhB,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMA,aAAa,GAAG,MAAM;AACxB,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAb,CADwB,CAExB;;AACA,QAAIC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAV;AAIA,QAAIC,CAAJ;AACA,QAAIC,CAAJ;AACA,QAAIC,SAAS,GAAG,KAAhB;;AAEAC,IAAAA,MAAM,CAACC,WAAP,GAAsBC,CAAD,IAAY;AAC7BP,MAAAA,GAAG,CAACQ,cAAJ,GAAqB,CAArB;AACAR,MAAAA,GAAG,CAACS,MAAJ,CAAWP,CAAX,EAAcC,CAAd;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACH,KAJD;;AAMAC,IAAAA,MAAM,CAACK,SAAP,GAAoBH,CAAD,IAAY;AAC3BH,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD;;AAIAC,IAAAA,MAAM,CAACM,WAAP,GAAsBJ,CAAD,IAAY;AAC7BL,MAAAA,CAAC,GAAGK,CAAC,CAACK,OAAN;AACAT,MAAAA,CAAC,GAAGI,CAAC,CAACM,OAAN;;AAEA,UAAIT,SAAJ,EAAe;AACXJ,QAAAA,GAAG,CAACc,MAAJ,CAAWZ,CAAX,EAAcC,CAAd;AACAH,QAAAA,GAAG,CAACe,MAAJ;AACH;AACJ,KARD;AASH,GA9BD,CAZgB,CA4ChB;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,EAAE,EAAC,QAA3B;AAAA,6BACI;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAgC,QAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAjHD;;GAAMrB,K;;KAAAA,K;AAmHN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nconst Board = () => {\n\n    const timeout: React.MutableRefObject< any > = useRef()\n\n    useEffect(() => {\n\n        // drawOnCanvas();\n\n        drawOnCanvas2();\n        \n    }, [])\n\n    const drawOnCanvas2 = () => {\n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n        // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    \n        \n\n        let x: number;\n        let y: number;\n        let mouseDown = false;\n\n        window.onmousedown = (e: any) => {\n            ctx.lineDashOffset = 0\n            ctx.moveTo(x, y);\n            mouseDown = true;\n        }\n\n        window.onmouseup = (e: any) => {\n            mouseDown = false;\n        }\n\n        window.onmousemove = (e: any) => {\n            x = e.clientX;\n            y = e.clientY;\n\n            if (mouseDown) {\n                ctx.lineTo(x ,y)\n                ctx.stroke()   \n            }\n        }\n    }\n\n    // const drawOnCanvas = () => {\n    //     let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n    //     let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    \n    //     let sketch = document.querySelector('#sketch') as HTMLDivElement;\n    //     let sketch_style = getComputedStyle(sketch);\n    //     canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n    //     canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n    \n    //     let mouse = {x: 0, y: 0};\n    //     let last_mouse = {x: 0, y: 0};\n    \n    //     /* Mouse Capturing Work */\n    //     canvas.addEventListener('mousemove', function(e) {\n    //         console.log();\n            \n    //         last_mouse.x = mouse.x;\n    //         last_mouse.y = mouse.y;\n    \n    //         mouse.x = e.pageX - this.offsetLeft;\n    //         mouse.y = e.pageY - this.offsetTop;\n    //     }, false);\n    \n    \n    //     /* Drawing on Paint App */\n    //     ctx.lineWidth = 5;\n    //     ctx.lineJoin = 'round';\n    //     ctx.lineCap = 'round';\n    //     ctx.strokeStyle = 'blue';\n    \n    //     canvas.addEventListener('mousedown', function(e) {\n    //         canvas.addEventListener('mousemove', onPaint, false);\n    //     }, false);\n    \n    //     canvas.addEventListener('mouseup', function() {\n    //         canvas.removeEventListener('mousemove', onPaint, false);\n    //     }, false);\n\n    //     let root: any = this;\n    //     let base64ImageData;\n    \n    //     let onPaint = function() {\n    //         ctx.beginPath();\n    //         ctx.moveTo(last_mouse.x, last_mouse.y);\n    //         ctx.lineTo(mouse.x, mouse.y);\n    //         ctx.closePath();\n    //         ctx.stroke();\n\n    //         if (root.timeout != undefined) {\n    //             clearTimeout(root.timeout)\n    //         }\n\n    //         root.timeout = setTimeout(() => {\n    //             base64ImageData = canvas.toDataURL('image/png')\n    //         }, 1000)\n    //     };\n\n    //     console.log(base64ImageData);\n        \n    // }      \n\n    return (\n        <div>\n            <div className=\"sketch\" id=\"sketch\">\n                <canvas id=\"board\" width=\"1080\" height=\"400\"></canvas>    \n            </div>\n        </div>\n    )\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}