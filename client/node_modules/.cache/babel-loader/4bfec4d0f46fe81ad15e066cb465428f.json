{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Chrono.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chrono = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      console.log(rulesData);\n      setTime(rulesData.time);\n    });\n    setInterval(() => {\n      setTime(time => time - 1);\n    }, 1000);\n  }, []); // const chronometer = () => {\n  //     setInterval(() => {\n  //         console.log(time);\n  //         if (time !== undefined) {                \n  //             setTime(time - 1)\n  //         }\n  //     }, 1000)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Time: \", time]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chrono, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\n\n_c = Chrono;\nexport default Chrono;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chrono\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Chrono.tsx"],"names":["React","useEffect","useState","Chrono","idRoom","socketRef","time","setTime","current","emit","on","rulesData","console","log","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAQA,MAAMC,MAAuB,GAAI,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAExD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAS,CAAT,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,SAAS,CAACG,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCL,MAApC;AAEAC,IAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqB,OAArB,EAA+BC,SAAD,IAAyB;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAJ,MAAAA,OAAO,CAACI,SAAS,CAACL,IAAX,CAAP;AACH,KAHD;AAKAQ,IAAAA,WAAW,CAAC,MAAM;AACdP,MAAAA,OAAO,CAACD,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAP;AACH,KAFU,EAER,IAFQ,CAAX;AAGH,GAXQ,EAWN,EAXM,CAAT,CAJwD,CAiBxD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,yBACWA,IADX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCD;;GAAMH,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { RulesObj } from '../Types'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Chrono: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const [time, setTime] = useState<number>(0)\n\n    useEffect(() => {        \n        socketRef.current.emit(\"ask rules\", idRoom)\n\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            console.log(rulesData)\n            setTime(rulesData.time)\n        })\n\n        setInterval(() => {\n            setTime(time => time - 1)\n        }, 1000)\n    }, [])\n\n    // const chronometer = () => {\n    //     setInterval(() => {\n    //         console.log(time);\n            \n    //         if (time !== undefined) {                \n    //             setTime(time - 1)\n    //         }\n    //     }, 1000)\n    // }\n\n    return (\n        <div>\n            Time: {time}\n        </div>\n    )\n}\n\nexport default Chrono\n"]},"metadata":{},"sourceType":"module"}