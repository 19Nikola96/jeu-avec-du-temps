{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartGame = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [startGamePreview, setStartGamePreview] = useState(false);\n  const yourPlayingRef = useRef(false); // DISPLAY\n\n  const [actualTeam, setActualTeam] = useState();\n  const [actualPlayer, setActualPlayer] = useState();\n  const [actualPlayerId, setActualPlayerId] = useState();\n  const [teams, setTeams] = useState();\n  const [teamPlayers, setTeamPlayers] = useState([]);\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      teams.forEach(team => {\n        console.log(team);\n\n        if (team.playing === true) {\n          setActualTeam(team.name);\n          team.players.forEach(player => {\n            if (player.playing === true) {\n              console.log(player.pseudo);\n              setActualPlayer(player.pseudo);\n              setActualPlayerId(player.id);\n            }\n          });\n        }\n      });\n      console.log(teams[0].players[0].id);\n    });\n    socketRef.current.emit(\"ask users\", idRoom);\n    socketRef.current.on(\"users\", usersData => {\n      setUsers(usersData);\n    });\n    console.log(socketRef.current.id);\n  }, []);\n\n  const startGame = () => {\n    setStartGamePreview(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    style: {\n      height: '70vh'\n    },\n    children: startGamePreview ? /*#__PURE__*/_jsxDEV(Game1, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [users === null || users === void 0 ? void 0 : users.forEach(user => {\n        if (user.id === socketRef.current.id && user.playing === true) {\n          yourPlayingRef.current = true;\n        }\n      }), yourPlayingRef.current ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light\",\n          children: \"C'est \\xE0 toi de jouer !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame(),\n          className: \"start-bouton\",\n          children: \"Let's Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [actualPlayer, \" de la team \", actualTeam, \" s'appr\\xEAte \\xE0 jouer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StartGame, \"xN23sy5e4QOrXGjdOwI2KPTq1Ww=\");\n\n_c = StartGame;\nexport default StartGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartGame\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx"],"names":["React","useEffect","useRef","useState","Game1","StartGame","idRoom","socketRef","startGamePreview","setStartGamePreview","yourPlayingRef","actualTeam","setActualTeam","actualPlayer","setActualPlayer","actualPlayerId","setActualPlayerId","teams","setTeams","teamPlayers","setTeamPlayers","users","setUsers","current","emit","on","forEach","team","console","log","playing","name","players","player","pseudo","id","usersData","startGame","height","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { AdminObj, RulesObj, TeamObj } from '../Types';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n}\n\nconst StartGame: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [startGamePreview, setStartGamePreview] = useState<boolean>(false)\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n    // DISPLAY\n    \n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n    const [actualPlayerId, setActualPlayerId] = useState<string | number | undefined>()\n\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            teams.forEach((team) => {\n                console.log(team);\n                if (team.playing === true) {\n                    setActualTeam(team.name)\n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            console.log(player.pseudo);\n                            \n                            setActualPlayer(player.pseudo)\n                            setActualPlayerId(player.id)\n                        }\n                    })\n                    \n                }\n            })\n            \n            console.log(teams[0].players[0].id);\n        });\n\n        socketRef.current.emit(\"ask users\", idRoom)\n        \n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {                      \n            setUsers(usersData);\n        })\n        console.log(socketRef.current.id);\n    }, [])\n\n    const startGame = () => {\n        setStartGamePreview(true)\n    }\n\n    return (\n        <div className=\"row justify-content-center align-items-center\" style={{height: '70vh'}}>\n            { startGamePreview\n                ? <Game1 socketRef={socketRef} idRoom={idRoom}/>\n\n                : <>\n                    { \n                        users?.forEach((user) => {\n                            if (user.id === socketRef.current.id && user.playing === true) {\n                                yourPlayingRef.current = true\n                            }                            \n                        })\n                    }\n\n                    { yourPlayingRef.current\n                        ? <div>\n                                <p className=\"text-light\">C'est à toi de jouer !</p>\n                                <button onClick={() => startGame()} className=\"start-bouton\">Let's Go</button>\n                          </div> \n\n                        : <div className=\"text-light\">\n                            <p>{actualPlayer} de la team {actualTeam} s'apprête à jouer</p>\n                          </div>                        \n                    }     \n                </>      \n            }            \n        </div>\n    )\n}\n\nexport default StartGame\n"]},"metadata":{},"sourceType":"module"}