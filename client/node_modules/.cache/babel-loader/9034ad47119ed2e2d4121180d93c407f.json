{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/NextRound.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport StartGame from './StartGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NextRound = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const yourPlayingRef = useRef(false);\n  const [teams, setTeams] = useState();\n  const [round, setRound] = useState(0);\n  const [displayStartGame, setDisplayStartGame] = useState(false);\n  useEffect(() => {\n    socketRef.current.on(\"start game prvw\", start => {\n      setDisplayStartGame(start);\n    });\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      setRound(rulesData.round);\n    });\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      setTeams(teams);\n      teams.forEach(team => {\n        if (team.playing === true) {\n          team.players.forEach(player => {\n            if (player.playing === true) {\n              if (player.id === socketRef.current.id) {\n                yourPlayingRef.current = true;\n              }\n            }\n          });\n        }\n      });\n    });\n  }, []);\n\n  const startNextRound = () => {\n    socketRef.current.emit(\"start game preview\", idRoom);\n    socketRef.current.emit(\"set playing team and player\", idRoom);\n    setDisplayStartGame(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transition-game d-flex flex-column justify-content-center align-itmes-center\",\n    style: {\n      height: '75vh'\n    },\n    children: displayStartGame ? /*#__PURE__*/_jsxDEV(StartGame, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Phase \", round, \" fini !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-between mx-auto\",\n        children: teams === null || teams === void 0 ? void 0 : teams.map((team, index) => {\n          setTimeout(() => {}, (index + 1) * 200);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-results col-md-3 grow\",\n            style: {\n              animationDelay: '.2s'\n            },\n            children: [\"L'\\xE9quipe \", team.name, \" a un total de \", team.points]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), yourPlayingRef.current === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startNextRound(),\n        className: \"mon-bouton mx-auto\",\n        children: \"Phase suivante !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }, this) : '']\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NextRound, \"4Ah2X8+nyDbRupU9K2N9yGYb6x8=\");\n\n_c = NextRound;\nexport default NextRound;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextRound\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/NextRound.tsx"],"names":["React","useEffect","useRef","useState","StartGame","NextRound","idRoom","socketRef","yourPlayingRef","teams","setTeams","round","setRound","displayStartGame","setDisplayStartGame","current","on","start","emit","rulesData","forEach","team","playing","players","player","id","startNextRound","height","map","index","setTimeout","animationDelay","name","points"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { RulesObj, TeamObj } from '../Types'\nimport StartGame from './StartGame'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst NextRound: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n\n    const [teams, setTeams] = useState<TeamObj []>()\n    const [round, setRound] = useState<number>(0)\n    const [displayStartGame, setDisplayStartGame] = useState(false)\n\n    useEffect(() => {\n        socketRef.current.on(\"start game prvw\", (start: boolean) => {\n            setDisplayStartGame(start)\n        })\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setRound(rulesData.round)\n        })\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {   \n            setTeams(teams)\n            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                    \n                                yourPlayingRef.current = true\n                            }  \n                        }                        \n                    })\n                }\n            })\n        });\n    }, [])\n\n    const startNextRound = () => {\n        socketRef.current.emit(\"start game preview\", idRoom)        \n\n        socketRef.current.emit(\"set playing team and player\", idRoom)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        < div className=\"transition-game d-flex flex-column justify-content-center align-itmes-center\" style={{height: '75vh'}}>\n            { displayStartGame\n                ? <StartGame socketRef={socketRef} idRoom={idRoom} />\n\n                : <>\n                    <h5>Phase {round} fini !</h5>\n\n                    <div className=\"row justify-content-between mx-auto\">\n                        {teams?.map((team, index) => {\n\n                            setTimeout(() => {\n\n                            }, ((index + 1) * 200 ))\n\n\n                            return <div className=\"team-results col-md-3 grow\" style={{ animationDelay: '.2s' }}>\n                                        L'Ã©quipe {team.name} a un total de {team.points}\n                                   </div>\n                        })}\n                    </div>                    \n\n                    { yourPlayingRef.current === true\n                        ? <button onClick={() => startNextRound()} className=\"mon-bouton mx-auto\">\n                            Phase suivante !\n                        </button>\n\n                        :''\n                    }\n                    \n                  </>\n\n            }\n            \n        </div>\n    )\n}\n\nexport default NextRound\n"]},"metadata":{},"sourceType":"module"}