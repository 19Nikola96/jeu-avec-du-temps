{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Messenger.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messenger = ({\n  idRoom\n}) => {\n  _s();\n\n  const [myPseudo, setMyPseudo] = useState('');\n  const [myId, setMyId] = useState();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n    socketRef.current.on(\"your id\", id => {\n      setMyId(id);\n    });\n    socketRef.current.on(\"message\", messageObject => {\n      console.log('messageObj');\n      setMessages([...messages, messageObject]);\n    });\n    setMyPseudo(localStorage.getItem('myPseudo'));\n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message !== '') {\n      const messageObject = {\n        body: {\n          message,\n          myPseudo,\n          myId\n        },\n        idRoom\n      };\n      setMessage('');\n      console.log(messageObject);\n      socketRef.current.emit(\"send message\", messageObject);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: messages.map(messageObj => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: messageObj.body.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Dit un truc...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messenger, \"jFdjtXKLTi3xb/XNElT3rE5ycPI=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Messenger.tsx"],"names":["React","useEffect","useRef","useState","io","Messenger","idRoom","myPseudo","setMyPseudo","myId","setMyId","message","setMessage","messages","setMessages","socketRef","current","connect","on","id","messageObject","console","log","localStorage","getItem","sendMessage","e","preventDefault","body","emit","undefined","map","messageObj","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;;;;AAOA,MAAMC,SAA0B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAE/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAgB,EAAhB,CAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAmB,EAAnB,CAAxC;AAEA,QAAMY,SAAsC,GAAGb,MAAM,EAArD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,SAAS,CAACC,OAAV,GAAoBZ,EAAE,CAACa,OAAH,CAAW,GAAX,CAApB;AAEAF,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAiCC,EAAD,IAAyB;AACrDT,MAAAA,OAAO,CAACS,EAAD,CAAP;AACH,KAFD;AAIAJ,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqB,SAArB,EAAiCE,aAAD,IAAkC;AAC9DC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAR,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcO,aAAd,CAAD,CAAX;AACH,KAJD;AAMAZ,IAAAA,WAAW,CAACe,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAX;AAEH,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMC,WAAW,GAAIC,CAAD,IAA2C;AAC3DA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIhB,OAAO,KAAK,EAAhB,EAAoB;AAChB,YAAMS,aAAa,GAAG;AAClBQ,QAAAA,IAAI,EAAE;AACFjB,UAAAA,OADE;AAEFJ,UAAAA,QAFE;AAGFE,UAAAA;AAHE,SADY;AAMlBH,QAAAA;AANkB,OAAtB;AASAM,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAEAL,MAAAA,SAAS,CAACC,OAAV,CAAkBa,IAAlB,CAAuB,cAAvB,EAAuCT,aAAvC;AACH;AACJ,GAjBD;;AAmBA,sBACI;AAAA,4BACI;AAAA,gBACMP,QAAQ,KAAKiB,SAAb,gBACI;AAAA,kBACIjB,QAAQ,CAACkB,GAAT,CAAcC,UAAD,IAAgB;AAC3B,8BAAO;AAAA,sBAAKA,UAAU,CAACJ,IAAX,CAAgBjB;AAArB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFC;AADJ,uBADJ,GAOI;AARV;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAM,MAAA,QAAQ,EAAEc,WAAhB;AAAA,8BACI;AAAU,QAAA,WAAW,EAAC,gBAAtB;AAAuC,QAAA,KAAK,EAAEd,OAA9C;AAAuD,QAAA,QAAQ,EAAGe,CAAD,IAAOd,UAAU,CAACc,CAAC,CAACO,MAAF,CAASC,KAAV;AAAlF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAhED;;GAAM7B,S;;KAAAA,S;AAkEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from 'socket.io-client'\nimport { MessageObject } from '../Types'\n\ntype Props = {\n    idRoom: string | number\n}\n\nconst Messenger: React.FC<Props> = ({ idRoom }) => {\n\n    const [myPseudo, setMyPseudo] = useState<string | null>('')\n    const [myId, setMyId] = useState<string | number>()\n    const [message, setMessage] = useState<string>('')\n    const [messages, setMessages] = useState<MessageObject []>([])\n\n    const socketRef: React.MutableRefObject<any> = useRef()\n\n    useEffect(() => {\n        socketRef.current = io.connect('/')   \n        \n        socketRef.current.on(\"your id\", (id: string | number) => {\n            setMyId(id)\n        })        \n\n        socketRef.current.on(\"message\", (messageObject: MessageObject) => {\n            console.log('messageObj');\n            \n            setMessages([...messages, messageObject])\n        })\n\n        setMyPseudo(localStorage.getItem('myPseudo'))\n\n    }, [])\n\n    const sendMessage = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        if (message !== '') {\n            const messageObject = {\n                body: { \n                    message,\n                    myPseudo,\n                    myId\n                }, \n                idRoom\n            }\n\n            setMessage('')\n            console.log(messageObject);\n            \n            socketRef.current.emit(\"send message\", messageObject)\n        }  \n    }\n\n    return (\n        <div>\n            <ul>\n                { messages !== undefined\n                    ? <>\n                        { messages.map((messageObj) => {\n                            return <li>{messageObj.body.message}</li>\n                        })}\n                    </>\n\n                    : ''\n                }\n            </ul>\n            <form onSubmit={sendMessage}>\n                <textarea placeholder=\"Dit un truc...\" value={message} onChange={(e) => setMessage(e.target.value)}></textarea>\n                <button type=\"submit\">Envover</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Messenger\n"]},"metadata":{},"sourceType":"module"}