{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = ({\n  idRoom,\n  socketRef,\n  playing\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log(playing);\n\n    if (playing === true) {\n      drawOnCanvas();\n    } else {\n      socketRef.current.on(\"canvas data drawn img\", dataDrawing => {\n        console.log(dataDrawing);\n        let image = new Image();\n        let canvas = document.getElementById('board');\n        let ctx = canvas.getContext('2d');\n\n        image.onload = () => {\n          ctx.drawImage(image, 0, 0);\n        };\n\n        image.src = dataDrawing;\n      });\n    } // drawOnCanvas2();\n\n  }, []); // const drawOnCanvas2 = () => {\n  //     let canvas = document.getElementById('board') as HTMLCanvasElement;        \n  //     // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n  //     let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  //     let x: number;\n  //     let y: number;\n  //     let mouseDown = false;\n  //     window.onmousedown = (e: any) => {\n  //         ctx.moveTo(x, y);\n  //         mouseDown = true;\n  //     }\n  //     window.onmouseup = (e: any) => {\n  //         mouseDown = false;\n  //     }\n  //     window.onmousemove = (e: any) => {\n  //         x = e.clientX;\n  //         y = e.clientY;\n  //         if (mouseDown) {\n  //             ctx.lineDashOffset = -100\n  //             ctx.lineTo(x ,y)\n  //             ctx.stroke()   \n  //         }\n  //     }\n  // }\n\n  const drawOnCanvas = () => {\n    let canvas = document.getElementById('board');\n    let ctx = canvas.getContext('2d');\n    let sketch = document.querySelector('#sketch');\n    let sketch_style = getComputedStyle(sketch);\n    canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n    canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n    let mouse = {\n      x: 0,\n      y: 0\n    };\n    let last_mouse = {\n      x: 0,\n      y: 0\n    };\n    /* Mouse Capturing Work */\n\n    canvas.addEventListener('mousemove', function (e) {\n      console.log();\n      last_mouse.x = mouse.x;\n      last_mouse.y = mouse.y;\n      mouse.x = e.pageX - this.offsetLeft;\n      mouse.y = e.pageY - this.offsetTop;\n    }, false);\n    /* Drawing on Paint App */\n\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    canvas.addEventListener('mousedown', function (e) {\n      canvas.addEventListener('mousemove', onPaint, false);\n    }, false);\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', onPaint, false);\n    }, false);\n    let root = this;\n    let base64ImageData;\n\n    let onPaint = function () {\n      ctx.beginPath();\n      ctx.moveTo(last_mouse.x, last_mouse.y);\n      ctx.lineTo(mouse.x, mouse.y);\n      ctx.closePath();\n      ctx.stroke();\n      base64ImageData = canvas.toDataURL('image/png');\n      let drawingObj = {\n        idRoom,\n        base64ImageData\n      };\n      console.log(drawingObj.base64ImageData);\n      socketRef.current.emit(\"canvas data drawn\", drawingObj); // if (root.timeout != undefined) {\n      //     clearTimeout(root.timeout)\n      // }\n      // root.timeout = setTimeout(() => {\n      //     \n      // }, 1000)\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sketch\",\n      id: \"sketch\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"board\",\n        width: \"1080\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx"],"names":["React","useEffect","Board","idRoom","socketRef","playing","console","log","drawOnCanvas","current","on","dataDrawing","image","Image","canvas","document","getElementById","ctx","getContext","onload","drawImage","src","sketch","querySelector","sketch_style","getComputedStyle","width","parseInt","getPropertyValue","height","mouse","x","y","last_mouse","addEventListener","e","pageX","offsetLeft","pageY","offsetTop","lineWidth","lineJoin","lineCap","strokeStyle","onPaint","removeEventListener","root","base64ImageData","beginPath","moveTo","lineTo","closePath","stroke","toDataURL","drawingObj","emit"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { TeamObj } from '../Types';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n    playing: boolean | undefined\n}\n\nconst Board: React.FC<Props>  = ({ idRoom, socketRef, playing }) => {\n\n    useEffect(() => {\n        console.log(playing);\n        \n\n        if (playing === true) {\n            drawOnCanvas();\n        } else {\n            socketRef.current.on(\"canvas data drawn img\", (dataDrawing: any) => {                                                    \n                console.log(dataDrawing);\n                let image = new Image();\n                let canvas = document.getElementById('board') as HTMLCanvasElement;        \n    \n                let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    \n                image.onload = () => {\n                    ctx.drawImage(image, 0, 0);\n                }\n                image.src = dataDrawing\n            })\n        }\n        \n\n        // drawOnCanvas2();\n        \n    }, [])\n\n    // const drawOnCanvas2 = () => {\n    //     let canvas = document.getElementById('board') as HTMLCanvasElement;        \n    //     // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n    //     let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    \n        \n\n    //     let x: number;\n    //     let y: number;\n    //     let mouseDown = false;\n\n    //     window.onmousedown = (e: any) => {\n    //         ctx.moveTo(x, y);\n    //         mouseDown = true;\n    //     }\n\n    //     window.onmouseup = (e: any) => {\n    //         mouseDown = false;\n    //     }\n\n    //     window.onmousemove = (e: any) => {\n    //         x = e.clientX;\n    //         y = e.clientY;\n\n    //         if (mouseDown) {\n    //             ctx.lineDashOffset = -100\n    //             ctx.lineTo(x ,y)\n    //             ctx.stroke()   \n    //         }\n    //     }\n    // }\n\n    const drawOnCanvas = () => {\n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    \n        let sketch = document.querySelector('#sketch') as HTMLDivElement;\n        let sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n    \n        let mouse = {x: 0, y: 0};\n        let last_mouse = {x: 0, y: 0};\n    \n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            console.log();\n            \n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n    \n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n    \n    \n        /* Drawing on Paint App */\n        ctx.lineWidth = 2;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n    \n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n    \n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        let root: any = this;\n        let base64ImageData;\n    \n        let onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            base64ImageData = canvas.toDataURL('image/png')\n\n            let drawingObj = {\n                idRoom,\n                base64ImageData\n            }\n\n            console.log(drawingObj.base64ImageData);\n\n            socketRef.current.emit(\"canvas data drawn\", drawingObj);\n\n            // if (root.timeout != undefined) {\n            //     clearTimeout(root.timeout)\n            // }\n\n            // root.timeout = setTimeout(() => {\n            //     \n            // }, 1000)\n        };\n    }      \n\n    return (\n        <div>\n            <div className=\"sketch\" id=\"sketch\">\n                <canvas id=\"board\" width=\"1080\" height=\"400\"></canvas>    \n            </div>\n        </div>\n    )\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}