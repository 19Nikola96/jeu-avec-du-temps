{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game1 = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [actualWord, setActualWord] = useState();\n\n  const getRandomInteger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  useEffect(() => {\n    socketRef.current.emit(\"ask words\", idRoom);\n    socketRef.current.on(\"words\", words => {\n      let randomNumber = getRandomInteger(0, words.length - 1);\n      words.forEach((word, index) => {\n        if (randomNumber === index) {\n          console.log(word);\n          console.log('test');\n        }\n      });\n      setWords(words);\n    });\n  }, []);\n\n  const makeRandomWord = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-light\",\n      children: actualWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game1, \"IgQ2/mF4iIvbfvziZyq0VbZEDkM=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx"],"names":["React","useState","useEffect","Game1","idRoom","socketRef","words","setWords","actualWord","setActualWord","getRandomInteger","min","max","Math","floor","random","current","emit","on","randomNumber","length","forEach","word","index","console","log","makeRandomWord"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAOA,MAAMC,KAAsB,GAAI,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAEvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAY,EAAZ,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;;AAEA,QAAMS,gBAAgB,GAAG,CAACC,GAAD,EAAcC,GAAd,KAA8B;AACnD,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,SAAS,CAACW,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCb,MAApC;AACAC,IAAAA,SAAS,CAACW,OAAV,CAAkBE,EAAlB,CAAqB,OAArB,EAA+BZ,KAAD,IAAsB;AAEhD,UAAIa,YAAY,GAAGT,gBAAgB,CAAC,CAAD,EAAIJ,KAAK,CAACc,MAAN,GAAe,CAAnB,CAAnC;AAEAd,MAAAA,KAAK,CAACe,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,YAAIJ,YAAY,KAAKI,KAArB,EAA4B;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH;AACJ,OAND;AAOAlB,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAZD;AAgBH,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMoB,cAAc,GAAG,MAAM,CAG5B,CAHD;;AAKA,sBACI;AAAA,2BAEI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,gBAA2BlB;AAA3B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCD;;GAAML,K;;KAAAA,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const [words, setWords] = useState<string []>([])\n    const [actualWord, setActualWord] = useState<string>()\n\n    const getRandomInteger = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: string []) => {\n            \n            let randomNumber = getRandomInteger(0, words.length - 1)\n\n            words.forEach((word, index) => {\n                if (randomNumber === index) {\n                    console.log(word);\n                    console.log('test');\n                    \n                }\n            })\n            setWords(words);\n        }); \n        \n\n        \n    }, [])\n\n    const makeRandomWord = () => {\n\n        \n    }\n\n    return (\n        <div>\n        \n            <p className=\"text-light\">{actualWord}</p>\n        </div>\n    )\n}\n\nexport default Game1\n"]},"metadata":{},"sourceType":"module"}