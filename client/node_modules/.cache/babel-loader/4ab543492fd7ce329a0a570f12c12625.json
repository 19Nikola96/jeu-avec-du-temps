{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/NextTurn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StartGameTransition from './StartGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NextTurn = ({\n  playerName,\n  team,\n  points,\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [displayStartGame, setDisplayStartGame] = useState(false);\n  const [updateTeamPlayedCount, setUpdateTeamPlayedCount] = useState(0);\n  useEffect(() => {\n    socketRef.current.emit(\"ask room\", idRoom);\n    socketRef.current.on(\"room\", room => {\n      setUpdateteamPlayedCount(room.teamPlayedCount);\n    });\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      console.log(teams);\n      teams.forEach(team => {\n        if (team.playing === true) {\n          console.log(team.name);\n        }\n      });\n    });\n  }, []);\n\n  const startGamePreview = () => {\n    socketRef.current.emit(\"start game preview\", idRoom); // socketRef.current.emit(\"set playing team and player\", roomData.id)\n\n    setDisplayStartGame(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-light\",\n    children: displayStartGame ? /*#__PURE__*/_jsxDEV(StartGameTransition, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [playerName, \" de la team \", team, \" a remport\\xE9 \", points, \" \", points <= 1 ? 'point' : 'points', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGamePreview(),\n        className: \"mon-bouton\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NextTurn, \"HieXSUBT1LssUBh8j2qslZ/+AfQ=\");\n\n_c = NextTurn;\nexport default NextTurn;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextTurn\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/NextTurn.tsx"],"names":["React","useEffect","useState","StartGameTransition","NextTurn","playerName","team","points","idRoom","socketRef","displayStartGame","setDisplayStartGame","updateTeamPlayedCount","setUpdateTeamPlayedCount","current","emit","on","room","setUpdateteamPlayedCount","teamPlayedCount","teams","console","log","forEach","playing","name","startGamePreview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,mBAAP,MAAgC,aAAhC;;;;AAUA,MAAMC,QAAyB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,MAApB;AAA4BC,EAAAA,MAA5B;AAAoCC,EAAAA;AAApC,CAAD,KAAqD;AAAA;;AAEnF,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACU,qBAAD,EAAwBC,wBAAxB,IAAoDX,QAAQ,CAAS,CAAT,CAAlE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAACK,OAAV,CAAkBC,IAAlB,CAAuB,UAAvB,EAAmCP,MAAnC;AAEAC,IAAAA,SAAS,CAACK,OAAV,CAAkBE,EAAlB,CAAqB,MAArB,EAA8BC,IAAD,IAAmB;AAC5CC,MAAAA,wBAAwB,CAACD,IAAI,CAACE,eAAN,CAAxB;AACH,KAFD;AAIAV,IAAAA,SAAS,CAACK,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCP,MAApC;AAEAC,IAAAA,SAAS,CAACK,OAAV,CAAkBE,EAAlB,CAAqB,OAArB,EAA+BI,KAAD,IAAuB;AACjDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAA,MAAAA,KAAK,CAACG,OAAN,CAAejB,IAAD,IAAU;AACpB,YAAIA,IAAI,CAACkB,OAAL,KAAiB,IAArB,EAA2B;AACvBH,UAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACmB,IAAjB;AACH;AACJ,OAJD;AAKH,KARD;AASH,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BjB,IAAAA,SAAS,CAACK,OAAV,CAAkBC,IAAlB,CAAuB,oBAAvB,EAA6CP,MAA7C,EAD2B,CAG3B;;AAEAG,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACMD,gBAAgB,gBACZ,QAAC,mBAAD;AAAqB,MAAA,SAAS,EAAED,SAAhC;AAA2C,MAAA,MAAM,EAAED;AAAnD;AAAA;AAAA;AAAA;AAAA,YADY,gBAGZ;AAAA,iBACGH,UADH,kBAC2BC,IAD3B,qBAC6CC,MAD7C,OACsDA,MAAM,IAAI,CAAV,GAAc,OAAd,GAAwB,QAD9E,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMmB,gBAAgB,EAAvC;AAA2C,QAAA,SAAS,EAAC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjDD;;GAAMtB,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { RoomObj, TeamObj } from '../Types'\nimport StartGameTransition from './StartGame';\n\ntype Props = {\n    playerName: string | null | undefined\n    team: string | undefined\n    points: number\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst NextTurn: React.FC<Props> = ({ playerName, team, points, idRoom, socketRef }) => {\n\n    const [displayStartGame, setDisplayStartGame] = useState(false)\n    const [updateTeamPlayedCount, setUpdateTeamPlayedCount] = useState<number>(0)\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask room\", idRoom);\n\n        socketRef.current.on(\"room\", (room: RoomObj) => {\n            setUpdateteamPlayedCount(room.teamPlayedCount)\n        });\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            console.log(teams);\n            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    console.log(team.name);\n                }\n            })\n        });\n    }, [])\n\n    const startGamePreview = () => {\n        socketRef.current.emit(\"start game preview\", idRoom)\n\n        // socketRef.current.emit(\"set playing team and player\", roomData.id)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        <div className=\"text-light\">\n            { displayStartGame\n                ? <StartGameTransition socketRef={socketRef} idRoom={idRoom} />\n\n                : <>\n                    {playerName} de la team {team} a remport√© {points} {points <= 1 ? 'point' : 'points'}\n                    <br></br>\n                    <button onClick={() => startGamePreview()} className=\"mon-bouton\">\n                        Next\n                    </button>  \n                </>      \n            } \n            \n        </div>\n    )\n}\n\nexport default NextTurn\n"]},"metadata":{},"sourceType":"module"}