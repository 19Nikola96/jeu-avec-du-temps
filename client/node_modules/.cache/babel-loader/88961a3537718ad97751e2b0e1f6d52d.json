{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Messenger.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Style/messenger.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messenger = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [myPseudo, setMyPseudo] = useState('');\n  const [myId, setMyId] = useState();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socketRef.current.on(\"your id\", id => {\n      setMyId(id);\n    });\n    socketRef.current.on(\"messages\", messageBody => {\n      console.log(messageBody); //@ts-ignore\n\n      setMessages(messageBody);\n    });\n    setMyPseudo(localStorage.getItem('myPseudo'));\n  }, [messages]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message !== '') {\n      const messageObject = {\n        body: {\n          message,\n          myPseudo,\n          myId\n        },\n        idRoom\n      };\n      setMessage('');\n      socketRef.current.emit(\"send message\", messageObject);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-8 messenger\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-2\",\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [console.log(messages), messages !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: messages.map((messageBody, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [messageBody.message, \" de \", messageBody.myPseudo, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-form row justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Dit un truc...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mon-bouton rounded-circle\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 81\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messenger, \"EfU9QlndoqNsRb3JdhQ8rT2dC0Q=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Messenger.tsx"],"names":["React","useEffect","useState","Messenger","idRoom","socketRef","myPseudo","setMyPseudo","myId","setMyId","message","setMessage","messages","setMessages","current","on","id","messageBody","console","log","localStorage","getItem","sendMessage","e","preventDefault","messageObject","body","emit","undefined","map","index","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,uBAAP;;;;AAOA,MAAMC,SAA0B,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAE1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAgB,EAAhB,CAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAuB,EAAvB,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,SAAS,CAACS,OAAV,CAAkBC,EAAlB,CAAqB,SAArB,EAAiCC,EAAD,IAAyB;AACrDP,MAAAA,OAAO,CAACO,EAAD,CAAP;AACH,KAFD;AAIAX,IAAAA,SAAS,CAACS,OAAV,CAAkBC,EAAlB,CAAqB,UAArB,EAAkCE,WAAD,IAAoC;AACjEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ,EADiE,CAGjE;;AACAJ,MAAAA,WAAW,CAACI,WAAD,CAAX;AACH,KALD;AAOAV,IAAAA,WAAW,CAACa,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAX;AAEH,GAdQ,EAcN,CAACT,QAAD,CAdM,CAAT;;AAgBA,QAAMU,WAAW,GAAIC,CAAD,IAA2C;AAC3DA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAId,OAAO,KAAK,EAAhB,EAAoB;AAChB,YAAMe,aAAa,GAAG;AAClBC,QAAAA,IAAI,EAAE;AACFhB,UAAAA,OADE;AAEFJ,UAAAA,QAFE;AAGFE,UAAAA;AAHE,SADY;AAMlBJ,QAAAA;AANkB,OAAtB;AASAO,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAN,MAAAA,SAAS,CAACS,OAAV,CAAkBa,IAAlB,CAAuB,cAAvB,EAAuCF,aAAvC;AACH;AACJ,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBACKP,OAAO,CAACC,GAAR,CAAYP,QAAZ,CADL,EAEMA,QAAQ,KAAKgB,SAAb,gBACI;AAAA,kBACIhB,QAAQ,CAACiB,GAAT,CAAa,CAACZ,WAAD,EAAca,KAAd,KAAwB;AACnC,8BAAO;AAAA,uBAAiBb,WAAW,CAACP,OAA7B,UAA0CO,WAAW,CAACX,QAAtD;AAAA,aAASwB,KAAT;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFC;AADJ,uBADJ,GAOI,EATV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI;AAAM,MAAA,QAAQ,EAAER,WAAhB;AAA6B,MAAA,SAAS,EAAC,0CAAvC;AAAA,8BACI;AAAU,QAAA,WAAW,EAAC,gBAAtB;AAAuC,QAAA,KAAK,EAAEZ,OAA9C;AAAuD,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,UAAU,CAACY,CAAC,CAACQ,MAAF,CAASC,KAAV;AAAlF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,2BAAlB;AAA8C,UAAA,IAAI,EAAC,QAAnD;AAAA,iCAA4D;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA/DD;;GAAM7B,S;;KAAAA,S;AAiEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BodyMessageObject } from '../Types'\nimport './Style/messenger.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Messenger: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [myPseudo, setMyPseudo] = useState<string | null>('')\n    const [myId, setMyId] = useState<string | number>()\n    const [message, setMessage] = useState<string>('')\n    const [messages, setMessages] = useState<BodyMessageObject []>([])\n\n    useEffect(() => {\n        socketRef.current.on(\"your id\", (id: string | number) => {\n            setMyId(id)\n        })        \n\n        socketRef.current.on(\"messages\", (messageBody: BodyMessageObject) => {     \n            console.log(messageBody);\n            \n            //@ts-ignore\n            setMessages(messageBody)\n        })\n\n        setMyPseudo(localStorage.getItem('myPseudo'))\n\n    }, [messages])\n\n    const sendMessage = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        if (message !== '') {\n            const messageObject = {\n                body: { \n                    message,\n                    myPseudo,\n                    myId\n                }, \n                idRoom\n            }\n\n            setMessage('')            \n            socketRef.current.emit(\"send message\", messageObject)\n        }  \n    }\n\n    return (\n        <div className=\"col-md-8 messenger\">\n            <h3 className=\"mt-2\">Message</h3>\n            <ul>\n                {console.log(messages)}\n                { messages !== undefined\n                    ? <>\n                        { messages.map((messageBody, index) => {\n                            return <li key={index}>{messageBody.message} de {messageBody.myPseudo} </li>\n                        })}\n                    </>\n\n                    : ''\n                }\n            </ul>\n            <form onSubmit={sendMessage} className=\"message-form row justify-content-between\">\n                <textarea placeholder=\"Dit un truc...\" value={message} onChange={(e) => setMessage(e.target.value)}></textarea>\n                <div>\n                    <button className=\"mon-bouton rounded-circle\" type=\"submit\"><i className=\"fas fa-paper-plane\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Messenger\n"]},"metadata":{},"sourceType":"module"}