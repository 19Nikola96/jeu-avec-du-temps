{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game1 = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [words, setWords] = useState([]);\n  const [actualWord, setActualWord] = useState();\n  const [actualRound, setActualRound] = useState();\n\n  const getRandomInteger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  useEffect(() => {\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      setActualRound(rulesData.round);\n    }); // Surement à modifier\n\n    socketRef.current.emit(\"ask words\", idRoom);\n    socketRef.current.on(\"words\", words => {\n      let randomNumber = getRandomInteger(0, words.round1.length - 1);\n      words.round1.forEach((word, index) => {\n        if (randomNumber === index) {\n          setActualWord(word);\n        }\n      });\n      setWords(words.round1);\n    });\n  }, []);\n\n  const goodRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n        words.splice(index, 1);\n      }\n    });\n    console.log(socketRef);\n    let addPointObj = {\n      idRoom\n    };\n    socketRef.current.emit(\"add point\", addPointObj); // Points\n  };\n\n  const passRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n\n    do {\n      randomNumber = getRandomInteger(0, words.length - 1);\n    } while (words[randomNumber] === actualWord);\n\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center\",\n    children: [console.log(words), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => passRandomWord(),\n      className: \"btn btn-primary col-md-2\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-light col-md-2\",\n      children: actualWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => goodRandomWord(),\n      className: \"btn btn-primary col-md-2\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Points: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game1, \"T1VzekTeWSGOp2DAZWuxIdUQEhs=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx"],"names":["React","useState","useEffect","Game1","idRoom","socketRef","words","setWords","actualWord","setActualWord","actualRound","setActualRound","getRandomInteger","min","max","Math","floor","random","current","emit","on","rulesData","round","randomNumber","round1","length","forEach","word","index","goodRandomWord","splice","console","log","addPointObj","passRandomWord"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAQA,MAAMC,KAAsB,GAAI,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAEvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAY,EAAZ,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,GAAD,EAAcC,GAAd,KAA8B;AACnD,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AAEZG,IAAAA,SAAS,CAACa,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCf,MAApC;AACAC,IAAAA,SAAS,CAACa,OAAV,CAAkBE,EAAlB,CAAqB,OAArB,EAA+BC,SAAD,IAAyB;AACnDV,MAAAA,cAAc,CAACU,SAAS,CAACC,KAAX,CAAd;AACH,KAFD,EAHY,CAKT;;AAEHjB,IAAAA,SAAS,CAACa,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCf,MAApC;AACAC,IAAAA,SAAS,CAACa,OAAV,CAAkBE,EAAlB,CAAqB,OAArB,EAA+Bd,KAAD,IAAqB;AAC/C,UAAIiB,YAAY,GAAGX,gBAAgB,CAAC,CAAD,EAAIN,KAAK,CAACkB,MAAN,CAAaC,MAAb,GAAsB,CAA1B,CAAnC;AAEAnB,MAAAA,KAAK,CAACkB,MAAN,CAAaE,OAAb,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,YAAIL,YAAY,KAAKK,KAArB,EAA4B;AACxBnB,UAAAA,aAAa,CAACkB,IAAD,CAAb;AACH;AACJ,OAJD;AAKApB,MAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAP,CAAR;AACH,KATD;AAUH,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMK,cAAc,GAAG,MAAM;AACzB,QAAIN,YAAY,GAAGX,gBAAgB,CAAC,CAAD,EAAIN,KAAK,CAACmB,MAAN,GAAe,CAAnB,CAAnC;AAEAnB,IAAAA,KAAK,CAACoB,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,UAAIL,YAAY,KAAKK,KAArB,EAA4B;AACxBnB,QAAAA,aAAa,CAACkB,IAAD,CAAb;AACArB,QAAAA,KAAK,CAACwB,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACH;AACJ,KALD;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAY3B,SAAZ;AAGA,QAAI4B,WAAW,GAAG;AACd7B,MAAAA;AADc,KAAlB;AAIAC,IAAAA,SAAS,CAACa,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCc,WAApC,EAjByB,CAkBzB;AAGH,GArBD;;AAuBA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIX,YAAY,GAAGX,gBAAgB,CAAC,CAAD,EAAIN,KAAK,CAACmB,MAAN,GAAe,CAAnB,CAAnC;;AAEA,OAAG;AACCF,MAAAA,YAAY,GAAGX,gBAAgB,CAAC,CAAD,EAAIN,KAAK,CAACmB,MAAN,GAAe,CAAnB,CAA/B;AACH,KAFD,QAESnB,KAAK,CAACiB,YAAD,CAAL,KAAwBf,UAFjC;;AAIAF,IAAAA,KAAK,CAACoB,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,UAAIL,YAAY,KAAKK,KAArB,EAA4B;AACxBnB,QAAAA,aAAa,CAACkB,IAAD,CAAb;AACH;AACJ,KAJD;AAKH,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,eACKI,OAAO,CAACC,GAAR,CAAY1B,KAAZ,CADL,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAM4B,cAAc,EAArC;AAAyC,MAAA,SAAS,EAAC,0BAAnD;AAAA,6BACA;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA,gBAAoC1B;AAApC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMqB,cAAc,EAArC;AAAyC,MAAA,SAAS,EAAC,0BAAnD;AAAA,6BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhFD;;GAAM1B,K;;KAAAA,K;AAkFN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { RulesObj, WordsObj } from '../Types'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const [words, setWords] = useState<string []>([])\n    const [actualWord, setActualWord] = useState<string>()\n    const [actualRound, setActualRound] = useState<number>()\n\n    const getRandomInteger = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    useEffect(() => {\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setActualRound(rulesData.round)\n        }) // Surement à modifier\n\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: WordsObj) => {\n            let randomNumber = getRandomInteger(0, words.round1.length - 1)\n\n            words.round1.forEach((word, index) => {\n                if (randomNumber === index) {\n                    setActualWord(word)\n                }\n            })\n            setWords(words.round1);\n        });\n    }, [])\n\n    const goodRandomWord = () => {        \n        let randomNumber = getRandomInteger(0, words.length - 1)\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n                words.splice(index, 1)                    \n            }\n        })\n\n        console.log(socketRef);\n        \n\n        let addPointObj = {\n            idRoom,\n        }\n\n        socketRef.current.emit(\"add point\", addPointObj);\n        // Points\n\n\n    }\n\n    const passRandomWord = () => {\n        let randomNumber = getRandomInteger(0, words.length - 1)\n        \n        do {\n            randomNumber = getRandomInteger(0, words.length - 1)\n        } while (words[randomNumber] === actualWord);\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n            }\n        })\n    }\n\n    return (\n        <div className=\"row justify-content-center\">\n            {console.log(words)}\n            <button onClick={() => passRandomWord()} className=\"btn btn-primary col-md-2\">\n            <i className=\"fas fa-times\"></i>\n            </button>\n            <p className=\"text-light col-md-2\">{actualWord}</p>\n            <button onClick={() => goodRandomWord()} className=\"btn btn-primary col-md-2\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <p>Points: </p>\n        </div>\n    )\n}\n\nexport default Game1\n"]},"metadata":{},"sourceType":"module"}