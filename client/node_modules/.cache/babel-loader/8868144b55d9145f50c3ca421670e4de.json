{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport NextRound from './NextRound';\nimport NextTurn from './NextTurn';\nimport './Style/timer.css';\nimport './Style/board.css';\nimport './Style/game.css';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Game1 = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const yourPlayingRef = useRef(false);\n  const thisRound = useRef(0);\n  const [displayEndTurn, setDisplayEndTurn] = useState(false);\n  const [displayNextRound, setDisplayNextRound] = useState(false);\n  const [round, setRound] = useState(0);\n  const [words, setWords] = useState([]);\n  const [actualWord, setActualWord] = useState();\n  const [actualRound, setActualRound] = useState();\n  const [actualPoints, setActualPoints] = useState(0);\n  const [actualTeam, setActualTeam] = useState();\n  const [actualPlayer, setActualPlayer] = useState();\n  const [time, setTime] = useState(1);\n  const [forAnimationTime, setForAnimationTime] = useState(100);\n\n  const getRandomInteger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  useEffect(() => {\n    // socketRef.current.emit(\"ask rules\", idRoom)\n    // socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n    //     setActualRound(rulesData.round)\n    // }) // Surement Ã  modifier\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      if (rulesData.round === 2) {\n        setTime(rulesData.timeDraw);\n        setForAnimationTime(rulesData.timeDraw);\n      } else {\n        setTime(rulesData.time);\n        setForAnimationTime(rulesData.time);\n      }\n\n      setRound(rulesData.round);\n      thisRound.current = rulesData.round; // setTimeout(() => {\n      //     clearInterval(interval)\n      // }, rulesData.time*1500)            \n    });\n    socketRef.current.emit(\"ask words\", idRoom);\n    socketRef.current.on(\"words\", words => {\n      let randomNumber;\n\n      if (thisRound.current === 0) {\n        randomNumber = getRandomInteger(0, words.round1.length - 1);\n      } else if (thisRound.current === 1) {\n        randomNumber = getRandomInteger(0, words.round2.length - 1);\n      } else {\n        randomNumber = getRandomInteger(0, words.round3.length - 1);\n      }\n\n      if (thisRound.current === 0) {\n        words.round1.forEach((word, index) => {\n          if (randomNumber === index) {\n            setActualWord(word);\n          }\n        });\n        setWords(words.round1);\n      } else if (thisRound.current === 1) {\n        words.round2.forEach((word, index) => {\n          if (randomNumber === index) {\n            setActualWord(word);\n          }\n        });\n        setWords(words.round2);\n      } else {\n        words.round3.forEach((word, index) => {\n          if (randomNumber === index) {\n            setActualWord(word);\n          }\n        });\n        setWords(words.round3);\n      }\n    });\n    socketRef.current.on(\"points\", points => {\n      setActualPoints(points);\n    });\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      teams.forEach(team => {\n        if (team.playing === true) {\n          setActualTeam(team.name);\n          team.players.forEach(player => {\n            if (player.playing === true) {\n              if (player.id === socketRef.current.id) {\n                yourPlayingRef.current = true;\n              }\n\n              setActualPlayer(player.pseudo);\n            }\n          });\n        }\n      });\n    });\n    socketRef.current.on(\"display next round\", displayBool => {\n      setDisplayNextRound(displayBool);\n    });\n    setInterval(() => {\n      setTime(time => time - 1);\n    }, 1000);\n  }, []);\n\n  const goodRandomWord = () => {\n    let wordCircle = document.querySelector('.word');\n    let pointsPosition = document.querySelector('.position-points');\n    let drop = document.querySelector('.liquid2');\n    let points = document.querySelectorAll('[class*=\"part-circle\"]');\n    console.log(points);\n\n    for (let index = 0; index < points.length; index++) {\n      points[index].classList.add('bubble-anim');\n    }\n\n    wordCircle === null || wordCircle === void 0 ? void 0 : wordCircle.classList.add('goodWord-anim');\n\n    if (pointsPosition !== null) {\n      pointsPosition.classList.remove('justify-content-between');\n      pointsPosition.style.justifyContent = 'flex-end';\n    }\n\n    setTimeout(() => {\n      pointsPosition === null || pointsPosition === void 0 ? void 0 : pointsPosition.classList.add('justify-content-between');\n      wordCircle === null || wordCircle === void 0 ? void 0 : wordCircle.classList.remove('goodWord-anim');\n      drop === null || drop === void 0 ? void 0 : drop.classList.add('drop-anim');\n\n      if (wordCircle !== null) {\n        wordCircle.style.transform = 'scale(1)';\n      }\n    }, 1000);\n    setTimeout(() => {\n      for (let index = 0; index < points.length; index++) {\n        points[index].classList.remove('bubble-anim');\n      }\n    }, 2500);\n    words.forEach((word, index) => {\n      if (actualWord === word) {\n        words.splice(index, 1);\n      }\n    });\n    let randomNumber = getRandomInteger(0, words.length - 1);\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n      }\n    });\n    let addPointObj = {\n      idRoom,\n      idPlayer: socketRef.current.id\n    };\n    socketRef.current.emit(\"add point\", addPointObj);\n\n    if (words.length === 0) {\n      nextRound();\n    }\n\n    if (thisRound.current === 2) {\n      let canvas = document.getElementById('board');\n      let ctx = canvas.getContext('2d');\n      let inputColor = document.querySelector('.color-brush');\n\n      if (inputColor !== null) {\n        inputColor.value = '#000000';\n      }\n\n      ctx.clearRect(0, 0, 0, 0);\n      canvas.height = 400;\n      socketRef.current.emit(\"erase board\", idRoom);\n      let allPenWidth = document.querySelectorAll('.pen-width li');\n      allPenWidth.forEach((penWidth, index) => {\n        if (index === 0) {\n          penWidth.classList.add('picked');\n        } else {\n          penWidth.classList.remove('picked');\n        }\n      });\n      ctx.lineWidth = 4;\n    }\n  };\n\n  const nextRound = () => {\n    setDisplayNextRound(true);\n\n    if (yourPlayingRef.current === true) {\n      let updatedWordsObj = {\n        idRoom,\n        words\n      };\n      socketRef.current.emit(\"update words\", updatedWordsObj);\n    }\n\n    socketRef.current.emit(\"next round\", idRoom);\n  };\n\n  const passRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n\n    do {\n      randomNumber = getRandomInteger(0, words.length - 1);\n    } while (words[randomNumber] === actualWord);\n\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n      }\n    });\n\n    if (thisRound.current === 2) {\n      let canvas = document.getElementById('board');\n      let ctx = canvas.getContext('2d');\n      let inputColor = document.querySelector('.color-brush');\n\n      if (inputColor !== null) {\n        inputColor.value = '#000000';\n      }\n\n      ctx.clearRect(0, 0, 0, 0);\n      canvas.height = 400;\n      socketRef.current.emit(\"erase board\", idRoom);\n      let allPenWidth = document.querySelectorAll('.pen-width li');\n      allPenWidth.forEach((penWidth, index) => {\n        if (index === 0) {\n          penWidth.classList.add('picked');\n        } else {\n          penWidth.classList.remove('picked');\n        }\n      });\n      console.log(ctx.lineWidth);\n      ctx.lineWidth = 4;\n      console.log(ctx.lineWidth);\n    }\n  };\n\n  const endTurn = () => {\n    if (yourPlayingRef.current === true) {\n      let updatedWordsObj = {\n        idRoom,\n        words\n      };\n      socketRef.current.emit(\"update words\", updatedWordsObj);\n    }\n\n    setDisplayEndTurn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayNextRound ? /*#__PURE__*/_jsxDEV(NextRound, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayEndTurn ? /*#__PURE__*/_jsxDEV(NextTurn, {\n        socketRef: socketRef,\n        idRoom: idRoom,\n        playerName: actualPlayer,\n        team: actualTeam,\n        points: actualPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transition-game d-flex flex-column\",\n        style: {\n          height: '75vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-chrono\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              height: '20vh'\n            },\n            children: [\"Phase \", round + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            id: \"chrono-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chrono\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"skill\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"outer\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inner\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"timer-number\",\n                      children: [time < 1 ? endTurn() : '', time]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"160px\",\n                height: \"160px\",\n                children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n                  children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                    id: \"GradientColor\",\n                    children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                      offset: \"0%\",\n                      stopColor: \"#e91e63\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                      offset: \"100%\",\n                      stopColor: \"#673ab7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"80\",\n                  cy: \"80\",\n                  r: \"70\",\n                  strokeLinecap: \"round\",\n                  style: {\n                    animation: `timer ${forAnimationTime}s linear infinite`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"points\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"points-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle11\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"part-circle12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"empty-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: actualPoints >= 1 ? `${actualPoints} Points` : `${actualPoints} Point`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }, this), thisRound.current === 0 || thisRound.current === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: yourPlayingRef.current === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-column justify-content-between position-points\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: actualWord\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row col-4 align-items-center mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => passRandomWord(),\n                className: \"passWord\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-times\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => goodRandomWord(),\n                className: \"goodWord\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [actualPlayer, \" de la team \", actualTeam, \" a rapport\\xE9 \", actualPoints, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 43\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: yourPlayingRef.current === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Board, {\n              socketRef: socketRef,\n              idRoom: idRoom,\n              imPlaying: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: actualWord\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goodRandomWord(),\n              className: \"goodWord\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => passRandomWord(),\n              className: \"passWord\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Points: \", actualPoints]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-light\",\n            children: [/*#__PURE__*/_jsxDEV(Board, {\n              socketRef: socketRef,\n              idRoom: idRoom,\n              imPlaying: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [actualPlayer, \" de la team \", actualTeam, \" a rapport\\xE9 \", actualPoints, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 43\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n\n_s(Game1, \"F55BqVe1Ny2KFfoL2FMukbkdg/Y=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx"],"names":["React","useState","useEffect","useRef","NextRound","NextTurn","Board","Game1","idRoom","socketRef","yourPlayingRef","thisRound","displayEndTurn","setDisplayEndTurn","displayNextRound","setDisplayNextRound","round","setRound","words","setWords","actualWord","setActualWord","actualRound","setActualRound","actualPoints","setActualPoints","actualTeam","setActualTeam","actualPlayer","setActualPlayer","time","setTime","forAnimationTime","setForAnimationTime","getRandomInteger","min","max","Math","floor","random","current","emit","on","rulesData","timeDraw","randomNumber","round1","length","round2","round3","forEach","word","index","points","teams","team","playing","name","players","player","id","pseudo","displayBool","setInterval","goodRandomWord","wordCircle","document","querySelector","pointsPosition","drop","querySelectorAll","console","log","classList","add","remove","style","justifyContent","setTimeout","transform","splice","addPointObj","idPlayer","nextRound","canvas","getElementById","ctx","getContext","inputColor","value","clearRect","height","allPenWidth","penWidth","lineWidth","updatedWordsObj","passRandomWord","endTurn","animation"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport { ListFormat } from 'typescript'\nimport { AdminObj, RulesObj, TeamObj, WordsObj } from '../Types'\nimport NextRound from './NextRound'\nimport NextTurn from './NextTurn'\n\nimport './Style/timer.css';\nimport './Style/board.css';\nimport './Style/game.css';\nimport Board from './Board'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n    const thisRound: React.MutableRefObject<number> = useRef(0)\n\n    const [displayEndTurn, setDisplayEndTurn] = useState<boolean>(false);\n    const [displayNextRound, setDisplayNextRound] = useState<boolean>(false);\n\n    const [round, setRound] = useState<number>(0);\n\n    const [words, setWords] = useState<string []>([]);\n    const [actualWord, setActualWord] = useState<string>();\n    const [actualRound, setActualRound] = useState<number>();\n    const [actualPoints, setActualPoints] = useState<number>(0);\n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n\n    const [time, setTime] = useState<number>(1)\n    const [forAnimationTime, setForAnimationTime] = useState<number>(100)\n\n    const getRandomInteger = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    useEffect(() => {\n        \n        // socketRef.current.emit(\"ask rules\", idRoom)\n        // socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n        //     setActualRound(rulesData.round)\n        // }) // Surement Ã  modifier\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {   \n            \n            if (rulesData.round === 2) {\n                setTime(rulesData.timeDraw)\n                setForAnimationTime(rulesData.timeDraw)\n            } else {\n                setTime(rulesData.time)\n                setForAnimationTime(rulesData.time)\n            }\n\n            setRound(rulesData.round)\n\n            thisRound.current = rulesData.round; \n\n            // setTimeout(() => {\n            //     clearInterval(interval)\n            // }, rulesData.time*1500)            \n        })\n\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: WordsObj) => {\n\n            let randomNumber: number;\n\n            if (thisRound.current === 0) {\n                randomNumber = getRandomInteger(0, words.round1.length - 1)\n            } else if (thisRound.current === 1) {\n                randomNumber = getRandomInteger(0, words.round2.length - 1)\n            } else {\n                randomNumber = getRandomInteger(0, words.round3.length - 1)\n            }\n                        \n            if (thisRound.current === 0) {\n                words.round1.forEach((word, index) => {\n                    if (randomNumber === index) {\n                        setActualWord(word)\n                    }\n                })\n                setWords(words.round1);\n            } else if (thisRound.current === 1) {\n                words.round2.forEach((word, index) => {\n                    if (randomNumber === index) {\n                        setActualWord(word)\n                    }\n                })\n                setWords(words.round2);\n            } else {\n                words.round3.forEach((word, index) => {\n                    if (randomNumber === index) {\n                        setActualWord(word)\n                    }\n                })\n                setWords(words.round3);\n            }\n        });\n\n        socketRef.current.on(\"points\", (points: number) => {\n            setActualPoints(points);\n        });\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    setActualTeam(team.name)\n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                    \n                                yourPlayingRef.current = true\n                            }  \n                            setActualPlayer(player.pseudo)\n                        }\n                    })\n                }\n            })\n        });\n\n        socketRef.current.on(\"display next round\", (displayBool: boolean) => {\n            setDisplayNextRound(displayBool);\n        })    \n\n        setInterval(() => {\n            setTime(time => time - 1)   \n        }, 1000)\n        \n    }, [])\n\n    const goodRandomWord = () => {  \n        \n        let wordCircle = document.querySelector<HTMLElement>('.word')\n        let pointsPosition = document.querySelector<HTMLElement>('.position-points')\n        let drop = document.querySelector<HTMLElement>('.liquid2')\n\n        let points = document.querySelectorAll('[class*=\"part-circle\"]')\n        console.log(points);\n\n        for (let index = 0; index < points.length; index++) {\n            points[index].classList.add('bubble-anim')\n        }\n        \n\n        wordCircle?.classList.add('goodWord-anim');\n        if (pointsPosition !== null) {\n            pointsPosition.classList.remove('justify-content-between')\n            pointsPosition.style.justifyContent = 'flex-end'\n        }        \n\n        setTimeout(() => {\n            pointsPosition?.classList.add('justify-content-between')\n            wordCircle?.classList.remove('goodWord-anim');\n            drop?.classList.add('drop-anim')\n            if (wordCircle !== null) {       \n                wordCircle.style.transform = 'scale(1)'\n            }\n        }, 1000)\n\n        setTimeout(() => {\n            for (let index = 0; index < points.length; index++) {\n                points[index].classList.remove('bubble-anim')\n            }\n        }, 2500)\n        \n        words.forEach((word, index) => {\n            if (actualWord === word) {\n                words.splice(index, 1)                  \n            }\n        })\n        \n        let randomNumber = getRandomInteger(0, words.length - 1)\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)                \n            }\n        })        \n\n        let addPointObj = {\n            idRoom,\n            idPlayer: socketRef.current.id\n        }        \n\n        socketRef.current.emit(\"add point\", addPointObj);\n        \n        if (words.length === 0) {\n            nextRound();\n        }\n\n        if (thisRound.current === 2) {\n            let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n            let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n            let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n\n            if (inputColor !== null) {\n                inputColor.value = '#000000'\n            }\n\n            ctx.clearRect(0, 0, 0, 0)\n\n            canvas.height = 400\n\n            socketRef.current.emit(\"erase board\", idRoom);\n\n            let allPenWidth = document.querySelectorAll('.pen-width li');\n\n            allPenWidth.forEach((penWidth, index) => {\n                if (index === 0) {                \n                    penWidth.classList.add('picked')   \n                } else {\n                    penWidth.classList.remove('picked')   \n                }\n            })\n\n            ctx.lineWidth = 4;\n            \n        }\n        \n    }\n\n    const nextRound = () => {\n        setDisplayNextRound(true)\n\n        if (yourPlayingRef.current === true) {\n            let updatedWordsObj= {\n                idRoom,\n                words\n            }\n            \n            socketRef.current.emit(\"update words\", updatedWordsObj);\n        }\n\n        socketRef.current.emit(\"next round\", idRoom);\n    }\n\n    const passRandomWord = () => {\n        let randomNumber = getRandomInteger(0, words.length - 1)\n        \n        do {\n            randomNumber = getRandomInteger(0, words.length - 1)\n        } while (words[randomNumber] === actualWord);\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n            }\n        })\n\n        if (thisRound.current === 2) {            \n            let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n            let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n            let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n\n            if (inputColor !== null) {\n                inputColor.value = '#000000'\n            }\n        \n            ctx.clearRect(0, 0, 0, 0)\n\n            canvas.height = 400\n\n            socketRef.current.emit(\"erase board\", idRoom);\n\n            let allPenWidth = document.querySelectorAll('.pen-width li');\n\n            allPenWidth.forEach((penWidth, index) => {\n                if (index === 0) {                \n                    penWidth.classList.add('picked')   \n                } else {\n                    penWidth.classList.remove('picked')   \n                }\n            })\n\n            console.log(ctx.lineWidth);            \n\n            ctx.lineWidth = 4;\n\n            console.log(ctx.lineWidth);\n        }\n    }\n\n    const endTurn = () => {\n        if (yourPlayingRef.current === true) {\n            let updatedWordsObj= {\n                idRoom,\n                words\n            }\n            \n            socketRef.current.emit(\"update words\", updatedWordsObj);\n        }\n        \n        setDisplayEndTurn(true)\n    }     \n\n    return (\n        <> \n            { displayNextRound\n                ? <NextRound socketRef={socketRef} idRoom={idRoom} />\n\n                : <div>\n                    { displayEndTurn\n                        ? <NextTurn socketRef={socketRef} idRoom={idRoom} playerName={actualPlayer} team={actualTeam} points={actualPoints} />\n\n                        : <div className=\"transition-game d-flex flex-column\" style={{height: '75vh'}}>  \n                            <div className=\"position-chrono\">\n                                <h5 style={{ height: '20vh'}}>Phase { round + 1 }</h5>\n                                <section id=\"chrono-box\">\n                                    <div className=\"chrono\">\n                                        <div className=\"skill\">\n                                            <div className=\"outer\">\n                                                <div className=\"inner\">\n                                                <div className=\"timer-number\">\n                                                    { time < 1\n                                                        ? endTurn()\n\n                                                        : ''\n                                                    }\n                                                    {time}                                                       \n                                                </div>\n                                                </div>\n                                            </div>          \n                                        </div> \n\n                                        <svg width=\"160px\" height=\"160px\">\n                                        <defs>\n                                            <linearGradient id=\"GradientColor\">\n                                                <stop offset=\"0%\" stopColor=\"#e91e63\" />\n                                                <stop offset=\"100%\" stopColor=\"#673ab7\" />\n                                            </linearGradient>\n                                        </defs>\n                                        <circle cx=\"80\" cy=\"80\" r=\"70\" strokeLinecap=\"round\" style={{ animation: `timer ${forAnimationTime}s linear infinite`}} />\n                                        </svg>\n                                    </div>                           \n                                </section>\n                                <div className=\"points\">                                      \n                                    {/* <div className=\"points-bucket\"></div>\n                                    <div className=\"liquid1\"></div>\n                                    <div className=\"liquid2\"></div> */}\n                                    <div className=\"points-box\">\n                                        <div className=\"part-circle1\"></div>\n                                        <div className=\"part-circle2\"></div>\n                                        <div className=\"part-circle3\"></div>\n                                        <div className=\"part-circle4\"></div>\n                                        <div className=\"part-circle5\"></div>\n                                        <div className=\"part-circle6\"></div>\n                                        <div className=\"part-circle7\"></div>\n                                        <div className=\"part-circle8\"></div>\n                                        <div className=\"part-circle9\"></div>\n                                        <div className=\"part-circle10\"></div>\n                                        <div className=\"part-circle11\"></div>\n                                        <div className=\"part-circle12\"></div>             \n                                        <span className=\"empty-circle\"></span>                          \n                                        <span>{actualPoints >= 1 ? `${actualPoints} Points` : `${actualPoints} Point`}</span>\n                                    </div>\n                                </div>\n                            </div>     \n                           \n                            { thisRound.current === 0 || thisRound.current === 1\n                                ? <>\n                                    { yourPlayingRef.current === true\n                                        ? <div className=\"d-flex flex-column justify-content-between position-points\">\n                                            <div className=\"word\">\n                                                <div>{actualWord}</div>\n                                            </div>                                            \n                                            <div className=\"row col-4 align-items-center mx-auto\">                                                \n                                                <button onClick={() => passRandomWord()} className=\"passWord\">\n                                                    <i className=\"fas fa-times\"></i>\n                                                </button>\n                                                <button onClick={() => goodRandomWord()} className=\"goodWord\">\n                                                    <i className=\"fas fa-check\"></i>\n                                                </button>\n                                            </div>                                            \n                                        </div> \n                        \n                                        : <div className=\"\">\n                                            <p>{actualPlayer} de la team {actualTeam} a rapportÃ© {actualPoints} points</p>\n                                        </div>  \n                                    }   \n                                  </>\n\n                                : <>\n                                    { yourPlayingRef.current === true\n                                        ? <div>                                             \n                                            <Board socketRef={socketRef} idRoom={idRoom} imPlaying={true} />\n                                            <div className=\"word\">\n                                                <div>{actualWord}</div>\n                                            </div>                                         \n                                            <button onClick={() => goodRandomWord()} className=\"goodWord\">\n                                                <i className=\"fas fa-check\"></i>\n                                            </button>\n                                            <button onClick={() => passRandomWord()} className=\"passWord\">\n                                                <i className=\"fas fa-times\"></i>\n                                            </button>\n                                            <p>Points: {actualPoints}</p>\n                                        </div> \n                        \n                                        : <div className=\"text-light\">\n                                            <Board socketRef={socketRef} idRoom={idRoom} imPlaying={false} />\n                                            <p>{actualPlayer} de la team {actualTeam} a rapportÃ© {actualPoints} points</p>\n                                        </div>  \n                                    }\n                                  </>\n                            }                  \n                \n                                                                         \n                        </div>\n                    }\n                 </div>                         \n            }\n            \n        </>\n        \n    )\n}\n\nexport default Game1\n"]},"metadata":{},"sourceType":"module"}