{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/NextRound.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport StartGame from './StartGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NextRound = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [round, setRound] = useState(0);\n  const [displayStartGame, setDisplayStartGame] = useState(false);\n  useEffect(() => {\n    socketRef.current.on(\"start game prvw\", start => {\n      setDisplayStartGame(start);\n    });\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      setRound(rulesData.round);\n    });\n  }, []);\n\n  const startNextRound = () => {\n    socketRef.current.emit(\"start game preview\", idRoom);\n    socketRef.current.emit(\"set playing team and player\", idRoom);\n    setDisplayStartGame(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayStartGame ? /*#__PURE__*/_jsxDEV(StartGame, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phase \", round, \" fini !\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startNextRound(),\n        className: \"btn btn-primary\",\n        children: \"Phase suivante !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NextRound, \"+P0NIbpTMTkvS3aCHJW+Ui41wOk=\");\n\n_c = NextRound;\nexport default NextRound;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextRound\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/NextRound.tsx"],"names":["React","useEffect","useState","StartGame","NextRound","idRoom","socketRef","round","setRound","displayStartGame","setDisplayStartGame","current","on","start","emit","rulesData","startNextRound"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAOA,MAAMC,SAA0B,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAE1D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,CAAT,CAAlC;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,KAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,SAAS,CAACK,OAAV,CAAkBC,EAAlB,CAAqB,iBAArB,EAAyCC,KAAD,IAAoB;AACxDH,MAAAA,mBAAmB,CAACG,KAAD,CAAnB;AACH,KAFD;AAIAP,IAAAA,SAAS,CAACK,OAAV,CAAkBG,IAAlB,CAAuB,WAAvB,EAAoCT,MAApC;AACAC,IAAAA,SAAS,CAACK,OAAV,CAAkBC,EAAlB,CAAqB,OAArB,EAA+BG,SAAD,IAAyB;AACnDP,MAAAA,QAAQ,CAACO,SAAS,CAACR,KAAX,CAAR;AACH,KAFD;AAGH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMS,cAAc,GAAG,MAAM;AACzBV,IAAAA,SAAS,CAACK,OAAV,CAAkBG,IAAlB,CAAuB,oBAAvB,EAA6CT,MAA7C;AAEAC,IAAAA,SAAS,CAACK,OAAV,CAAkBG,IAAlB,CAAuB,6BAAvB,EAAsDT,MAAtD;AAEAK,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAND;;AAQA,sBACI;AAAA,cACMD,gBAAgB,gBACZ,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEH,SAAtB;AAAiC,MAAA,MAAM,EAAED;AAAzC;AAAA;AAAA;AAAA;AAAA,YADY,gBAGZ;AAAA,8BACE;AAAA,6BAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMS,cAAc,EAArC;AAAyC,QAAA,SAAS,EAAC,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxCD;;GAAMZ,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { RulesObj } from '../Types'\nimport Game2 from './Game2'\nimport StartGame from './StartGame'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst NextRound: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [round, setRound] = useState<number>(0)\n    const [displayStartGame, setDisplayStartGame] = useState(false)\n\n    useEffect(() => {\n        socketRef.current.on(\"start game prvw\", (start: boolean) => {\n            setDisplayStartGame(start)\n        })\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setRound(rulesData.round)\n        })\n    }, [])\n\n    const startNextRound = () => {\n        socketRef.current.emit(\"start game preview\", idRoom)        \n\n        socketRef.current.emit(\"set playing team and player\", idRoom)\n\n        setDisplayStartGame(true)\n    }\n\n    return (\n        <div>\n            { displayStartGame\n                ? <StartGame socketRef={socketRef} idRoom={idRoom} />\n\n                : <>\n                    <p>Phase {round} fini !</p>\n                    <button onClick={() => startNextRound()} className=\"btn btn-primary\">\n                        Phase suivante !\n                    </button>\n                  </>\n\n            }\n            \n        </div>\n    )\n}\n\nexport default NextRound\n"]},"metadata":{},"sourceType":"module"}