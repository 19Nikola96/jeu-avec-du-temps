{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game1 = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [words, setWords] = useState([]);\n  useEffect(() => {\n    socketRef.current.emit(\"ask words\", idRoom);\n    socketRef.current.on(\"words\", words => {\n      setWords(words);\n    });\n    displayRandomWord();\n  }, []);\n\n  const displayRandomWord = () => {\n    console.log(words);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game1, \"QrHlQthZFfwcsWWYyDJIvsds8f8=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx"],"names":["React","useState","useEffect","Game1","idRoom","socketRef","words","setWords","current","emit","on","displayRandomWord","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAOA,MAAMC,KAAsB,GAAI,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAEvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAY,EAAZ,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,SAAS,CAACG,OAAV,CAAkBC,IAAlB,CAAuB,WAAvB,EAAoCL,MAApC;AACAC,IAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAlB,CAAqB,OAArB,EAA+BJ,KAAD,IAAsB;AAChDC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAFD;AAIAK,IAAAA,iBAAiB;AAEpB,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMA,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMH,K;;KAAAA,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const [words, setWords] = useState<string []>([])\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: string []) => {\n            setWords(words);\n        });\n\n        displayRandomWord()\n        \n    }, [])\n\n    const displayRandomWord = () => {\n        console.log(words);\n    }\n\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default Game1\n"]},"metadata":{},"sourceType":"module"}