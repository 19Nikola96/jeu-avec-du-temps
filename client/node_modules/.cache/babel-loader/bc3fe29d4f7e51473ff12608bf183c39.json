{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartGame = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [startGamePreview, setStartGamePreview] = useState(false);\n  const yourPlayingRef = useRef(false); // DISPLAY\n\n  const [actualTeam, setActualTeam] = useState();\n  const [actualPlayer, setActualPlayer] = useState();\n  const [actualPlayerId, setActualPlayerId] = useState();\n  const [teams, setTeams] = useState();\n  const [teamPlayers, setTeamPlayers] = useState([]);\n  const [users, setUsers] = useState();\n  const [round, setRound] = useState(0);\n  useEffect(() => {\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      yourPlayingRef.current = false;\n      teams.forEach(team => {\n        if (team.playing === true) {\n          setActualTeam(team.name);\n          team.players.forEach(player => {\n            if (player.playing === true) {\n              if (player.id === socketRef.current.id) {\n                yourPlayingRef.current = true;\n              }\n\n              setActualPlayer(player.pseudo);\n              setActualPlayerId(player.id);\n            }\n          });\n        }\n      });\n    });\n    socketRef.current.on(\"start game now\", start => {\n      setStartGamePreview(start);\n    });\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      setRound(rulesData.round);\n    });\n  }, []);\n\n  const startGame = () => {\n    socketRef.current.emit(\"start game\", idRoom);\n    setStartGamePreview(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: startGamePreview ? /*#__PURE__*/_jsxDEV(Game1, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: yourPlayingRef.current === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"\",\n          children: \"C'est \\xE0 toi de jouer !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center align-items-center\",\n          style: {\n            height: '70vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startGame(),\n            className: \"start-bouton\",\n            children: \"Let's Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center align-items-center\",\n        style: {\n          height: '75vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [actualPlayer, \" de la team \", actualTeam, \" s'appr\\xEAte \\xE0 jouer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(StartGame, \"PhWee3zeOXMDoYBHwn20GaHaTHk=\");\n\n_c = StartGame;\nexport default StartGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartGame\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx"],"names":["React","useEffect","useRef","useState","Game1","StartGame","idRoom","socketRef","startGamePreview","setStartGamePreview","yourPlayingRef","actualTeam","setActualTeam","actualPlayer","setActualPlayer","actualPlayerId","setActualPlayerId","teams","setTeams","teamPlayers","setTeamPlayers","users","setUsers","round","setRound","current","emit","on","forEach","team","playing","name","players","player","id","pseudo","start","rulesData","startGame","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { AdminObj, RulesObj, TeamObj } from '../Types';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n}\n\nconst StartGame: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [startGamePreview, setStartGamePreview] = useState<boolean>(false)\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n    // DISPLAY\n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n    const [actualPlayerId, setActualPlayerId] = useState<string | number | undefined>()\n\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    const [round, setRound] = useState<number>(0)\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            yourPlayingRef.current = false\n            \n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    setActualTeam(team.name)\n                    team.players.forEach((player) => {\n                        if (player.playing === true) {\n                            if (player.id === socketRef.current.id) {                                                    \n                                yourPlayingRef.current = true\n                            }  \n                            setActualPlayer(player.pseudo)\n                            setActualPlayerId(player.id)\n                        }\n                    })\n                }\n            })\n        });\n\n        socketRef.current.on(\"start game now\", (start: boolean) => {\n            setStartGamePreview(start)\n        })\n\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setRound(rulesData.round)\n        })\n    }, [])\n\n    const startGame = () => {\n        socketRef.current.emit(\"start game\", idRoom)\n        setStartGamePreview(true)\n    }\n\n    return (\n        <>                    \n            { startGamePreview\n                ? <Game1 socketRef={socketRef} idRoom={idRoom} />\n\n                : <>\n                    { yourPlayingRef.current === true\n                        ? <>\n                            <h4 className=\"\">C'est à toi de jouer !</h4>\n                            <div className=\"row justify-content-center align-items-center\" style={{height: '70vh'}}>                            \n                                <button onClick={() => startGame()} className=\"start-bouton\">Let's Go</button>\n                            </div> \n                        </>\n                        \n                       \n\n                        : <div className=\"row justify-content-center align-items-center\" style={{height: '75vh'}}>\n                            <p >{actualPlayer} de la team {actualTeam} s'apprête à jouer</p>\n                          </div>                        \n                    }     \n                </>      \n            }            \n        </>\n    )\n}\n\nexport default StartGame\n"]},"metadata":{},"sourceType":"module"}