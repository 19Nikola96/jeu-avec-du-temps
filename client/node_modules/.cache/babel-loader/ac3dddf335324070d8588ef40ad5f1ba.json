{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/CreateTeams.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Style/createTeams.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTeams = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [displayAddPlayer, setDisplayAddPlayer] = useState(false);\n  const [displayAddPlayerByTeamNumber, setDisplayAddPlayerByTeamNumber] = useState(0); // DISPLAY //\n\n  const [myId, setMyId] = useState();\n  const [teamName, setTeamName] = useState('');\n  const [teams, setTeams] = useState();\n  const [teamPlayers, setTeamPlayers] = useState([]); // TEAMS //\n\n  const [users, setUsers] = useState(); // USERS //\n\n  useEffect(() => {\n    setMyId(socketRef.current.id);\n    socketRef.current.emit(\"ask users\", idRoom);\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.emit(\"ask messages\", idRoom);\n    socketRef.current.on(\"users\", usersData => {\n      setUsers(usersData);\n    });\n    socketRef.current.on(\"teams\", teamsData => {\n      setTeams(teamsData);\n    });\n  }, [displayAddPlayer]);\n\n  const handleCreateTeam = e => {\n    e.preventDefault();\n\n    if (teamName.length !== 0) {\n      let teamId = uuidv4();\n      let teamObj = {};\n\n      if ((teams === null || teams === void 0 ? void 0 : teams.length) === 0) {\n        teamObj = {\n          name: teamName,\n          points: 0,\n          players: [],\n          idTeam: teamId,\n          playing: true,\n          idRoom\n        };\n      } else {\n        teamObj = {\n          name: teamName,\n          points: 0,\n          players: [],\n          idTeam: teamId,\n          playing: false,\n          idRoom\n        };\n      }\n\n      setTeamName('');\n      socketRef.current.emit(\"create team\", teamObj);\n    }\n  };\n\n  const displayAddPlayers = index => {\n    setDisplayAddPlayer(!displayAddPlayer);\n    setDisplayAddPlayerByTeamNumber(index);\n  };\n\n  const handleChangeSelect = e => {\n    let idAlreadyExist;\n    teamPlayers.map(player => {\n      if (player.id === e.target.value) {\n        idAlreadyExist = true;\n      }\n    });\n\n    if (idAlreadyExist !== true && users !== undefined) {\n      users.map(user => {\n        if (user !== null && user !== undefined && user.id === e.target.value) {\n          setTeamPlayers([...teamPlayers, {\n            pseudo: user.pseudo,\n            id: user.id\n          }]);\n        }\n      });\n    }\n  };\n\n  const handleAddPlayerToTeam = (e, teamId) => {\n    e.preventDefault();\n    const teamPlayerObj = {\n      teamPlayers,\n      teamId,\n      playing: false,\n      idRoom\n    };\n    setTeamPlayers([]);\n    setDisplayAddPlayer(!displayAddPlayer);\n    socketRef.current.emit(\"place player in team\", teamPlayerObj);\n  };\n\n  const handleRemovePlayer = (playerId, teamId) => {\n    const removePlayerObj = {\n      playerId,\n      teamId,\n      playing: false,\n      idRoom\n    };\n    socketRef.current.emit(\"remove player from team\", removePlayerObj);\n  };\n\n  const handleRemoveTeam = teamId => {\n    const removeTeamObj = {\n      teamId,\n      idRoom\n    };\n    socketRef.current.emit(\"remove team\", removeTeamObj);\n  }; // const handleRemovePlayerFromPreviewTeam = (playerId: string | number | undefined,) => {\n  //     setTeamPlayers(prevTeamPlayers => (\n  //         prevTeamPlayers.filter((player) => player.id !== playerId)\n  //     ))        \n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team col-md-7 slide\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-2\",\n        children: \"\\xC9quipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateTeam,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: teamName,\n          onChange: e => setTeamName(e.target.value),\n          placeholder: \"Nom de l'\\xE9quipe\",\n          className: \"mx-2 mon-input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mx-2 mon-bouton\",\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"row justify-content-center mt-4 px-3\",\n      children: teams !== undefined ? teams.map((team, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-1 my-2 col-md-6 slide\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-border\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: () => handleRemoveTeam(team.idTeam),\n              className: \"mon-bouton rounded-circle fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: team.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row p-1 justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"col-md-8\",\n                children: team.players.map((player, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"grow\",\n                    children: [player.pseudo, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      onClick: () => handleRemovePlayer(player.id, team.idTeam),\n                      className: \"fas fa-times-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 109\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 60\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"col-md-4 my-2 room-bouton rounded\",\n                onClick: () => displayAddPlayers(index),\n                type: \"button\",\n                children: [\"Ajouter joueur \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-caret-down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row justify-content-center\",\n              children: displayAddPlayer && displayAddPlayerByTeamNumber === index ? /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleAddPlayerToTeam(e, team.idTeam),\n                className: \"col-md-10 p-1 team-form dropdown-unfold\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  multiple: true,\n                  onChange: handleChangeSelect,\n                  children: users === null || users === void 0 ? void 0 : users.map((user, index) => {\n                    if (user.available === true) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: user.id,\n                        children: user.pseudo\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 72\n                      }, this);\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: teamPlayers.map((player, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"slide preview-player\",\n                      id: `${player.id}`,\n                      children: [player.pseudo, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 65\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 68\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"orange-button\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 51\n              }, this) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 36\n        }, this);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateTeams, \"61/Ctn/q/v32QSsrsBVSZqCvm9g=\");\n\n_c = CreateTeams;\nexport default CreateTeams;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTeams\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/CreateTeams.tsx"],"names":["React","useEffect","useState","v4","uuidv4","CreateTeams","idRoom","socketRef","displayAddPlayer","setDisplayAddPlayer","displayAddPlayerByTeamNumber","setDisplayAddPlayerByTeamNumber","myId","setMyId","teamName","setTeamName","teams","setTeams","teamPlayers","setTeamPlayers","users","setUsers","current","id","emit","on","usersData","teamsData","handleCreateTeam","e","preventDefault","length","teamId","teamObj","name","points","players","idTeam","playing","displayAddPlayers","index","handleChangeSelect","idAlreadyExist","map","player","target","value","undefined","user","pseudo","handleAddPlayerToTeam","teamPlayerObj","handleRemovePlayer","playerId","removePlayerObj","handleRemoveTeam","removeTeamObj","team","available"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { AdminObj, TeamObj } from '../Types';\nimport { v4 as uuidv4 } from 'uuid';\nimport './Style/createTeams.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n}\n\nconst CreateTeams: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [displayAddPlayer, setDisplayAddPlayer] = useState<boolean>(false)\n    const [displayAddPlayerByTeamNumber, setDisplayAddPlayerByTeamNumber] = useState<number>(0)\n    // DISPLAY //\n    const [myId, setMyId] = useState<string | number>()\n\n    const [teamName, setTeamName] = useState<string>('')\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n    // TEAMS //\n\n    const [users, setUsers] = useState<AdminObj[]>()\n    // USERS //\n\n    useEffect(() => {\n        setMyId(socketRef.current.id)\n\n        socketRef.current.emit(\"ask users\", idRoom)\n        socketRef.current.emit(\"ask teams\", idRoom)\n        socketRef.current.emit(\"ask messages\", idRoom)\n        \n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {                      \n            setUsers(usersData);\n        })\n\n        socketRef.current.on(\"teams\", (teamsData: TeamObj[]) => {                                                                 \n            setTeams(teamsData)\n        })\n\n    }, [displayAddPlayer])\n\n    const handleCreateTeam = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        if (teamName.length !== 0) {\n            let teamId = uuidv4()\n\n            let teamObj = {}\n\n            if (teams?.length === 0) {\n                teamObj = {\n                    name: teamName,\n                    points: 0,\n                    players: [],\n                    idTeam: teamId,\n                    playing: true,\n                    idRoom\n                }\n            } else {\n                teamObj = {\n                    name: teamName,\n                    points: 0,\n                    players: [],\n                    idTeam: teamId,\n                    playing: false,\n                    idRoom\n                }\n            }\n            setTeamName('') \n            socketRef.current.emit(\"create team\", teamObj)\n        }\n    }\n\n    const displayAddPlayers = (index: number) => {\n        setDisplayAddPlayer(!displayAddPlayer)\n\n        setDisplayAddPlayerByTeamNumber(index)\n    }\n\n    const handleChangeSelect = (e: any) => {\n        let idAlreadyExist\n        teamPlayers.map((player) => {\n            if (player.id === e.target.value) {                \n                idAlreadyExist = true\n            }\n        })    \n        \n        if (idAlreadyExist !== true && users !== undefined) {\n            users.map((user) => {\n                if (user !== null && user !== undefined && user.id === e.target.value) {                    \n                    setTeamPlayers([...teamPlayers, {pseudo: user.pseudo, id: user.id}])\n                } \n            })\n        }\n    }\n\n    const handleAddPlayerToTeam = (e: any, teamId: string | number) => {\n        e.preventDefault()\n\n        const teamPlayerObj = {\n            teamPlayers,\n            teamId,\n            playing : false,\n            idRoom\n        }\n\n        setTeamPlayers([])\n        setDisplayAddPlayer(!displayAddPlayer)\n        \n        socketRef.current.emit(\"place player in team\", teamPlayerObj)\n    }\n\n    const handleRemovePlayer = (playerId: string | number | undefined, teamId: string | number) => {        \n        \n        const removePlayerObj = {\n            playerId,\n            teamId,\n            playing : false,\n            idRoom\n        }\n        \n        socketRef.current.emit(\"remove player from team\", removePlayerObj)\n    }\n\n    const handleRemoveTeam = (teamId: string | number) => {\n        const removeTeamObj = {\n            teamId,\n            idRoom\n        }\n\n        socketRef.current.emit(\"remove team\", removeTeamObj)\n    }\n\n    // const handleRemovePlayerFromPreviewTeam = (playerId: string | number | undefined,) => {\n    //     setTeamPlayers(prevTeamPlayers => (\n    //         prevTeamPlayers.filter((player) => player.id !== playerId)\n    //     ))        \n    // }\n\n    return (\n        <div className=\"team col-md-7 slide\">\n            <div>\n                <h3 className=\"mt-2\">Équipes</h3>\n                <form onSubmit={handleCreateTeam}>\n                    <input value={teamName} onChange={(e) => setTeamName(e.target.value)} placeholder=\"Nom de l'équipe\" className=\"mx-2 mon-input\" type=\"text\"/>\n                    <button type=\"submit\" className=\"mx-2 mon-bouton\">Valider</button>\n                </form>\n            </div> \n                <ul className=\"row justify-content-center mt-4 px-3\">\n                    { teams !== undefined\n                        ? teams.map((team, index) => {                        \n                            return <li className=\"p-1 my-2 col-md-6 slide\" key={index}>\n                                    <div className=\"team-border\">\n                                        <i onClick={() => handleRemoveTeam(team.idTeam)} className=\"mon-bouton rounded-circle fas fa-times\"></i>\n                                        <h4>{team.name}</h4>\n                                        <div className=\"row p-1 justify-content-center\">     \n                                        <ul className=\"col-md-8\">\n                                                {team.players.map((player, index) => {\n                                                    return <li className=\"grow\" key={index}>{player.pseudo} <i onClick={() => handleRemovePlayer(player.id, team.idTeam)} className=\"fas fa-times-circle\"></i></li>\n                                                })}\n                                            </ul>                                       \n                                            <button className=\"col-md-4 my-2 room-bouton rounded\" onClick={() => displayAddPlayers(index)} type=\"button\">\n                                                Ajouter joueur <i className=\"fas fa-caret-down\"></i>\n                                            </button>                                            \n                                        </div>                                        \n                                        <div className=\"row justify-content-center\">\n                                            { displayAddPlayer && displayAddPlayerByTeamNumber === index\n                                                ? <form onSubmit={(e) => handleAddPlayerToTeam(e, team.idTeam)} className=\"col-md-10 p-1 team-form dropdown-unfold\">\n                                                    <select multiple={true} onChange={handleChangeSelect}>\n                                                        { users?.map((user, index) => {                                                            \n                                                            if (user.available === true) {\n                                                                return <option value={user.id} key={index}>{user.pseudo}</option>                                                                                                                                                                                                \n                                                            } \n                                                        })}\n                                                    </select>\n                                                    <ul>\n                                                        { teamPlayers.map((player, index) => {\n                                                            return <li className=\"slide preview-player\"\n                                                                       key={index}\n                                                                       id={`${player.id}`}>\n                                                                {player.pseudo} \n                                                                {/* <i onClick={() => handleRemovePlayerFromPreviewTeam(player.id)} \n                                                                   className=\"mx-1 fas fa-backspace\">\n                                                                </i>  */}\n                                                                <hr/>\n                                                            </li>\n                                                        })}\n                                                    </ul>\n                                                    <button className=\"orange-button\" type=\"submit\">\n                                                        <i className=\"fas fa-check\"></i>\n                                                    </button>\n                                                 </form>\n        \n                                                : ''\n                                            }\n                                        </div>                                        \n                                    </div>\n                                   </li>\n                        })\n\n                        : ''\n                    }\n                </ul>\n        </div>\n    )\n}\n\nexport default CreateTeams\n"]},"metadata":{},"sourceType":"module"}