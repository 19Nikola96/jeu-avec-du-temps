{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = ({\n  idRoom,\n  socketRef,\n  imPlaying\n}) => {\n  _s();\n\n  useEffect(() => {\n    socketRef.current.on(\"board erased\", bool => {\n      let canvas = document.getElementById('board');\n\n      if (canvas !== null) {\n        let ctx = canvas.getContext('2d');\n        let inputColor = document.querySelector('.color-brush');\n\n        if (inputColor !== null) {\n          inputColor.value = '#000';\n        }\n\n        ctx.clearRect(0, 0, 0, 0);\n        ctx.lineWidth = 4;\n        canvas.height = 400;\n      }\n    });\n\n    if (imPlaying === true) {\n      drawOnCanvas();\n    } else {\n      socketRef.current.on(\"canvas data drawn img\", dataDrawing => {\n        let canvas = document.getElementById('board');\n\n        if (canvas !== null) {\n          let ctx = canvas.getContext('2d');\n          ctx.lineWidth = dataDrawing.widthOfLine;\n          ctx.strokeStyle = dataDrawing.colorOfLine;\n          let image = new Image();\n\n          image.onload = function () {\n            ctx.drawImage(image, 0, 0);\n          };\n\n          image.src = dataDrawing.base64ImageData;\n        } // ctx.beginPath();\n        // ctx.moveTo(dataDrawing.last_mouse.x, dataDrawing.last_mouse.y);\n        // ctx.lineTo(dataDrawing.mouse.x, dataDrawing.mouse.y);\n        // ctx.closePath();\n        // ctx.stroke();\n\n      });\n    }\n  }, [imPlaying]);\n\n  const drawOnCanvas = () => {\n    let canvas = document.getElementById('board');\n    let ctx = canvas.getContext('2d'); // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n    // let sketch_style = getComputedStyle(sketch);\n\n    canvas.width = parseInt(getComputedStyle(canvas).getPropertyValue('width'));\n    canvas.height = parseInt(getComputedStyle(canvas).getPropertyValue('height'));\n    let mouse = {\n      x: 0,\n      y: 0\n    };\n    let last_mouse = {\n      x: 0,\n      y: 0\n    };\n    /* Mouse Capturing Work */\n\n    canvas.addEventListener('mousemove', function (e) {\n      last_mouse.x = mouse.x;\n      last_mouse.y = mouse.y;\n      mouse.x = e.pageX - this.offsetLeft;\n      mouse.y = e.pageY - this.offsetTop;\n    }, false);\n    /* Drawing on Paint App */\n\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'black';\n    canvas.addEventListener('mousedown', function (e) {\n      canvas.addEventListener('mousemove', onPaint, false);\n    }, false);\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', onPaint, false);\n    }, false);\n\n    let onPaint = function () {\n      ctx.beginPath();\n      ctx.moveTo(last_mouse.x, last_mouse.y);\n      ctx.lineTo(mouse.x, mouse.y);\n      ctx.closePath();\n      ctx.stroke();\n      let base64ImageData = canvas.toDataURL('image/png');\n      let drawingObj = {\n        idRoom,\n        last_mouse,\n        mouse,\n        widthOfLine: ctx.lineWidth,\n        colorOfLine: ctx.strokeStyle,\n        base64ImageData\n      };\n      socketRef.current.emit(\"canvas data drawn\", drawingObj);\n    };\n\n    requestAnimationFrame(onPaint);\n  };\n\n  const changePenWidth = e => {\n    var _document$querySelect;\n\n    let inputColor = document.querySelector('.color-brush');\n    let newLineWidth = parseFloat(e.currentTarget.getAttribute('class'));\n    (_document$querySelect = document.querySelector('.eraser')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.classList.remove('picked');\n    let allPenWidth = document.querySelectorAll('.pen-width li');\n    allPenWidth.forEach(penWidth => {\n      if (penWidth === e.currentTarget) {\n        penWidth.classList.add('picked');\n      } else {\n        penWidth.classList.remove('picked');\n      }\n    });\n    let canvas = document.getElementById('board');\n    let ctx = canvas.getContext('2d');\n    ctx.lineWidth = newLineWidth;\n    ctx.strokeStyle = inputColor.value;\n  };\n\n  const changePenColor = e => {\n    let newLineColor = e.currentTarget.value;\n    let canvas = document.getElementById('board');\n    let ctx = canvas.getContext('2d');\n    ctx.strokeStyle = newLineColor;\n  };\n\n  const changePenToEraser = e => {\n    let allPenWidth = document.querySelectorAll('.pen-width li');\n    e.currentTarget.classList.add('picked');\n    allPenWidth.forEach(penWidth => {\n      penWidth.classList.remove('picked');\n    });\n    let canvas = document.getElementById('board');\n    let ctx = canvas.getContext('2d');\n    ctx.strokeStyle = 'white';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-7\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => changePenColor(e),\n        className: \"color-brush\",\n        type: \"color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => changePenToEraser(e),\n        className: \"eraser\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pen-width\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"2 picked\",\n          onClick: e => changePenWidth(e),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 83\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"4\",\n          onClick: e => changePenWidth(e),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 76\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"10\",\n          onClick: e => changePenWidth(e),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 77\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"15\",\n          onClick: e => changePenWidth(e),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 77\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"30\",\n          onClick: e => changePenWidth(e),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 77\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"draw\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sketch\",\n        id: \"sketch\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"board\",\n          width: \"600\",\n          height: \"400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx"],"names":["React","useEffect","Board","idRoom","socketRef","imPlaying","current","on","bool","canvas","document","getElementById","ctx","getContext","inputColor","querySelector","value","clearRect","lineWidth","height","drawOnCanvas","dataDrawing","widthOfLine","strokeStyle","colorOfLine","image","Image","onload","drawImage","src","base64ImageData","width","parseInt","getComputedStyle","getPropertyValue","mouse","x","y","last_mouse","addEventListener","e","pageX","offsetLeft","pageY","offsetTop","lineJoin","lineCap","onPaint","removeEventListener","beginPath","moveTo","lineTo","closePath","stroke","toDataURL","drawingObj","emit","requestAnimationFrame","changePenWidth","newLineWidth","parseFloat","currentTarget","getAttribute","classList","remove","allPenWidth","querySelectorAll","forEach","penWidth","add","changePenColor","newLineColor","changePenToEraser"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { TeamObj } from '../Types';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n    imPlaying: boolean | undefined\n}\n\ntype mouseNumber = {\n    x: number\n    y: number\n}\n\ntype DrawData = {\n    idRoom: string | number\n    last_mouse: mouseNumber\n    mouse: mouseNumber\n    widthOfLine: number\n    colorOfLine: string\n    base64ImageData: string\n}\n\n\n\nconst Board: React.FC<Props>  = ({ idRoom, socketRef, imPlaying }) => {  \n    \n    useEffect(() => {\n        socketRef.current.on(\"board erased\", (bool: boolean) => {\n            let canvas = document.getElementById('board') as HTMLCanvasElement;  \n            \n            if (canvas !== null) {\n                let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;       \n            \n                let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n\n                if (inputColor !== null) {\n                    inputColor.value = '#000'\n                }\n                \n                ctx.clearRect(0, 0, 0, 0)\n                            \n                ctx.lineWidth = 4;\n\n                canvas.height = 400\n            }\n    \n            \n        })\n        \n        if (imPlaying === true) {\n            drawOnCanvas();\n        } else {\n            socketRef.current.on(\"canvas data drawn img\", (dataDrawing: DrawData) => {                                                        \n                let canvas = document.getElementById('board') as HTMLCanvasElement; \n                \n                if (canvas !== null) {\n                    let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n                    ctx.lineWidth = dataDrawing.widthOfLine;\n                    ctx.strokeStyle = dataDrawing.colorOfLine;\n\n                    let image = new Image()\n                    image.onload = function() {\n                        ctx.drawImage(image, 0, 0)\n                    }\n                    image.src = dataDrawing.base64ImageData\n                }\n\n\n                // ctx.beginPath();\n                // ctx.moveTo(dataDrawing.last_mouse.x, dataDrawing.last_mouse.y);\n                // ctx.lineTo(dataDrawing.mouse.x, dataDrawing.mouse.y);\n                // ctx.closePath();\n                // ctx.stroke();\n            })\n        }\n        \n    }, [imPlaying])\n\n    const drawOnCanvas = () => {\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n        \n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;        \n    \n        // let sketch = document.querySelector('#sketch') as HTMLDivElement;\n        // let sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(getComputedStyle(canvas).getPropertyValue('width'));\n        canvas.height = parseInt(getComputedStyle(canvas).getPropertyValue('height'));        \n    \n        let mouse = {x: 0, y: 0};\n        let last_mouse = {x: 0, y: 0};\n    \n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            \n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n    \n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n    \n    \n        /* Drawing on Paint App */\n        ctx.lineWidth = 2;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'black';\n    \n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n    \n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n\n        let onPaint = function() {      \n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            let base64ImageData = canvas.toDataURL('image/png')\n\n            let drawingObj = {\n                idRoom,\n                last_mouse,\n                mouse,\n                widthOfLine: ctx.lineWidth,\n                colorOfLine: ctx.strokeStyle,\n                base64ImageData\n            }\n\n            socketRef.current.emit(\"canvas data drawn\", drawingObj);\n        };\n\n        requestAnimationFrame(onPaint)\n\n    }     \n    \n    const changePenWidth = (e: any) => {  \n        let inputColor = document.querySelector('.color-brush') as HTMLInputElement\n        \n        let newLineWidth = parseFloat(e.currentTarget.getAttribute('class')) \n        document.querySelector('.eraser')?.classList.remove('picked')       \n\n        let allPenWidth = document.querySelectorAll('.pen-width li');\n\n        allPenWidth.forEach((penWidth) => {\n            if (penWidth === e.currentTarget) {                \n                penWidth.classList.add('picked')   \n            } else {\n                penWidth.classList.remove('picked')       \n            }\n        })\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        ctx.lineWidth = newLineWidth;\n        ctx.strokeStyle = inputColor.value;\n    }\n\n    const changePenColor = (e: any) => {\n        let newLineColor = e.currentTarget.value\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        ctx.strokeStyle = newLineColor;\n    }\n\n    const changePenToEraser = (e: any) => {    \n\n        let allPenWidth = document.querySelectorAll('.pen-width li');\n\n        e.currentTarget.classList.add('picked') \n\n        allPenWidth.forEach((penWidth) => {\n                penWidth.classList.remove('picked')       \n        })\n        \n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n        ctx.strokeStyle = 'white';\n    }\n\n    return (\n        <div className=\"col-md-7\">\n            <div className=\"row\">\n                <input onChange={(e) => changePenColor(e)} className=\"color-brush\" type=\"color\"/>\n                <div onClick={(e) => changePenToEraser(e)} className=\"eraser\"><i className=\"fas fa-eraser\"></i></div>\n                <ul className=\"pen-width\">\n                    <li className=\"2 picked\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                    <li className=\"4\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                    <li className=\"10\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                    <li className=\"15\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n                    <li className=\"30\" onClick={(e) => changePenWidth(e)} > <span></span> </li>\n            </ul>\n            </div>            \n            <section id=\"draw\">\n                <div className=\"sketch\" id=\"sketch\">\n                    <canvas id=\"board\" width=\"600\" height=\"400\"></canvas>    \n                </div>\n            </section>\n            \n        </div>\n    )\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}