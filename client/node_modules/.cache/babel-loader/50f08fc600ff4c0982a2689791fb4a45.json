{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  useEffect(() => {\n    drawOnCanvas();\n  }, []);\n\n  const drawOnCanvas = () => {\n    let canvas = document.getElementById('board');\n    let ctx = canvas.getContext('2d');\n    let sketch = document.querySelector('#sketch');\n    let sketch_style = getComputedStyle(sketch);\n    canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n    canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n    let mouse = {\n      x: 0,\n      y: 0\n    };\n    let last_mouse = {\n      x: 0,\n      y: 0\n    };\n    /* Mouse Capturing Work */\n\n    canvas.addEventListener('mousemove', function (e) {\n      console.log();\n      last_mouse.x = mouse.x;\n      last_mouse.y = mouse.y;\n      mouse.x = e.pageX - this.offsetLeft;\n      mouse.y = e.pageY - this.offsetTop;\n    }, false);\n    /* Drawing on Paint App */\n\n    ctx.lineWidth = 5;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    canvas.addEventListener('mousedown', function (e) {\n      canvas.addEventListener('mousemove', onPaint, false);\n    }, false);\n    canvas.addEventListener('mouseup', function () {\n      canvas.removeEventListener('mousemove', onPaint, false);\n    }, false);\n    let timeout;\n    let root = this;\n    let base64ImageData;\n\n    let onPaint = function () {\n      ctx.beginPath();\n      ctx.moveTo(last_mouse.x, last_mouse.y);\n      ctx.lineTo(mouse.x, mouse.y);\n      ctx.closePath();\n      ctx.stroke();\n\n      if (root.timeout != undefined) {\n        clearTimeout(root.timeout);\n      }\n\n      root.timeout = setTimeout(() => {\n        base64ImageData = canvas.toDataURL('image/png');\n      }, 1000);\n    };\n\n    console.log(base64ImageData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sketch\",\n      id: \"sketch\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"board\",\n        width: \"700\",\n        height: \"420\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Board, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Board.tsx"],"names":["React","useEffect","Board","drawOnCanvas","canvas","document","getElementById","ctx","getContext","sketch","querySelector","sketch_style","getComputedStyle","width","parseInt","getPropertyValue","height","mouse","x","y","last_mouse","addEventListener","e","console","log","pageX","offsetLeft","pageY","offsetTop","lineWidth","lineJoin","lineCap","strokeStyle","onPaint","removeEventListener","timeout","root","base64ImageData","beginPath","moveTo","lineTo","closePath","stroke","undefined","clearTimeout","setTimeout","toDataURL"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\n\nconst Board = () => {\n\n    useEffect(() => {\n\n        drawOnCanvas();\n        \n    }, [])\n\n    const drawOnCanvas = () => {\n        let canvas = document.getElementById('board') as HTMLCanvasElement;        \n\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    \n        let sketch = document.querySelector('#sketch') as HTMLDivElement;\n        let sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n    \n        let mouse = {x: 0, y: 0};\n        let last_mouse = {x: 0, y: 0};\n    \n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            console.log();\n            \n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n    \n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n    \n    \n        /* Drawing on Paint App */\n        ctx.lineWidth = 5;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n    \n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n    \n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        let timeout;\n        let root: any = this;\n        let base64ImageData;\n    \n        let onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n\n            if (root.timeout != undefined) {\n                clearTimeout(root.timeout)\n            }\n\n            root.timeout = setTimeout(() => {\n                base64ImageData = canvas.toDataURL('image/png')\n            }, 1000)\n        };\n\n        console.log(base64ImageData);\n        \n    }      \n\n    return (\n        <div>\n            <div className=\"sketch\" id=\"sketch\">\n                <canvas id=\"board\" width=\"700\" height=\"420\"></canvas>    \n            </div>\n        </div>\n    )\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}