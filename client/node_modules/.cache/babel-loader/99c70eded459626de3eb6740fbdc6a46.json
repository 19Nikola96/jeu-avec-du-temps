{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Room = ({\n  roomData\n}) => {\n  _s();\n\n  const [dataRoom, setDataRoom] = useState();\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n    socketRef.current.on(\"share rooms\", usersData => {\n      setDataRoom(usersData);\n      Object.keys(usersData).map(id => {\n        if (id === roomData.id) {\n          console.table(usersData[id].users);\n        }\n      });\n    });\n  }, []);\n  const inputRef = React.useRef();\n\n  const copyLink = e => {\n    inputRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Room: \", roomData === undefined ? '' : roomData.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \"Id:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"mon-input\",\n      ref: inputRef,\n      type: \"text\",\n      defaultValue: roomData === undefined ? '' : roomData.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bouton mx-2\",\n      onClick: e => copyLink(e),\n      style: {\n        marginLeft: '1rem'\n      },\n      children: \"Copier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), \"users\", console.log(dataRoom), dataRoom !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(dataRoom).map(id => {\n        if (id === roomData.id) {\n          console.table(dataRoom[id].users);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Room, \"UFNox3LBwQ8QRAiE3i25Us56e5c=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Room.tsx"],"names":["React","useRef","useEffect","useState","io","Room","roomData","dataRoom","setDataRoom","socketRef","current","connect","on","usersData","Object","keys","map","id","console","table","users","inputRef","copyLink","e","select","document","execCommand","target","focus","undefined","name","marginLeft","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAOA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AAEA,QAAMM,SAAsC,GAAGR,MAAM,EAArD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,SAAS,CAACC,OAAV,GAAoBN,EAAE,CAACO,OAAH,CAAW,GAAX,CAApB;AAEAF,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqB,aAArB,EAAqCC,SAAD,IAAmC;AACnEL,MAAAA,WAAW,CAACK,SAAD,CAAX;AAEAC,MAAAA,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,GAAvB,CAA4BC,EAAD,IAAQ;AAC/B,YAAIA,EAAE,KAAKX,QAAQ,CAACW,EAApB,EAAwB;AACpBC,UAAAA,OAAO,CAACC,KAAR,CAAcN,SAAS,CAACI,EAAD,CAAT,CAAcG,KAA5B;AACH;AACJ,OAJD;AAMH,KATD;AAUH,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAMC,QAAQ,GAAGrB,KAAK,CAACC,MAAN,EAAjB;;AAEA,QAAMqB,QAAQ,GAAIC,CAAD,IAAY;AACzBF,IAAAA,QAAQ,CAACX,OAAT,CAAiBc,MAAjB;AAEAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AAEAH,IAAAA,CAAC,CAACI,MAAF,CAASC,KAAT;AACH,GAND;;AAQA,sBACI;AAAA,yBACWtB,QAAQ,KAAKuB,SAAb,GAAyB,EAAzB,GAA8BvB,QAAQ,CAACwB,IADlD,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,sBAII;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,GAAG,EAAET,QAAlC;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,YAAY,EAAEf,QAAQ,KAAKuB,SAAb,GAAyB,EAAzB,GAA8BvB,QAAQ,CAACW;AAA7G;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAGM,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAAxD;AAA6D,MAAA,KAAK,EAAE;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,WAQKb,OAAO,CAACc,GAAR,CAAYzB,QAAZ,CARL,EASMA,QAAQ,KAAKsB,SAAb,gBACI;AAAA,gBAEMf,MAAM,CAACC,IAAP,CAAYR,QAAZ,EAAsBS,GAAtB,CAA2BC,EAAD,IAAQ;AAC9B,YAAIA,EAAE,KAAKX,QAAQ,CAACW,EAApB,EAAwB;AACpBC,UAAAA,OAAO,CAACC,KAAR,CAAcZ,QAAQ,CAACU,EAAD,CAAR,CAAaG,KAA3B;AACH;AACJ,OAJD;AAFN;AAAA;AAAA;AAAA;AAAA,YADJ,GAWI,EApBV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAzDD;;GAAMf,I;;KAAAA,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport { AdminObj, DataRoomObj, DataRoomObjWithKey, RoomObj } from '../Types'\n\ntype Props = {\n    roomData: RoomObj\n}\n\nconst Room: React.FC<Props> = ({ roomData }) => {\n\n    const [dataRoom, setDataRoom] = useState<DataRoomObjWithKey>()\n\n    const socketRef: React.MutableRefObject<any> = useRef()\n\n    useEffect(() => {\n        socketRef.current = io.connect('/')\n\n        socketRef.current.on(\"share rooms\", (usersData: DataRoomObjWithKey) => {\n            setDataRoom(usersData);\n\n            Object.keys(usersData).map((id) => {\n                if (id === roomData.id) {\n                    console.table(usersData[id].users)                            \n                }\n            })\n\n        })\n    }, [])\n\n    const inputRef = React.useRef() as React.MutableRefObject<HTMLInputElement>;\n\n    const copyLink = (e: any) => {\n        inputRef.current.select();\n\n        document.execCommand('copy');\n\n        e.target.focus();\n    }\n\n    return (\n        <div>\n            Room: {roomData === undefined ? '' : roomData.name}\n            <br/>\n            Id:\n            <input className=\"mon-input\" ref={inputRef} type=\"text\" defaultValue={roomData === undefined ? '' : roomData.id}/>\n            <button className=\"bouton mx-2\" onClick={(e) => copyLink(e)} style={{ marginLeft: '1rem'}}>Copier</button>\n            <br/>\n            users\n            {console.log(dataRoom)}\n            { dataRoom !== undefined\n                ? <div>\n                    {\n                        Object.keys(dataRoom).map((id) => {\n                            if (id === roomData.id) {\n                                console.table(dataRoom[id].users)                            \n                            }\n                        })\n                    }\n                </div>\n\n                : ''\n            }\n            \n        </div>\n    )\n}\n\nexport default Room\n"]},"metadata":{},"sourceType":"module"}