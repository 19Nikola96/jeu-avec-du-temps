{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chrono from './Chrono';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game1 = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const yourPlayingRef = useRef(false);\n  const [displayEndTurn, setDisplayEndTurn] = useState(false);\n  const [words, setWords] = useState([]);\n  const [actualWord, setActualWord] = useState();\n  const [actualRound, setActualRound] = useState();\n  const [actualPoints, setActualPoints] = useState(0);\n  const [actualTeam, setActualTeam] = useState();\n  const [actualPlayer, setActualPlayer] = useState();\n  const [users, setUsers] = useState();\n\n  const getRandomInteger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  useEffect(() => {\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      setActualRound(rulesData.round);\n    }); // Surement Ã  modifier\n\n    socketRef.current.emit(\"ask words\", idRoom);\n    socketRef.current.on(\"words\", words => {\n      let randomNumber = getRandomInteger(0, words.round1.length - 1);\n      words.round1.forEach((word, index) => {\n        if (randomNumber === index) {\n          setActualWord(word);\n        }\n      });\n      setWords(words.round1);\n    });\n    socketRef.current.on(\"points\", points => {\n      setActualPoints(points);\n    });\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      teams.forEach(team => {\n        if (team.playing === true) {\n          setActualTeam(team.name);\n        }\n      });\n    });\n    socketRef.current.emit(\"ask users\", idRoom);\n    socketRef.current.on(\"users\", usersData => {\n      // Set the actual player by the playing property\n      usersData.forEach(player => {\n        if (player.playing === true) {\n          setActualPlayer(player.pseudo);\n        }\n      });\n      usersData.forEach(user => {\n        if (user.id === socketRef.current.id && user.playing === true) {\n          yourPlayingRef.current = true;\n        }\n      });\n      setUsers(usersData);\n    });\n  }, []);\n\n  const goodRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n        words.splice(index, 1);\n      }\n    });\n    let addPointObj = {\n      idRoom,\n      idPlayer: socketRef.current.id\n    };\n    socketRef.current.emit(\"add point\", addPointObj); // Points\n  };\n\n  const passRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n\n    do {\n      randomNumber = getRandomInteger(0, words.length - 1);\n    } while (words[randomNumber] === actualWord);\n\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center\",\n    children: [console.log(words), console.log(users), /*#__PURE__*/_jsxDEV(Chrono, {\n      socketRef: socketRef,\n      idRoom: idRoom,\n      setDisplayEndTurn: setDisplayEndTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), yourPlayingRef.current === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => passRandomWord(),\n        className: \"btn btn-primary col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-light col-md-2\",\n        children: actualWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goodRandomWord(),\n        className: \"btn btn-primary col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Points: \", actualPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-light\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [actualPlayer, \" de la team \", actualTeam, \" a rapport\\xE9 \", actualPoints, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game1, \"Ba/EtaXSu0YypqUQoy3cenjlSc0=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx"],"names":["React","useState","useEffect","useRef","Chrono","Game1","idRoom","socketRef","yourPlayingRef","displayEndTurn","setDisplayEndTurn","words","setWords","actualWord","setActualWord","actualRound","setActualRound","actualPoints","setActualPoints","actualTeam","setActualTeam","actualPlayer","setActualPlayer","users","setUsers","getRandomInteger","min","max","Math","floor","random","current","emit","on","rulesData","round","randomNumber","round1","length","forEach","word","index","points","teams","team","playing","name","usersData","player","pseudo","user","id","goodRandomWord","splice","addPointObj","idPlayer","passRandomWord","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport { AdminObj, RulesObj, TeamObj, WordsObj } from '../Types'\nimport Chrono from './Chrono'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n\n    const [displayEndTurn, setDisplayEndTurn] = useState<boolean>(false);\n\n    const [words, setWords] = useState<string []>([]);\n    const [actualWord, setActualWord] = useState<string>();\n    const [actualRound, setActualRound] = useState<number>();\n    const [actualPoints, setActualPoints] = useState<number>(0);\n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    const getRandomInteger = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setActualRound(rulesData.round)\n        }) // Surement Ã  modifier\n\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: WordsObj) => {\n            let randomNumber = getRandomInteger(0, words.round1.length - 1)\n\n            words.round1.forEach((word, index) => {\n                if (randomNumber === index) {\n                    setActualWord(word)\n                }\n            })\n            setWords(words.round1);\n        });\n\n        socketRef.current.on(\"points\", (points: number) => {\n            setActualPoints(points);\n        });\n\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    setActualTeam(team.name)\n                }\n            })\n        });\n\n        socketRef.current.emit(\"ask users\", idRoom)\n        \n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {\n            // Set the actual player by the playing property\n            usersData.forEach((player) => {\n                if (player.playing === true) {                    \n                    setActualPlayer(player.pseudo)\n                }\n            })            \n\n            usersData.forEach((user) => {\n                if (user.id === socketRef.current.id && user.playing === true) {                    \n                    yourPlayingRef.current = true\n                }\n            })\n\n            setUsers(usersData);\n        })\n    }, [])\n\n    const goodRandomWord = () => {        \n        let randomNumber = getRandomInteger(0, words.length - 1)\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n                words.splice(index, 1)                    \n            }\n        })        \n\n        let addPointObj = {\n            idRoom,\n            idPlayer: socketRef.current.id\n        }\n\n        socketRef.current.emit(\"add point\", addPointObj);\n        // Points\n    }\n\n    const passRandomWord = () => {\n        let randomNumber = getRandomInteger(0, words.length - 1)\n        \n        do {\n            randomNumber = getRandomInteger(0, words.length - 1)\n        } while (words[randomNumber] === actualWord);\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n            }\n        })\n    }\n\n    return (\n        <div className=\"row justify-content-center\">\n            {console.log(words)}\n            {console.log(users)}\n            \n            <Chrono socketRef={socketRef} idRoom={idRoom} setDisplayEndTurn={setDisplayEndTurn} />\n\n            { yourPlayingRef.current === true\n                ? <div>\n                    <button onClick={() => passRandomWord()} className=\"btn btn-primary col-md-2\">\n                    <i className=\"fas fa-times\"></i>\n                    </button>\n                    <p className=\"text-light col-md-2\">{actualWord}</p>\n                    <button onClick={() => goodRandomWord()} className=\"btn btn-primary col-md-2\">\n                        <i className=\"fas fa-check\"></i>\n                    </button>\n                    <p>Points: {actualPoints}</p>\n                  </div> \n\n                : <div className=\"text-light\">\n                    <p>{actualPlayer} de la team {actualTeam} a rapportÃ© {actualPoints} points</p>\n                  </div>  \n            }                                                \n        </div>\n    )\n}\n\nexport default Game1\n"]},"metadata":{},"sourceType":"module"}