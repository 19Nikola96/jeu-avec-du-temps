{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game1 = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const yourPlayingRef = useRef(false);\n  const [words, setWords] = useState([]);\n  const [actualWord, setActualWord] = useState();\n  const [actualRound, setActualRound] = useState();\n  const [actualPoints, setActualPoints] = useState(0);\n  const [users, setUsers] = useState();\n\n  const getRandomInteger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  useEffect(() => {\n    socketRef.current.emit(\"ask rules\", idRoom);\n    socketRef.current.on(\"rules\", rulesData => {\n      setActualRound(rulesData.round);\n    }); // Surement Ã  modifier\n\n    socketRef.current.emit(\"ask words\", idRoom);\n    socketRef.current.on(\"words\", words => {\n      let randomNumber = getRandomInteger(0, words.round1.length - 1);\n      words.round1.forEach((word, index) => {\n        if (randomNumber === index) {\n          setActualWord(word);\n        }\n      });\n      setWords(words.round1);\n    });\n    socketRef.current.on(\"points\", points => {\n      setActualPoints(points);\n    });\n    socketRef.current.on(\"users\", usersData => {\n      setUsers(usersData);\n    });\n  }, []);\n\n  const goodRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n        words.splice(index, 1);\n      }\n    });\n    let addPointObj = {\n      idRoom,\n      idPlayer: socketRef.current.id\n    };\n    socketRef.current.emit(\"add point\", addPointObj); // Points\n  };\n\n  const passRandomWord = () => {\n    let randomNumber = getRandomInteger(0, words.length - 1);\n\n    do {\n      randomNumber = getRandomInteger(0, words.length - 1);\n    } while (words[randomNumber] === actualWord);\n\n    words.forEach((word, index) => {\n      if (randomNumber === index) {\n        setActualWord(word);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center\",\n    children: [console.log(words), users === null || users === void 0 ? void 0 : users.forEach(user => {\n      if (user.id === socketRef.current.id && user.playing === true) {\n        yourPlayingRef.current = true;\n      }\n    }), yourPlayingRef.current ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => passRandomWord(),\n        className: \"btn btn-primary col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-light col-md-2\",\n        children: actualWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goodRandomWord(),\n        className: \"btn btn-primary col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Points: \", actualPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-light\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [actualPlayer, \" de la team \", actualTeam, \" a rapport\\xE9 \", actualPoints, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game1, \"6kMVxfwfmG+1snGdzYSXblrfRag=\");\n\n_c = Game1;\nexport default Game1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game1\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/Game1.tsx"],"names":["React","useState","useEffect","useRef","Game1","idRoom","socketRef","yourPlayingRef","words","setWords","actualWord","setActualWord","actualRound","setActualRound","actualPoints","setActualPoints","users","setUsers","getRandomInteger","min","max","Math","floor","random","current","emit","on","rulesData","round","randomNumber","round1","length","forEach","word","index","points","usersData","goodRandomWord","splice","addPointObj","idPlayer","id","passRandomWord","console","log","user","playing","actualPlayer","actualTeam"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport { AdminObj, RulesObj, WordsObj } from '../Types'\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\nconst Game1: React.FC<Props>  = ({ idRoom, socketRef }) => {\n\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n\n    const [words, setWords] = useState<string []>([]);\n    const [actualWord, setActualWord] = useState<string>();\n    const [actualRound, setActualRound] = useState<number>();\n    const [actualPoints, setActualPoints] = useState<number>(0);\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    const getRandomInteger = (min: number, max: number) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask rules\", idRoom)\n        socketRef.current.on(\"rules\", (rulesData: RulesObj) => {\n            setActualRound(rulesData.round)\n        }) // Surement Ã  modifier\n\n        socketRef.current.emit(\"ask words\", idRoom);\n        socketRef.current.on(\"words\", (words: WordsObj) => {\n            let randomNumber = getRandomInteger(0, words.round1.length - 1)\n\n            words.round1.forEach((word, index) => {\n                if (randomNumber === index) {\n                    setActualWord(word)\n                }\n            })\n            setWords(words.round1);\n        });\n\n        socketRef.current.on(\"points\", (points: number) => {\n            setActualPoints(points);\n        });\n\n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {                      \n            setUsers(usersData);\n        })\n    }, [])\n\n    const goodRandomWord = () => {        \n        let randomNumber = getRandomInteger(0, words.length - 1)\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n                words.splice(index, 1)                    \n            }\n        })        \n\n        let addPointObj = {\n            idRoom,\n            idPlayer: socketRef.current.id\n        }\n\n        socketRef.current.emit(\"add point\", addPointObj);\n        // Points\n    }\n\n    const passRandomWord = () => {\n        let randomNumber = getRandomInteger(0, words.length - 1)\n        \n        do {\n            randomNumber = getRandomInteger(0, words.length - 1)\n        } while (words[randomNumber] === actualWord);\n\n        words.forEach((word, index) => {\n            if (randomNumber === index) {\n                setActualWord(word)\n            }\n        })\n    }\n\n    return (\n        <div className=\"row justify-content-center\">\n            {console.log(words)}\n\n            { \n                users?.forEach((user) => {\n                    if (user.id === socketRef.current.id && user.playing === true) {\n                        yourPlayingRef.current = true\n                    }                            \n                })\n            }\n\n            { yourPlayingRef.current\n                ? <div>\n                    <button onClick={() => passRandomWord()} className=\"btn btn-primary col-md-2\">\n                    <i className=\"fas fa-times\"></i>\n                    </button>\n                    <p className=\"text-light col-md-2\">{actualWord}</p>\n                    <button onClick={() => goodRandomWord()} className=\"btn btn-primary col-md-2\">\n                        <i className=\"fas fa-check\"></i>\n                    </button>\n                    <p>Points: {actualPoints}</p>\n                  </div> \n\n                : <div className=\"text-light\">\n                    <p>{actualPlayer} de la team {actualTeam} a rapportÃ© {actualPoints} points</p>\n                  </div>                        \n            }    \n            \n        </div>\n    )\n}\n\nexport default Game1\n"]},"metadata":{},"sourceType":"module"}