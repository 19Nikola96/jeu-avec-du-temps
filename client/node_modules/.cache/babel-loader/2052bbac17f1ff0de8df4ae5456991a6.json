{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartGame = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [startGamePreview, setStartGamePreview] = useState(false);\n  const yourPlayingRef = useRef(false); // DISPLAY\n\n  const [actualTeam, setActualTeam] = useState();\n  const [actualPlayer, setActualPlayer] = useState();\n  const [actualPlayerId, setActualPlayerId] = useState();\n  const [teams, setTeams] = useState();\n  const [teamPlayers, setTeamPlayers] = useState([]);\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      teams.forEach(team => {\n        if (team.playing === true) {\n          setActualTeam(team.name);\n        }\n      });\n    });\n    socketRef.current.emit(\"ask users\", idRoom);\n    socketRef.current.on(\"users\", usersData => {\n      usersData.forEach(player => {\n        if (player.playing === true) {\n          setActualPlayer(player.pseudo);\n          setActualPlayerId(player.id);\n        }\n      });\n      usersData.forEach(user => {\n        if (user.id === socketRef.current.id && user.playing === true) {\n          console.log('you\\'re playing');\n          yourPlayingRef.current = true;\n        } else {\n          console.log('your\\'re not playing');\n        }\n      });\n      setUsers(usersData);\n    });\n  }, []);\n\n  const startGame = () => {\n    setStartGamePreview(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    style: {\n      height: '70vh'\n    },\n    children: startGamePreview ? /*#__PURE__*/_jsxDEV(Game1, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: yourPlayingRef.current === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-light\",\n          children: \"C'est \\xE0 toi de jouer !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame(),\n          className: \"start-bouton\",\n          children: \"Let's Go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [actualPlayer, \" de la team \", actualTeam, \" s'appr\\xEAte \\xE0 jouer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 27\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StartGame, \"xN23sy5e4QOrXGjdOwI2KPTq1Ww=\");\n\n_c = StartGame;\nexport default StartGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartGame\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx"],"names":["React","useEffect","useRef","useState","Game1","StartGame","idRoom","socketRef","startGamePreview","setStartGamePreview","yourPlayingRef","actualTeam","setActualTeam","actualPlayer","setActualPlayer","actualPlayerId","setActualPlayerId","teams","setTeams","teamPlayers","setTeamPlayers","users","setUsers","current","emit","on","forEach","team","playing","name","usersData","player","pseudo","id","user","console","log","startGame","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { AdminObj, RulesObj, TeamObj } from '../Types';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n}\n\nconst StartGame: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [startGamePreview, setStartGamePreview] = useState<boolean>(false)\n    const yourPlayingRef: React.MutableRefObject<boolean | undefined> = useRef(false)\n    // DISPLAY\n    \n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n    const [actualPlayerId, setActualPlayerId] = useState<string | number | undefined>()\n\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            teams.forEach((team) => {\n                if (team.playing === true) {                    \n                    setActualTeam(team.name)\n                }\n            })\n        });\n\n        socketRef.current.emit(\"ask users\", idRoom)\n        \n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {          \n            \n            usersData.forEach((player) => {\n                if (player.playing === true) {\n                    \n                    setActualPlayer(player.pseudo)\n                    setActualPlayerId(player.id)\n                }\n            })            \n\n            usersData.forEach((user) => {\n                if (user.id === socketRef.current.id && user.playing === true) {\n                    console.log('you\\'re playing');\n                    \n                    yourPlayingRef.current = true\n                } else {\n                    console.log('your\\'re not playing');                                   \n                }   \n            })\n\n            setUsers(usersData);\n        })\n    }, [])\n\n    const startGame = () => {\n        setStartGamePreview(true)\n    }\n\n    return (\n        <div className=\"row justify-content-center align-items-center\" style={{height: '70vh'}}>\n            { startGamePreview\n                ? <Game1 socketRef={socketRef} idRoom={idRoom}/>\n\n                : <>\n                    { yourPlayingRef.current === true\n                        ? <div>\n                                <p className=\"text-light\">C'est à toi de jouer !</p>\n                                <button onClick={() => startGame()} className=\"start-bouton\">Let's Go</button>\n                          </div> \n\n                        : <div className=\"text-light\">\n                            <p>{actualPlayer} de la team {actualTeam} s'apprête à jouer</p>\n                          </div>                        \n                    }     \n                </>      \n            }            \n        </div>\n    )\n}\n\nexport default StartGame\n"]},"metadata":{},"sourceType":"module"}