{"ast":null,"code":"var _jsxFileName = \"/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartGame = ({\n  idRoom,\n  socketRef\n}) => {\n  _s();\n\n  const [startGamePreview, setStartGamePreview] = useState(false); // DISPLAY\n\n  const [actualTeam, setActualTeam] = useState();\n  const [actualPlayer, setActualPlayer] = useState();\n  const [actualPlayerId, setActualPlayerId] = useState();\n  const [teams, setTeams] = useState();\n  const [teamPlayers, setTeamPlayers] = useState([]);\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    socketRef.current.emit(\"ask teams\", idRoom);\n    socketRef.current.on(\"teams\", teams => {\n      console.log(teams);\n      setTeams(teams);\n      setActualTeam(teams[0].name);\n      setActualPlayer(teams[0].players[0].pseudo);\n      setActualPlayerId(teams[0].players[0].id);\n      console.log(teams[0].players[0].id);\n    });\n    socketRef.current.emit(\"ask users\", idRoom);\n    socketRef.current.on(\"users\", usersData => {\n      setUsers(usersData);\n    });\n    console.log(socketRef.current.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    style: {\n      height: '70vh'\n    },\n    children: startGamePreview ? /*#__PURE__*/_jsxDEV(Game1, {\n      socketRef: socketRef,\n      idRoom: idRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [users === null || users === void 0 ? void 0 : users.map(user => {\n        if (user.id === socketRef.current.id && user.playing === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-light\",\n              children: \"C'est \\xE0 toi de jouer !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setStartGamePreview(true),\n              className: \"start-bouton\",\n              children: \"Let's Go\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 40\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [actualPlayer, \" de la team \", actualTeam, \" s'appr\\xEAte \\xE0 jouer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StartGame, \"MgcSb6TOE1309Ah+eBMUKusImpo=\");\n\n_c = StartGame;\nexport default StartGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartGame\");","map":{"version":3,"sources":["/Users/nikolamorice-gallier/Desktop/Work/online-timesup/client/src/Components/StartGame.tsx"],"names":["React","useEffect","useState","Game1","StartGame","idRoom","socketRef","startGamePreview","setStartGamePreview","actualTeam","setActualTeam","actualPlayer","setActualPlayer","actualPlayerId","setActualPlayerId","teams","setTeams","teamPlayers","setTeamPlayers","users","setUsers","current","emit","on","console","log","name","players","pseudo","id","usersData","height","map","user","playing"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { AdminObj, TeamObj } from '../Types';\nimport Game1 from './Game1';\nimport './Style/startGame.css';\n\ntype Props = {\n    idRoom: string | number\n    socketRef: React.MutableRefObject<any>\n}\n\ntype TeamPlayers = {\n    id: string | number | undefined\n    pseudo: string | null | undefined\n}\n\nconst StartGame: React.FC<Props> = ({ idRoom, socketRef }) => {\n\n    const [startGamePreview, setStartGamePreview] = useState<boolean>(false)\n    // DISPLAY\n\n    const [actualTeam, setActualTeam] = useState<string>()\n    const [actualPlayer, setActualPlayer] = useState<string | null | undefined>()\n    const [actualPlayerId, setActualPlayerId] = useState<string | number | undefined>()\n\n    const [teams, setTeams] = useState<TeamObj[]>()\n    const [teamPlayers, setTeamPlayers] = useState<TeamPlayers []>([])\n\n    const [users, setUsers] = useState<AdminObj[]>()\n\n\n\n    useEffect(() => {\n        socketRef.current.emit(\"ask teams\", idRoom);\n        socketRef.current.on(\"teams\", (teams: TeamObj []) => {\n            console.log(teams);\n            setTeams(teams)\n            setActualTeam(teams[0].name)\n            setActualPlayer(teams[0].players[0].pseudo)\n            setActualPlayerId(teams[0].players[0].id)\n            console.log(teams[0].players[0].id);\n        });\n\n\n        socketRef.current.emit(\"ask users\", idRoom)\n        \n        socketRef.current.on(\"users\", (usersData: AdminObj []) => {                      \n            setUsers(usersData);\n        })\n        console.log(socketRef.current.id);\n        \n    }, [])\n\n    return (\n        <div className=\"row justify-content-center align-items-center\" style={{height: '70vh'}}>\n            { startGamePreview\n                ? <Game1 socketRef={socketRef} idRoom={idRoom}/>\n\n                : <>\n                    { \n                        users?.map((user) => {\n                            if (user.id === socketRef.current.id && user.playing === true) {\n                                return <div>\n                                            <p className=\"text-light\">C'est à toi de jouer !</p>\n                                            <button onClick={() => setStartGamePreview(true)} className=\"start-bouton\">Let's Go</button>\n                                       </div> \n                            }                            \n                        })\n                    }\n\n                    <div className=\"text-light\">\n                        <p>{actualPlayer} de la team {actualTeam} s'apprête à jouer</p>\n                    </div>         \n                </>      \n            }            \n        </div>\n    )\n}\n\nexport default StartGame\n"]},"metadata":{},"sourceType":"module"}